(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[540],{72750:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>l});var a=n(87462),s=(n(67294),n(3905)),i=n(65488),r=n(85162),o=n(57643);const d={toc:[]};function l(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("br",null),(0,s.kt)("details",null,(0,s.kt)("summary",null,(0,s.kt)("span",{className:"open"},"API Authentication"),(0,s.kt)("span",{className:"closed"},"Click to view API Authentication details")),(0,s.kt)("div",null,"API calls require authentication with API key via ",(0,s.kt)("code",null,"Authorization")," ","request header or ",(0,s.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,s.kt)("strong",null,n.network," ",n.service)," ","endpoint, hosted at ",(0,s.kt)("code",null,n.url),(0,s.kt)("br",null),(0,s.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${n.url}${n.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,s.kt)(r.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${n.url}/apikey/{{apikey}}${n.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,s.kt)(r.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${n.url}${n.route}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,s.kt)(r.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${n.url}/apikey/{{apikey}}${n.route}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`)))))}l.isMDXComponent=!0},33976:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var a=n(67294),s=n(16550);function i(e){let{network:t,networks:n,methods:i,service:r}=e;const o=(0,s.TH)(),d=(0,s.k6)();return a.createElement("div",null,a.createElement("label",null,"Change Network: "),a.createElement("select",{className:"custom-select",defaultValue:t,onChange:e=>{d.push(o.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},n.map((e=>a.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),a.createElement("label",null," Jump to: "),a.createElement("select",{className:"custom-select",defaultValue:o.hash.replace("#","")||"",onChange:e=>{d.push(`#${e.target.value}`)}},i.map((e=>a.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},27297:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(67294);function s(e){let{network:t,service:n}=e;return(0,a.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=t;let a=e.previousElementSibling;a=a.cloneNode(!0),a.querySelector(".breadcrumbs__link span").innerHTML=n.label,a.querySelector(".breadcrumbs__link").href=n.link,e.insertAdjacentElement("beforebegin",a)}),[t]),a.createElement(a.Fragment,null)}},89638:(e,t,n)=>{"use strict";n.d(t,{S:()=>N});var a=n(87462),s=n(67294),i=n(58538),r=n(67748),o=n(30381),d=n.n(o);const l={days:()=>({start:new Date(Date.now()-864e5).toISOString().split("T")[0],end:(new Date).toISOString().split("T")[0]}),polkadot(){const e=d()("2022-10-26","YYYY-MM-DD"),t=d()().diff(e,"days")+1,n=876+Math.ceil(1*t);return{start:n-30,end:n}},solana(){const e=Math.ceil(10.5),t=d()("2022-10-25","YYYY-MM-DD"),n=d()().diff(t,"days")+1,a=363+Math.ceil(.35*n);return{start:a-e,end:a}},near(){const e=4593.6*25,t=Math.ceil(7*e),n=d()("2022-10-25","YYYY-MM-DD"),a=d()().diff(n,"days")+1,s=76953090+Math.ceil(a*e);return{start:s-t-Math.ceil(100*e),end:s+Math.ceil(100*e)}}};var u=n(40460),c=n.n(u),p=n(23746),m=n(66412);const g={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function h(e){let{children:t="",header:n,actions:i,disabled:r=!1,status:o,onValueChange:d}=e;const l=(0,m.p)(),u=(0,s.useRef)(null);(0,s.useEffect)((()=>{const e=u.current?.querySelector("textarea"),t=e=>{const t=e.target;t.style.width=t.scrollWidth+"px"};return e.addEventListener("input",t),()=>e.removeEventListener("input",t)}),[]);return s.createElement("div",{ref:u},s.createElement(_,{actions:i,status:o},n),s.createElement("div",{className:g.Container},s.createElement(c(),{value:t,onValueChange:d,highlight:function(e){return void 0===e&&(e=""),s.createElement(p.ZP,(0,a.Z)({},p.lG,{theme:l,code:e,language:"json"}),(e=>{let{className:t,style:n,tokens:i,getLineProps:r,getTokenProps:o}=e;return s.createElement("div",{className:g.Code},i.map(((e,t)=>s.createElement("div",(0,a.Z)({key:t},r({line:e,key:t}),{className:g.Line}),s.createElement("span",{className:g.LineContent},e.map(((e,t)=>s.createElement("span",(0,a.Z)({key:t},o({token:e,key:t}))))))))))}))},disabled:r,ignoreTabKey:!0,padding:10,style:{...l.plain,overflow:"auto"},className:g.Editor})))}function _(e){let{children:t,actions:n=[],status:a}=e;return s.createElement("div",{className:g.Header,"data-status":a},s.createElement("span",null,t),s.createElement("span",{className:g.Actions},n.map(((e,t)=>{let{title:n,onClick:a,Component:i=n}=e;return s.createElement("button",{className:g.HeaderButton,key:`${t}:${n}`,title:n,onClick:a},i)}))))}var b=n(10195);const y="overlayHeaderButton_IGf5";const k=function(e,t){const n=(0,s.useRef)(!1),a={error:void 0,data:void 0,loading:!1},[i,r]=(0,s.useReducer)(((e,t)=>{switch(t.type){case"loading":return{...a,loading:!0};case"fetched":return{...a,data:t.payload,loading:!1};case"error":return{...a,error:t.payload,loading:!1};default:return e}}),a);return{...i,fetchData:async function(a,s){void 0===s&&(s={}),r({type:"loading"});try{const i=await fetch(e+(a?`/${a}`:""),{...t,...s});if(!i.ok){let e,t,n;try{n=JSON.parse(await i.text()),e=await i.json(),t=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(t,null,2)||JSON.stringify(n,null,2)||i.statusText)}const o=await i.json();if(n.current)return;return r({type:"fetched",payload:o}),o}catch(i){if(n.current)return;return r({type:"error",payload:i.message}),null}}}};var f,v=n(57643),w=n(44672);function j(){return j=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},j.apply(this,arguments)}const E=e=>{let{title:t,titleId:n,...a}=e;return s.createElement("svg",j({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?s.createElement("title",{id:n},t):null,f||(f=s.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var A;function T(){return T=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},T.apply(this,arguments)}const x=e=>{let{title:t,titleId:n,...a}=e;return s.createElement("svg",T({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?s.createElement("title",{id:n},t):null,A||(A=s.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function C(e){let{req:t,res:n,interactive:a,endpoint:i}=e;const[r,o]=(0,s.useState)(q(t.body)),[d,l]=(0,s.useState)(t.query),[u,c]=(0,s.useState)(P(n.body)),[p,m]=(0,s.useState)(!1),g="string"==typeof t.body&&0==t.body.indexOf("query"),{data:_,error:f,loading:j,fetchData:A}=k(i,{method:t.method,headers:{...t.headers,"Content-Type":g?"application/graphql":"application/json"},body:q(t.body)}),[T,C]=(0,s.useState)(null);(0,s.useEffect)((()=>{j?C("LOADING"):f||_?.error?C("ERROR"):_&&C("SUCCESS")}),[_,f,j]);const S=[a?{title:"Run request",onClick:async()=>{const e=await A(d,{body:r});if(m(!1),i.includes("rewards")&&e.data&&e.data.length>10){console.clear(),console.log(e.data),m(!0);const t=e.data.slice(0,10);e.data=[...t]}e&&c(P(e))},Component:s.createElement(s.Fragment,null,s.createElement(E,null)," Run")}:null,{title:"Copy",onClick:()=>(0,b.Z)(r),Component:s.createElement(w.Z,{code:"",className:y})},a?{title:"Reset",onClick:()=>{C(null),l(t.query),o(q(t.body)),c(P(n.body))},Component:s.createElement(x,null)}:null].filter((e=>!!e)),O=p?"Partial Reponse (see console for full response)":"Response";return s.createElement(s.Fragment,null,s.createElement(h,{header:["GET","DELETE"].indexOf(t.method)>-1?"Request Query "+(a?"(try it)":""):"Request Body "+(a?"(try it)":""),actions:S,disabled:!a,onValueChange:e=>{a&&(["GET","DELETE"].indexOf(t.method)>-1?l(e):"POST"===t.method&&o(e))}},["GET","DELETE"].indexOf(t.method)>-1?d:r),s.createElement(v.Z,{title:T?O:"Example Response",language:"json"},f?`${f}`:u))}function P(e){return JSON.stringify(e,null,2)}function q(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const S="heading_REER";var O=n(39960),I=n(3905);const z={toc:[]};function D(e){let{components:t,...n}=e;return(0,I.kt)("wrapper",(0,a.Z)({},z,n,{components:t,mdxType:"MDXLayout"}),(0,I.kt)("details",{open:n.accordionOpen?"open":void 0},(0,I.kt)("summary",null,(0,I.kt)("span",{className:"open"},"Specification"),(0,I.kt)("span",{className:"closed"},"View Specification")),(0,I.kt)(i.D,{mdxType:"ReactMarkdown"},n.details)))}function Z(e){let{name:t,content:n="",interactive:a,network:r,request:o,accordionOpen:d=!1,response:u,endpoint:c}=e;const p=c.includes("rewards-api"),m=["by day","account","address"].find((e=>t.includes(e))),g=["by epoch","by era"].find((e=>t.includes(e)))||t.startsWith("SOL");if(p&&g){const{start:e,end:t}=l[r]();o.body={...o.body,start:e,end:t}}else if(p&&m){const{start:e,end:t}=l.days();o.body={...o.body,start:e,end:t}}const[h,..._]=n.trim().split(/\n+/),b=_.join("\n");return s.createElement(s.Fragment,null,s.createElement("h2",{id:t.toLowerCase(),className:S,"data-method":o.method},s.createElement(O.Z,{to:`#${t.toLowerCase()}`},t)),s.createElement(i.D,null,h),s.createElement(C,{req:o,res:u,interactive:a,endpoint:c}),s.createElement(D,{details:b,accordionOpen:d}),s.createElement("hr",null))}function N(e){let{network:t,methods:n,service:i,proxy:o}=e;return s.createElement(s.Fragment,null,s.createElement("h3",null,"Available Methods"),n.map(((e,n)=>s.createElement(Z,(0,a.Z)({key:t+n},e,{network:t,endpoint:`${o}/${i}/${t}`,accordionOpen:"node-api"!==i})))),s.createElement(r.Z,null))}D.isMDXComponent=!0},37120:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var a=n(87462),s=(n(67294),n(3905)),i=n(89638),r=n(33976),o=n(27297),d=n(72750);const l={title:"Ethereum",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Validator API - Ethereum",image:"img/logo.svg",keywords:["Validator API","Ethereum"]},u="Validator API - Ethereum",c={unversionedId:"api-reference/validator-api/ethereum",id:"api-reference/validator-api/ethereum",title:"Ethereum",description:"Validator API - Ethereum",source:"@site/docs/api-reference/validator-api/ethereum.mdx",sourceDirName:"api-reference/validator-api",slug:"/api-reference/validator-api/ethereum",permalink:"/api-reference/validator-api/ethereum",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Ethereum",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Validator API - Ethereum",image:"img/logo.svg",keywords:["Validator API","Ethereum"]},sidebar:"docsSidebar"},p={},m=[],g={toc:m};function h(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"validator-api---ethereum"},"Validator API - Ethereum"),(0,s.kt)(o.Z,{network:"Ethereum",service:{link:"/api-reference/validator-api",label:"Validator API"},mdxType:"FixBreadCrumbs"}),(0,s.kt)(r.Z,{service:"validator-api",methods:[{name:"/eth2_staking/positions"},{name:"/eth2_staking/positions"},{name:"/eth2_staking/positions/{position_id}/validators"},{name:"/eth2_staking/provision"},{name:"/eth2_staking/validators"},{name:"/eth2_staking/validators/{id}"}],networks:[{label:"Ethereum",value:"ethereum"},{label:"Polkadot",value:"polkadot"}],network:"ethereum",mdxType:"ApiReferenceNav"}),(0,s.kt)(d.ZP,{url:"https://hubble.figment.io/api/v1/prime",network:"Ethereum",service:"Validator API",route:"/eth2_staking/positions",mdxType:"MakingCalls"}),(0,s.kt)(i.S,{methods:[{name:"/eth2_staking/positions",content:'Request creation of new staking position with the passed attributes.\n\n### Parameters\n\n- `external_user_id` \u2014 `string` \u2014 A customer user ID.\n- `external_user_email` \u2014 `string` \u2014 A customer email address.\n- `withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n- `validators_count` \u2014 `integer` \u2014 A number of validators.\n- `eth2_network_name` \u2014 `string` \u2014 A network name, denoting testnet (`goerli`) or mainnet (`prater`).\n    \n\n### Response\n\n- `success` \u2014 `boolean` \u2014 Returns `true` if the action was successful, otherwise returns `false`.\n    \n\n### Webhook configuration\n\nUsers can be notified via webhook when a new staking position is created. Configure a webhook URL and a webhook API key under "Prime / ETH Staking" in the Prime Dashboard. The configured API key will be sent as an `Authorization` header. \n\n#### Note\n\nValidator API webhooks can only be configured from the Prime dashboard.',request:{method:"POST",header:[],body:{external_user_id:"user_id",external_user_email:"user@company.com",withdrawal_address:"0x01000000000000000000000003777debd25dcdbc4cdb56178906ac0ecac94019",validators_count:1,eth2_network_name:"goerli"},url:"https://hubble.figment.io/api/v1/prime",headers:{},query:"eth2_staking/positions"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/positions",body:{success:!0}}},{name:"/eth2_staking/positions",content:"Returns a list of staking positions.\n\n### Parameters\n\n- `withdrawal_address` \u2014 `string` \u2014 A withdrawal address (required)\n- `page[size]` \u2014 `integer` \u2014 The number of results to display, used for pagination (optional).\n- `page[number]` \u2014 `integer` \u2014 The number of pages to display (optional).\n- `fundable_positions_only` \u2014 `boolean` \u2014 `true` will display only positions which can be funded (optional).\n    \n\n### Response\n\n- `data` - `array`\n    - `object` \u2014 Each response object contains the following fields:\n        - `id` \u2014 A unique identifier.\n        - `type` \u2014 The type of staking position.\n        - `attributes`\n            - `id` \u2014 A unique identifier.\n            - `name` \u2014 A name.\n            - `eth1_withdrawal_address` \u2014 An Ethereum address.\n            - `staked_amount` \u2014 The amount of staked ETH.\n            - `validators_count` \u2014 A number of validators.\n            - `created_at` \u2014 Timestamp.\n            - `updated_at` \u2014 Timestamp.\n        - `links` \u2014 `object` \u2014 Pagination links based on `page[size]` and `page[number]`.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/positions?withdrawal_address=0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf&page[size]=10&page[number]=1&fundable_positions_only=false"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/positions",body:{data:[{id:"18",type:"position",attributes:{id:18,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",staked_amount:320,validators_count:10,created_at:"2021-10-04T14:28:25.497Z",updated_at:"2022-10-17T14:40:10.589Z",name:null}},{id:"20",type:"position",attributes:{id:20,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",staked_amount:320,validators_count:10,created_at:"2021-10-04T14:28:25.700Z",updated_at:"2022-10-17T14:40:10.578Z",name:null}},{id:"77",type:"position",attributes:{id:77,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",staked_amount:128,validators_count:4,created_at:"2022-03-21T13:30:54.214Z",updated_at:"2022-10-17T14:40:10.618Z",name:null}}],links:{self:"https://hubble.figment.io/api/v1/prime/eth2_staking/positions",current:"https://hubble.figment.io/api/v1/prime/eth2_staking/positions?page[number]=1"}}}},{name:"/eth2_staking/positions/{position_id}/validators",content:"Returns a list of validators for a given staking position.\n\n### Parameters\n\n- `position_id` \u2014 `string` \u2014 A valid staking position ID (required).\n- `include` \u2014 `string` \u2014 Accepted value: `position`\n- `status_history` - `string` \u2014 If present, status change history will be included for each validator.\n- `status` - `string` \u2014 Accepted value(s): `funding_requested`, `deposited`, `pending_initialized`, `pending_queued`, `active_ongoing`, `active_exiting`, `active_slashed`, `exited_unslashed`, `exited_slashed`, `withdrawal_possible`, `withdrawal_done`, `provisioned`.\n- `page[size]` \u2014 `integer` \u2014 The number of results to display, used for pagination (optional).\n- `page[number]` \u2014 `integer` \u2014 The page to display (optional).\n    \n\n### Response\n\n- `data` - `array`\n    - `object`\n        - `id` \u2014 `string` - A unique identifier.\n        - `type` \u2014 `string` \u2014 The type of position.\n        - `attributes` \u2014 `object`\n            - `name` \u2014 `string` \u2014 The position name.\n            - `pubkey` \u2014 `string` \u2014 A public key.\n            - `withdrawal_credentials` \u2014 `string` \u2014 Valid withdrawal credentials.\n            - `amount` \u2014 `integer` \u2014 An amount of ETH.\n            - `signature` \u2014 `string` \u2014 A valid signature.\n            - `deposit_data_root` \u2014 `string` \u2014 The deposit data.\n            - `deposit_message_root` \u2014 `string` \u2014 The deposit message.\n            - `fork_version` \u2014 `string` \u2014 A fork version.\n            - `eth2_network_name` \u2014 `string` \u2014 A network name, denoting testnet (`goerli`) or mainnet (`prater`).\n            - `status` - `string` \u2014 The positions current status.\n            - `deposit_cli_version` \u2014 `string` \u2014 The version of the CLI software used when making the deposit.\n            - `status_synced_at` \u2014 `string` \u2014 A timestamp indicating when the status was last synced,\n            - `status_history` \u2014 `array` \u2014 Details of the status history.\n                - `status` \u2014 `string` \u2014 A status.\n                - `changed_at` \u2014 `string` \u2014 A timestamp.\n        - `relationships` \u2014 `object`\n            - `position` \u2014 `object`\n                - `data` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `type` \u2014 `string` \u2014 The position type.\n        - `links` \u2014 `object` \u2014 Pagination links based on `page[size]` and `page[number]`.\n            - `self` \u2014 `string`\n            - `current` \u2014 `string`\n            - `next` \u2014 `string`\n            - `last` \u2014 `string`\n            - `prev` \u2014 `string`\n        - `included` \u2014 `array`\n            - `object`\n                - `id` \u2014 `string` \u2014 A unique identifier.\n                - `type` \u2014 `string` \u2014 The position type.\n                - `attributes` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `name` \u2014 `string` \u2014 A name.\n                    - `eth1_withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n                    - `staked_amount` \u2014 `integer` \u2014 An amount of staked ETH.\n                    - `validators_count` \u2014 `integer -` A number of validators.\n                    - `created_at` \u2014 `string` \u2014 A timestamp.\n                    - `updated_at` \u2014 `string` \u2014 A timestamp.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/positions/{{position_id}}/validators?page[size]=10&page[number]=1&include=position&status_history=true&status=provisioned&position_id=123456"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/positions/{position_id}/validators",body:{data:[{id:"string",type:"string",attributes:{name:"string",pubkey:"string",withdrawal_credentials:"string",amount:0,signature:"string",deposit_data_root:"string",deposit_message_root:"string",fork_version:"string",eth2_network_name:"string",status:"string",deposit_cli_version:"string",status_synced_at:"string",status_history:[{status:"string",changed_at:"string"}]},relationships:{position:{data:{id:"string",type:"string"}}}}],links:{self:"string",current:"string",next:"string",last:"string",prev:"string"},included:[{id:"string",type:"string",attributes:{id:0,name:"string",eth1_withdrawal_address:"string",staked_amount:0,validators_count:0,created_at:"string",updated_at:"string"}}]}}},{name:"/eth2_staking/provision",content:"Provision a new validator with passed attributes.\n\n### Parameters\n\n- `external_user_id` \u2014 `string` \u2014 A customer user ID.\n- `external_user_email` \u2014 `string` \u2014 A customer email address.\n- `withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n- `validators_count` \u2014 `integer` \u2014 A number of validators.\n- `eth2_network_name` \u2014 `string` \u2014 A network name, denoting `testnet`, `mainnet`.\n\n### Response\n\n- `staked_eth_amount` - `integer` \u2014 An amount of staked ETH.\n- `eth1_withdrawal_address` - `string` \u2014 An Ethereum address.\n- `eth2_network_name` - `string` \u2014 A network name, denoting `testnet` or `mainnet`\n\n### Webhook configuration\n\nUser can be notified once a new staking position is created by configuring webhook url and webhook API key under Prime / ETH Staking in Prime Dashboard. Configured API key will be sent in `Authorization` header.\n\n#### Note\n\nValidator API webhooks can only be configured from the Prime dashboard.",request:{method:"POST",header:[],body:{external_user_id:"user_id",external_user_email:"user@company.com",withdrawal_address:"0x01000000000000000000000003777debd25dcdbc4cdb56178906ac0ecac94019",validators_count:1,eth2_network_name:"mainnet"},url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/provision"},interactive:!1,response:{name:"/eth2_staking/provision Copy",body:{staked_eth_amount:32,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",eth2_network_name:"mainnet"}}},{name:"/eth2_staking/validators",content:"Returns a list of validators belonging to a customer.\n\n### Parameters\n\n- `withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n- `page[size]` \u2014 `integer` \u2014 The number of results to display, used for pagination (optional).\n- `page[number]` \u2014 `integer` \u2014 The page number to display (optional).\n- `include` \u2014 `string` \u2014 Accepts the value `position`.\n- `status_history` \u2014 `string` \u2014 If present, status change history will be included for each validator.\n- `status` \u2014 `string` \u2014 Accepted value(s): `funding_requested`, `deposited`, `pending_initialized`, `pending_queued`, `active_ongoing`, `active_exiting`, `active_slashed`, `exited_unslashed`, `exited_slashed`, `withdrawal_possible`, `withdrawal_done`, `provisioned`.\n    \n\n### Response\n\n- `data` \u2014 `array`\n    - `object`\n        - `id` \u2014 `string` \u2014 A unique identifier.\n        - `type` \u2014 `string` \u2014 The type of position.\n        - `attributes` \u2014 `object`\n            - `name` \u2014 `string` \u2014 The position name.\n            - `pubkey` \u2014 `string` \u2014 A public key.\n            - `withdrawal_credentials` \u2014 `string` \u2014 Valid withdrawal credentials.\n            - `amount` \u2014 `integer` \u2014 An amount of ETH.\n            - `signature` \u2014 `string` \u2014 A valid signature.\n            - `deposit_data_root` \u2014 `string` \u2014 The deposit data.\n            - `deposit_message_root` \u2014 `string` \u2014 The deposit message.\n            - `fork_version` \u2014 `string` \u2014 A fork version.\n            - `eth2_network_name` \u2014 `string` \u2014 A network name, `testnet`, `mainnet`\n            - `status` \u2014 `string` \u2014 The positions current status.\n            - `deposit_cli_version` \u2014 `string` \u2014 The version of the CLI software used when making the deposit.\n            - `status_synced_at` \u2014 `string` \u2014 A timestamp indicating when the status was last synced,\n            - `status_history` \u2014 `array` \u2014 Details of the status history.\n                - `status` \u2014 `string` \u2014 A status.\n                - `changed_at` \u2014 `string` \u2014 A timestamp.\n        - `relationships` \u2014 `object`\n            - `position` \u2014 `object`\n                - `data` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `type` \u2014 `string` \u2014 The position type.\n        - `links` \u2014 `object` \u2014 Pagination links based on `page[size]` and `page[number]`.\n            - `self` \u2014 `string`\n            - `current` \u2014 `string`\n            - `next` \u2014 `string`\n            - `last` \u2014 `string`\n            - `prev` \u2014 `string`\n        - `included` \u2014 `array`\n            - `object`\n                - `id` \u2014 `string` \u2014 A unique identifier.\n                - `type` \u2014 `string` \u2014 The position type.\n                - `attributes` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `name` \u2014 `string` \u2014 A name.\n                    - `eth1_withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n                    - `staked_amount` \u2014 `integer` \u2014 An amount of staked ETH.\n                    - `validators_count` \u2014 `integer` \u2014 A number of validators.\n                    - `created_at` \u2014 `string` \u2014 A timestamp.\n                    - `updated_at` \u2014 `string` \u2014 A timestamp.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/validators?withdrawal_address=0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf&page[size]=10&page[number]=1&include=position&status_history=true&status=provisioned"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/validators Copy",body:{data:[{id:"string",type:"string",attributes:{name:"string",pubkey:"string",withdrawal_credentials:"string",amount:0,signature:"string",deposit_data_root:"string",deposit_message_root:"string",fork_version:"string",eth2_network_name:"string",status:"string",deposit_cli_version:"string",status_synced_at:"string",status_history:[{status:"string",changed_at:"string"}]},relationships:{position:{data:{id:"string",type:"string"}}}}],links:{self:"string",current:"string",next:"string",last:"string",prev:"string"},included:[{id:"string",type:"string",attributes:{id:0,name:"string",eth1_withdrawal_address:"string",staked_amount:0,validators_count:0,created_at:"string",updated_at:"string"}}]}}},{name:"/eth2_staking/validators/{id}",content:"Returns information about a single validator.\n\n### Parameters\n\n- `id` \u2014 `string` \u2014 The validator ID.\n- `include` \u2014 `string` \u2014 Accepts the value `position`.\n- `status_history` \u2014 `string` \u2014 If present, the status change history will be included for each validator.\n    \n\n### Response\n\n- `data` \u2014 `array`\n    - `object`\n        - `id` \u2014 `string` - A unique identifier.\n        - `type` \u2014 `string` - The type of position.\n        - `attributes` \u2014 `object`\n            - `name` \u2014 `string` \u2014 The position name.\n            - `pubkey` \u2014 `string` \u2014 A public key.\n            - `withdrawal_credentials` \u2014 `string` \u2014 Valid withdrawal credentials.\n            - `amount` \u2014 `integer` \u2014 An amount of ETH.\n            - `signature` \u2014 `string` \u2014 A valid signature.\n            - `deposit_data_root` \u2014 `string` \u2014 The deposit data.\n            - `deposit_message_root` \u2014 `string` \u2014 The deposit message.\n            - `fork_version` \u2014 `string` \u2014 A fork version.\n            - `eth2_network_name` \u2014 `string` \u2014 A network name, denoting testnet (`goerli`) or mainnet (`prater`).\n            - `status` \u2014 `string` \u2014 The positions current status.\n            - `deposit_cli_version` \u2014 `string` \u2014 The version of the CLI software used when making the deposit.\n            - `status_synced_at` \u2014 `string` \u2014 A timestamp indicating when the status was last synced,\n            - `status_history` \u2014 `array` \u2014 Details of the status history.\n                - `status` \u2014 `string` \u2014 A status.\n                - `changed_at` \u2014 `string` \u2014 A timestamp.\n        - `relationships` \u2014 `object`\n            - `position` \u2014 `object`\n                - `data` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `type` \u2014 `string` \u2014 The position type.\n        - `included` \u2014 `array`\n            - `object`\n                - `id` \u2014 `string` \u2014 A unique identifier.\n                - `type` \u2014 `string` \u2014 The position type.\n                - `attributes` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `name` \u2014 `string` \u2014 A name.\n                    - `eth1_withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n                    - `staked_amount` \u2014 `integer` \u2014 An amount of staked ETH.\n                    - `validators_count` \u2014 `integer` \u2014 A number of validators.\n                    - `created_at` \u2014 `string` \u2014 A timestamp.\n                    - `updated_at` \u2014 `string` \u2014 A timestamp.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/validators/?id=1234&include=position&status_history=true"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/validators/{id}",body:{data:{id:"string",type:"string",attributes:{name:"string",pubkey:"string",withdrawal_credentials:"string",amount:0,signature:"string",deposit_data_root:"string",deposit_message_root:"string",fork_version:"string",eth2_network_name:"string",status:"string",deposit_cli_version:"string",status_synced_at:"string",status_history:[{status:"string",changed_at:"string"}]},relationships:{position:{data:{id:"string",type:"string"}}}},included:[{id:"string",type:"string",attributes:{id:0,name:"string",eth1_withdrawal_address:"string",staked_amount:0,validators_count:0,created_at:"string",updated_at:"string"}}]}}}],service:"validator-api",networks:[{label:"Ethereum",value:"ethereum"},{label:"Polkadot",value:"polkadot"}],network:"ethereum",proxy:"https://api-service-proxy.figment-secops.workers.dev",mdxType:"APIMethods"}))}h.isMDXComponent=!0},46700:(e,t,n)=>{var a={"./af":42786,"./af.js":42786,"./ar":30867,"./ar-dz":14130,"./ar-dz.js":14130,"./ar-kw":96135,"./ar-kw.js":96135,"./ar-ly":56440,"./ar-ly.js":56440,"./ar-ma":47702,"./ar-ma.js":47702,"./ar-sa":16040,"./ar-sa.js":16040,"./ar-tn":37100,"./ar-tn.js":37100,"./ar.js":30867,"./az":31083,"./az.js":31083,"./be":9808,"./be.js":9808,"./bg":68338,"./bg.js":68338,"./bm":67438,"./bm.js":67438,"./bn":8905,"./bn-bd":76225,"./bn-bd.js":76225,"./bn.js":8905,"./bo":11560,"./bo.js":11560,"./br":1278,"./br.js":1278,"./bs":80622,"./bs.js":80622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":50877,"./cv.js":50877,"./cy":47373,"./cy.js":47373,"./da":24780,"./da.js":24780,"./de":59740,"./de-at":60217,"./de-at.js":60217,"./de-ch":60894,"./de-ch.js":60894,"./de.js":59740,"./dv":5300,"./dv.js":5300,"./el":50837,"./el.js":50837,"./en-au":78348,"./en-au.js":78348,"./en-ca":77925,"./en-ca.js":77925,"./en-gb":22243,"./en-gb.js":22243,"./en-ie":46436,"./en-ie.js":46436,"./en-il":47207,"./en-il.js":47207,"./en-in":44175,"./en-in.js":44175,"./en-nz":76319,"./en-nz.js":76319,"./en-sg":31662,"./en-sg.js":31662,"./eo":92915,"./eo.js":92915,"./es":55655,"./es-do":55251,"./es-do.js":55251,"./es-mx":96112,"./es-mx.js":96112,"./es-us":71146,"./es-us.js":71146,"./es.js":55655,"./et":5603,"./et.js":5603,"./eu":77763,"./eu.js":77763,"./fa":76959,"./fa.js":76959,"./fi":11897,"./fi.js":11897,"./fil":42549,"./fil.js":42549,"./fo":94694,"./fo.js":94694,"./fr":94470,"./fr-ca":63049,"./fr-ca.js":63049,"./fr-ch":52330,"./fr-ch.js":52330,"./fr.js":94470,"./fy":5044,"./fy.js":5044,"./ga":29295,"./ga.js":29295,"./gd":2101,"./gd.js":2101,"./gl":38794,"./gl.js":38794,"./gom-deva":27884,"./gom-deva.js":27884,"./gom-latn":23168,"./gom-latn.js":23168,"./gu":95349,"./gu.js":95349,"./he":24206,"./he.js":24206,"./hi":30094,"./hi.js":30094,"./hr":30316,"./hr.js":30316,"./hu":22138,"./hu.js":22138,"./hy-am":11423,"./hy-am.js":11423,"./id":29218,"./id.js":29218,"./is":90135,"./is.js":90135,"./it":90626,"./it-ch":10150,"./it-ch.js":10150,"./it.js":90626,"./ja":39183,"./ja.js":39183,"./jv":24286,"./jv.js":24286,"./ka":12105,"./ka.js":12105,"./kk":47772,"./kk.js":47772,"./km":18758,"./km.js":18758,"./kn":79282,"./kn.js":79282,"./ko":33730,"./ko.js":33730,"./ku":1408,"./ku.js":1408,"./ky":33291,"./ky.js":33291,"./lb":36841,"./lb.js":36841,"./lo":55466,"./lo.js":55466,"./lt":57010,"./lt.js":57010,"./lv":37595,"./lv.js":37595,"./me":39861,"./me.js":39861,"./mi":35493,"./mi.js":35493,"./mk":95966,"./mk.js":95966,"./ml":87341,"./ml.js":87341,"./mn":5115,"./mn.js":5115,"./mr":10370,"./mr.js":10370,"./ms":9847,"./ms-my":41237,"./ms-my.js":41237,"./ms.js":9847,"./mt":72126,"./mt.js":72126,"./my":56165,"./my.js":56165,"./nb":64924,"./nb.js":64924,"./ne":16744,"./ne.js":16744,"./nl":93901,"./nl-be":59814,"./nl-be.js":59814,"./nl.js":93901,"./nn":83877,"./nn.js":83877,"./oc-lnc":92135,"./oc-lnc.js":92135,"./pa-in":15858,"./pa-in.js":15858,"./pl":64495,"./pl.js":64495,"./pt":89520,"./pt-br":57971,"./pt-br.js":57971,"./pt.js":89520,"./ro":96459,"./ro.js":96459,"./ru":21793,"./ru.js":21793,"./sd":40950,"./sd.js":40950,"./se":10490,"./se.js":10490,"./si":90124,"./si.js":90124,"./sk":64249,"./sk.js":64249,"./sl":14985,"./sl.js":14985,"./sq":51104,"./sq.js":51104,"./sr":49131,"./sr-cyrl":79915,"./sr-cyrl.js":79915,"./sr.js":49131,"./ss":85893,"./ss.js":85893,"./sv":98760,"./sv.js":98760,"./sw":91172,"./sw.js":91172,"./ta":27333,"./ta.js":27333,"./te":23110,"./te.js":23110,"./tet":52095,"./tet.js":52095,"./tg":27321,"./tg.js":27321,"./th":9041,"./th.js":9041,"./tk":19005,"./tk.js":19005,"./tl-ph":75768,"./tl-ph.js":75768,"./tlh":89444,"./tlh.js":89444,"./tr":72397,"./tr.js":72397,"./tzl":28254,"./tzl.js":28254,"./tzm":51106,"./tzm-latn":30699,"./tzm-latn.js":30699,"./tzm.js":51106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":67691,"./uk.js":67691,"./ur":13795,"./ur.js":13795,"./uz":6791,"./uz-latn":60588,"./uz-latn.js":60588,"./uz.js":6791,"./vi":65666,"./vi.js":65666,"./x-pseudo":14378,"./x-pseudo.js":14378,"./yo":75805,"./yo.js":75805,"./zh-cn":83839,"./zh-cn.js":83839,"./zh-hk":55726,"./zh-hk.js":55726,"./zh-mo":99807,"./zh-mo.js":99807,"./zh-tw":74152,"./zh-tw.js":74152};function s(e){var t=i(e);return n(t)}function i(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}s.keys=function(){return Object.keys(a)},s.resolve=i,e.exports=s,s.id=46700}}]);