"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[2114],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>b});var t=n(67294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=t.createContext({}),l=function(e){var a=t.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},d=function(e){var a=l(e.components);return t.createElement(c.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},f=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=l(n),f=i,b=p["".concat(c,".").concat(f)]||p[f]||u[f]||r;return n?t.createElement(b,s(s({ref:a},d),{},{components:n})):t.createElement(b,s({ref:a},d))}));function b(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=f;var o={};for(var c in a)hasOwnProperty.call(a,c)&&(o[c]=a[c]);o.originalType=e,o[p]="string"==typeof e?e:i,s[1]=o;for(var l=2;l<r;l++)s[l]=n[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},85162:(e,a,n)=>{n.d(a,{Z:()=>s});var t=n(67294),i=n(86010);const r="tabItem_Ymn6";function s(e){let{children:a,hidden:n,className:s}=e;return t.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,s),hidden:n},a)}},65488:(e,a,n)=>{n.d(a,{Z:()=>f});var t=n(87462),i=n(67294),r=n(86010),s=n(72389),o=n(67392),c=n(7094),l=n(12466);const d="tabList__CuJ",p="tabItem_LNqP";function u(e){const{lazy:a,block:n,defaultValue:s,values:u,groupId:f,className:b}=e,g=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),m=u??g.map((e=>{let{props:{value:a,label:n,attributes:t}}=e;return{value:a,label:n,attributes:t}})),k=(0,o.l)(m,((e,a)=>e.value===a.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===s?s:s??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==h&&!m.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${m.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:v}=(0,c.U)(),[w,N]=(0,i.useState)(h),_=[],{blockElementScrollPositionUntilNextRender:P}=(0,l.o5)();if(null!=f){const e=y[f];null!=e&&e!==w&&m.some((a=>a.value===e))&&N(e)}const C=e=>{const a=e.currentTarget,n=_.indexOf(a),t=m[n].value;t!==w&&(P(a),N(t),null!=f&&v(f,String(t)))},T=e=>{let a=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{const n=_.indexOf(e.currentTarget)+1;a=_[n]??_[0];break}case"ArrowLeft":{const n=_.indexOf(e.currentTarget)-1;a=_[n]??_[_.length-1];break}}a?.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",d)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},b)},m.map((e=>{let{value:a,label:n,attributes:s}=e;return i.createElement("li",(0,t.Z)({role:"tab",tabIndex:w===a?0:-1,"aria-selected":w===a,key:a,ref:e=>_.push(e),onKeyDown:T,onClick:C},s,{className:(0,r.Z)("tabs__item",p,s?.className,{"tabs__item--active":w===a})}),n??a)}))),a?(0,i.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,i.cloneElement)(e,{key:a,hidden:e.props.value!==w})))))}function f(e){const a=(0,s.Z)();return i.createElement(u,(0,t.Z)({key:String(a)},e))}},86227:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var t=n(87462),i=(n(67294),n(3905)),r=(n(65488),n(85162),n(39960));const s={title:"Signing Transactions with the Fireblocks API",sidebar_position:10,pagination_next:null},o=void 0,c={unversionedId:"guides/staking-api/fireblocks-signing-transactions",id:"guides/staking-api/fireblocks-signing-transactions",title:"Signing Transactions with the Fireblocks API",description:"This guide assumes that you are familiar with using the Fireblocks API.",source:"@site/docs/guides/staking-api/fireblocks-signing-transactions.mdx",sourceDirName:"guides/staking-api",slug:"/guides/staking-api/fireblocks-signing-transactions",permalink:"/guides/staking-api/fireblocks-signing-transactions",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Signing Transactions with the Fireblocks API",sidebar_position:10,pagination_next:null},sidebar:"docsSidebar",previous:{title:"Signing Transactions with Figment's npm Package",permalink:"/guides/staking-api/figment-signing-transactions"}},l={},d=[{value:"The Signing Payload",id:"the-signing-payload",level:2},{value:"Sending Payloads to the Fireblocks API",id:"sending-payloads-to-the-fireblocks-api",level:2},{value:"Sending Signatures to the Staking API",id:"sending-signatures-to-the-staking-api",level:2},{value:"Polkadot Specifics",id:"polkadot-specifics",level:2},{value:"References",id:"references",level:2}],p={toc:d};function u(e){let{components:a,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"important",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This guide assumes that you are familiar with using the ",(0,i.kt)(r.Z,{to:"https://www.fireblocks.com/about/",mdxType:"Link"},"Fireblocks")," API.\nRefer to their ",(0,i.kt)("a",{parentName:"p",href:"https://docs.fireblocks.com/api/#getting-started"},"Getting Started")," documentation for details.")),(0,i.kt)("br",null),(0,i.kt)("p",null,"To sign transactions with the Fireblocks API, first identify the ",(0,i.kt)("inlineCode",{parentName:"p"},"signing_payload")," from the Staking API response, then submit it to the Fireblocks API.\nFireblocks will return a signed transaction which can be used to complete the Staking API flow."),(0,i.kt)("h2",{id:"the-signing-payload"},"The Signing Payload"),(0,i.kt)("p",null,"The response from the Staking API contains the ",(0,i.kt)("inlineCode",{parentName:"p"},"signing_payload"),", which is located in the signing action, in the ",(0,i.kt)("inlineCode",{parentName:"p"},"inputs")," array under ",(0,i.kt)("inlineCode",{parentName:"p"},"signatures"),".\nThis ",(0,i.kt)("inlineCode",{parentName:"p"},"signing_payload")," can be sent to the Fireblocks API as a raw message. Some networks such as Polkadot may require alteration of the ",(0,i.kt)("inlineCode",{parentName:"p"},"signing_payload")," prior to submission."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Click to view an example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'{10,22,29} title="Example Staking API response"',"{10,22,29}":!0,title:'"Example',Staking:!0,API:!0,'response"':!0},'{\n  "id": "8307b0d1-fc17-45b1-b540-2d9c31578d99",\n  "state": "deposit_tx_signature",\n  "actions": [\n    {\n      "name": "refresh_deposit_tx",\n      "inputs": []\n    },\n    {\n      "name": "sign_deposit_tx",\n      "inputs": [\n        {\n          "name": "transaction_payload",\n          "display": "Transaction Payload",\n          "description": "",\n          "type": "signed_transaction",\n          "validations": [],\n          "signers": ["0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594"],\n          "transaction_payload": "0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0"\n        },\n        {\n          "name": "signatures",\n          "display": "Signatures",\n          "description": "",\n          "type": "array_of_signatures",\n          "validations": [],\n          "signers": ["0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594"],\n          "transaction_payload": "0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0",\n          "signing_payload": "0xfa2fde357ca51a2f2c2b9aab0b00451d0b7ba8772837b2c6fab7a5371d9a509e"\n        }\n      ]\n    }\n  ],\n  "data": {\n    "funding_account_address": "0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594",\n    "validator_pub_key": "0xa7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549",\n    "withdrawal_credentials": "0x010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca",\n    "signature": "0x876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65b",\n    "deposit_data_root": "0xd446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f91",\n    "amount": "32.0",\n    "gas_price": null,\n    "gas_limit": null,\n    "deposit_transaction": {\n      "raw": "0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0",\n      "signing_payload": "0xfa2fde357ca51a2f2c2b9aab0b00451d0b7ba8772837b2c6fab7a5371d9a509e",\n      "signed": null,\n      "hash": null,\n      "status": null,\n      "error": null,\n      "signatures": null\n    }\n  },\n  "network_code": "ethereum",\n  "chain_code": "goerli",\n  "created_at": "2022-08-04T03:56:12.111Z",\n  "updated_at": "2022-08-04T04:11:54.830Z"\n}\n'))),(0,i.kt)("admonition",{title:"note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"In comparison, the ",(0,i.kt)("inlineCode",{parentName:"p"},"transaction_payload")," is what would need to be signed if you control the private keys for the signing account(s). Follow the guide ",(0,i.kt)(r.Z,{to:"/guides/staking-api/figment-signing-transactions",mdxType:"Link"},"Signing Transactions with Figment's npm Package")," for more information.")),(0,i.kt)("h2",{id:"sending-payloads-to-the-fireblocks-api"},"Sending Payloads to the Fireblocks API"),(0,i.kt)("p",null,"Fireblocks transaction objects have a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.fireblocks.com/api/?javascript#rawmessagedata"},(0,i.kt)("inlineCode",{parentName:"a"},"RawMessageData"))," property, which can be passed an array of ",(0,i.kt)("a",{parentName:"p",href:"https://docs.fireblocks.com/api/?javascript#unsignedrawmessage"},(0,i.kt)("inlineCode",{parentName:"a"},"UnsignedRawMessage"))," objects."),(0,i.kt)("p",null,"When sending the ",(0,i.kt)("inlineCode",{parentName:"p"},"signing_payload")," from a Staking API flow to the Fireblocks API for signing, the ",(0,i.kt)("inlineCode",{parentName:"p"},"extraParameters.rawMessageData.messages[].content")," property of the Fireblocks transaction object is where you want to insert the ",(0,i.kt)("inlineCode",{parentName:"p"},"signing_payload"),"."),(0,i.kt)("p",null,"The Fireblocks API will return a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.fireblocks.com/api/#signedmessage"},(0,i.kt)("inlineCode",{parentName:"a"},"signedMessages[]"))," array, containing the required signatures."),(0,i.kt)("h2",{id:"sending-signatures-to-the-staking-api"},"Sending Signatures to the Staking API"),(0,i.kt)("p",null,"When sending the signed result back to Figment's Staking API, you must pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"signatures")," as the ",(0,i.kt)("inlineCode",{parentName:"p"},"inputs"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"signatures")," is an array of objects, each containing:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"account_address")," ","\u2014"," The signer."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"signature")," ","\u2014"," The ",(0,i.kt)("inlineCode",{parentName:"li"},"signedMessages[].signature.fullsig")," from Fireblocks.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'{7-12} title="Sample cURL Request"',"{7-12}":!0,title:'"Sample',cURL:!0,'Request"':!0},'curl -X PUT \'https://eth-slate.datahub.figment.io/api/v1/flows/8307b0d1-fc17-45b1-b540-2d9c31578d99/next\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: <api_key>\' \\\n-d \'{\n  "name": "sign_deposit_tx",\n  "inputs": {\n    "signatures": [\n        {\n          "account_address": "",\n          "signature": ""\n        }\n    ]\n  }\n}\'\n')),(0,i.kt)("admonition",{title:"note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"When sending the signed result back to Figment's Staking API, you should have one object for each result received from Fireblocks (",(0,i.kt)("inlineCode",{parentName:"p"},"N")," responses == ",(0,i.kt)("inlineCode",{parentName:"p"},"N")," ",(0,i.kt)("inlineCode",{parentName:"p"},"signatures[]<account_address, signature>")," pairs).")),(0,i.kt)("h2",{id:"polkadot-specifics"},"Polkadot Specifics"),(0,i.kt)("p",null,"If the transaction you are signing is part of a Polkadot flow, you must remove the leading ",(0,i.kt)("inlineCode",{parentName:"p"},"00")," from the ",(0,i.kt)("inlineCode",{parentName:"p"},"signing_payload")," before sending it to the Fireblocks API."),(0,i.kt)("p",null,"When sending the resulting ",(0,i.kt)("inlineCode",{parentName:"p"},"signature")," from Fireblocks to the Staking API, you must prepend ",(0,i.kt)("inlineCode",{parentName:"p"},"0x00")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"signedMessages[].signature.fullsig")," value."),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.fireblocks.com/api"},"Fireblocks API Reference"))))}u.isMDXComponent=!0}}]);