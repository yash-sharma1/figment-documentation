"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[8042],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=p(t),m=o,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return t?a.createElement(h,l(l({ref:n},d),{},{components:t})):a.createElement(h,l({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=c;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(7294),o=t(6010);const i="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(i,l),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(7462),o=t(7294),i=t(6010),l=t(2389),r=t(7392),s=t(7094),p=t(2466);const d="tabList__CuJ",u="tabItem_LNqP";function c(e){var n;const{lazy:t,block:l,defaultValue:c,values:m,groupId:h,className:k}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??g.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),f=(0,r.l)(b,((e,n)=>e.value===n.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===c?c:c??(null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)??g[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:_,setTabGroupChoices:w}=(0,s.U)(),[y,N]=(0,o.useState)(v),x=[],{blockElementScrollPositionUntilNextRender:E}=(0,p.o5)();if(null!=h){const e=_[h];null!=e&&e!==y&&b.some((n=>n.value===e))&&N(e)}const T=e=>{const n=e.currentTarget,t=x.indexOf(n),a=b[t].value;a!==y&&(E(n),N(a),null!=h&&w(h,String(a)))},P=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=x.indexOf(e.currentTarget)+1;t=x[n]??x[0];break}case"ArrowLeft":{const n=x.indexOf(e.currentTarget)-1;t=x[n]??x[x.length-1];break}}null==(n=t)||n.focus()};return o.createElement("div",{className:(0,i.Z)("tabs-container",d)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},k)},b.map((e=>{let{value:n,label:t,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,key:n,ref:e=>x.push(e),onKeyDown:P,onFocus:T,onClick:T},l,{className:(0,i.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":y===n})}),t??n)}))),t?(0,o.cloneElement)(g.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==y})))))}function m(e){const n=(0,l.Z)();return o.createElement(c,(0,a.Z)({key:String(n)},e))}},63:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var a=t(7462),o=(t(7294),t(3905)),i=t(5488),l=t(5162);const r={title:"Staking API Endpoints",sidebar_position:2},s=void 0,p={unversionedId:"guides/staking-api/staking-api-endpoints",id:"guides/staking-api/staking-api-endpoints",title:"Staking API Endpoints",description:"The Staking API has three endpoints for managing flows and five endpoints for managing WebHooks.",source:"@site/docs/guides/staking-api/staking-api-endpoints.mdx",sourceDirName:"guides/staking-api",slug:"/guides/staking-api/staking-api-endpoints",permalink:"/guides/staking-api/staking-api-endpoints",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Staking API Endpoints",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Working With Staking API Flows",permalink:"/guides/staking-api/working-with-staking-api-flows"},next:{title:"Staking API Webhooks",permalink:"/guides/staking-api/staking-api-webhooks"}},d={},u=[{value:"Managing Flows",id:"managing-flows",level:2},{value:"Start a New Flow",id:"start-a-new-flow",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Body",id:"body",level:4},{value:"curl Request",id:"curl-request",level:4},{value:"Get Status of an Existing Flow",id:"get-status-of-an-existing-flow",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"curl Request",id:"curl-request-1",level:4},{value:"Continue to Next Step",id:"continue-to-next-step",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Body",id:"body-1",level:5},{value:"curl Request",id:"curl-request-2",level:4},{value:"Code Examples for Managing Flows",id:"code-examples-for-managing-flows",level:3},{value:"Managing WebHooks",id:"managing-webhooks",level:2},{value:"Authentication",id:"authentication",level:3},{value:"Create a new Webhook endpoint",id:"create-a-new-webhook-endpoint",level:3},{value:"Retreive a Webhook endpoint",id:"retreive-a-webhook-endpoint",level:3},{value:"Update Webhook endpoint",id:"update-webhook-endpoint",level:3},{value:"List existing Webhook endpoints",id:"list-existing-webhook-endpoints",level:3},{value:"Delete an existing Webhook endpoint",id:"delete-an-existing-webhook-endpoint",level:3}],c={toc:u};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Staking API has three endpoints for managing flows and five endpoints for managing WebHooks."),(0,o.kt)("h2",{id:"managing-flows"},"Managing Flows"),(0,o.kt)("h3",{id:"start-a-new-flow"},"Start a New Flow"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"POST")," ",(0,o.kt)("inlineCode",{parentName:"li"},"/api/v1/flows"))),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("h4",{id:"body"},"Body"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"parameter"),(0,o.kt)("th",{parentName:"tr",align:"center"},"type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"description"),(0,o.kt)("th",{parentName:"tr",align:"right"},"required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"network_code")),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Network on which this flow operates (ex. ",(0,o.kt)("inlineCode",{parentName:"td"},"solana"),")"),(0,o.kt)("td",{parentName:"tr",align:"right"},"Required")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"chain_code")),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Chain on which this flow operates (ex. ",(0,o.kt)("inlineCode",{parentName:"td"},"mainnet"),")"),(0,o.kt)("td",{parentName:"tr",align:"right"},"Required")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"operation")),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"The operation to perform (ex. ",(0,o.kt)("inlineCode",{parentName:"td"},"staking"),")"),(0,o.kt)("td",{parentName:"tr",align:"right"},"Required")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"version")),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"API version to use (ex. ",(0,o.kt)("inlineCode",{parentName:"td"},"v1"),")"),(0,o.kt)("td",{parentName:"tr",align:"right"},"Optional")))),(0,o.kt)("h4",{id:"curl-request"},"curl Request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Example cURL request to the Staking API to start a staking flow on NEAR"',title:'"Example',cURL:!0,request:!0,to:!0,the:!0,Staking:!0,API:!0,start:!0,a:!0,staking:!0,flow:!0,on:!0,'NEAR"':!0},'curl -X POST \'https://near-slate.datahub.figment.io/api/v1/flows\' \\\n-H \'Authorization: <api_key>\' \\\n-d \'{"flow": {"network_code":"near", "chain_code": "testnet", "operation": "staking", "version": "v1"}}\'\n')),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to view sample response"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"In the response, the ",(0,o.kt)("inlineCode",{parentName:"p"},"actions")," array contains the name of the next action in the flow and details of the expected inputs in the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," field.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "1d9e9d5d-f4a2-4974-b549-c35531344fa9",\n  "state": "initialized",\n  "actions": [\n    {\n      "name": "create_delegate_tx",\n      "inputs": [\n        {\n          "name": "delegator_address",\n          "display": "Delegator Address",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "account_balance",\n              "options": {\n                "on": "with_on_chain_validations",\n                "greater_than_or_equal_to": null\n              }\n            }\n          ]\n        },\n        {\n          "name": "delegator_pubkey",\n          "display": "Delegator Pubkey",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ]\n        },\n        {\n          "name": "validator_address",\n          "display": "Validator Address",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "is_validator",\n              "options": {\n                "on": "with_on_chain_validations"\n              }\n            }\n          ]\n        },\n        {\n          "name": "amount",\n          "display": "Amount",\n          "description": "",\n          "type": "decimal",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "numericality",\n              "options": {\n                "greater_than": 0\n              }\n            }\n          ]\n        },\n        {\n          "name": "max_gas",\n          "display": "Max Gas",\n          "description": "",\n          "type": "decimal",\n          "validations": []\n        }\n      ]\n    }\n  ],\n  "data": {\n    "delegator_address": null,\n    "delegator_pubkey": null,\n    "validator_address": null,\n    "amount": null,\n    "max_gas": null,\n    "delegate_transaction": null\n  },\n  "network_code": "near",\n  "chain_code": "testnet",\n  "created_at": "2022-07-19T17:54:02.882Z",\n  "updated_at": "2022-07-19T17:54:02.882Z"\n}\n'))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"get-status-of-an-existing-flow"},"Get Status of an Existing Flow"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"GET")," ",(0,o.kt)("inlineCode",{parentName:"li"},"/api/v1/flows/[:flow_id]"))),(0,o.kt)("h4",{id:"parameters-1"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[:flow_id]"),": This is a placeholder for the actual Flow ID. Pass the Flow ID you received in the reponse when creating the flow in the GET request URL.")),(0,o.kt)("h4",{id:"curl-request-1"},"curl Request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET 'https://eth-slate.figment.io/api/v1/flows/[:flow_id]' \\\n-H \"Authorization: <api_key>\"\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to see sample response"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"In the response, the ",(0,o.kt)("inlineCode",{parentName:"p"},"actions")," array contains the name of the next action in the flow and the expected inputs for the next step in the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," field.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "1d9e9d5d-f4a2-4974-b549-c35531344fa9",\n  "state": "initialized",\n  "actions": [\n    {\n      "name": "create_delegate_tx",\n      "inputs": [\n        {\n          "name": "delegator_address",\n          "display": "Delegator Address",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "account_balance",\n              "options": {\n                "on": "with_on_chain_validations",\n                "greater_than_or_equal_to": null\n              }\n            }\n          ]\n        },\n        {\n          "name": "delegator_pubkey",\n          "display": "Delegator Pubkey",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ]\n        },\n        {\n          "name": "validator_address",\n          "display": "Validator Address",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "is_validator",\n              "options": {\n                "on": "with_on_chain_validations"\n              }\n            }\n          ]\n        },\n        {\n          "name": "amount",\n          "display": "Amount",\n          "description": "",\n          "type": "decimal",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "numericality",\n              "options": {\n                "greater_than": 0\n              }\n            }\n          ]\n        },\n        {\n          "name": "max_gas",\n          "display": "Max Gas",\n          "description": "",\n          "type": "decimal",\n          "validations": []\n        }\n      ]\n    }\n  ],\n  "data": {\n    "delegator_address": null,\n    "delegator_pubkey": null,\n    "validator_address": null,\n    "amount": null,\n    "max_gas": null,\n    "delegate_transaction": null\n  },\n  "network_code": "near",\n  "chain_code": "testnet",\n  "created_at": "2022-07-19T17:54:02.882Z",\n  "updated_at": "2022-07-19T17:54:02.882Z"\n}\n'))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"continue-to-next-step"},"Continue to Next Step"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"POST")," ",(0,o.kt)("inlineCode",{parentName:"li"},"/api/v1/flows/[:flow_id]/next"))),(0,o.kt)("h4",{id:"parameters-2"},"Parameters"),(0,o.kt)("h5",{id:"body-1"},"Body"),(0,o.kt)("p",null,"The parameters will be different, depending on which protocol and flow you are using.\nRefer to the individual protocol guides for more details (links are in the sidebar)."),(0,o.kt)("h4",{id:"curl-request-2"},"curl Request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Example curl request for the next step of a flow, with blank values"',title:'"Example',curl:!0,request:!0,for:!0,the:!0,next:!0,step:!0,of:!0,a:!0,"flow,":!0,with:!0,blank:!0,'values"':!0},'curl -X POST https://eth-slate.figment.io/api/v1/flows/FLOW-ID/next \\\n-H "Authorization: API-KEY" \\\n-d \'{"name": "create_deposit_transaction", \\\n  "inputs": {\n  "funding_account_address": "",\n  "validator_pub_key": "",\n  "withdrawal_credentials": "",\n  "signature": "",\n  "deposit_data_root": ""\n  }\n}\'\n')),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to see sample response"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"In the response, the ",(0,o.kt)("inlineCode",{parentName:"p"},"actions")," array contains the name of the next action in the flow and the expected inputs for the next step in the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," field.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "1d9e9d5d-f4a2-4974-b549-c35531344fa9",\n  "state": "initialized",\n  "actions": [\n    {\n      "name": "create_delegate_tx",\n      "inputs": [\n        {\n          "name": "delegator_address",\n          "display": "Delegator Address",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "account_balance",\n              "options": {\n                "on": "with_on_chain_validations",\n                "greater_than_or_equal_to": null\n              }\n            }\n          ]\n        },\n        {\n          "name": "delegator_pubkey",\n          "display": "Delegator Pubkey",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ]\n        },\n        {\n          "name": "validator_address",\n          "display": "Validator Address",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "is_validator",\n              "options": {\n                "on": "with_on_chain_validations"\n              }\n            }\n          ]\n        },\n        {\n          "name": "amount",\n          "display": "Amount",\n          "description": "",\n          "type": "decimal",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            },\n            {\n              "type": "numericality",\n              "options": {\n                "greater_than": 0\n              }\n            }\n          ]\n        },\n        {\n          "name": "max_gas",\n          "display": "Max Gas",\n          "description": "",\n          "type": "decimal",\n          "validations": []\n        }\n      ]\n    }\n  ],\n  "data": {\n    "delegator_address": null,\n    "delegator_pubkey": null,\n    "validator_address": null,\n    "amount": null,\n    "max_gas": null,\n    "delegate_transaction": null\n  },\n  "network_code": "near",\n  "chain_code": "testnet",\n  "created_at": "2022-07-19T17:54:02.882Z",\n  "updated_at": "2022-07-19T17:54:02.882Z"\n}\n'))),(0,o.kt)("h3",{id:"code-examples-for-managing-flows"},"Code Examples for Managing Flows"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"broadcasting",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to expand sample code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const NETWORK_CODES = {\n  avalanche: "avalanche",\n  ethereum: "ethereum",\n  near: "near",\n  polkadot: "dot",\n  polygon: "polygon",\n  solana: "solana",\n};\n\nconst CHAIN_CODES = {\n  mainnet: "mainnet", // All Networks\n  goerli: "goerli", // Ethereum PoS testnet\n  testnet: "testnet", // NEAR testnet, Avalanche Fuji\n  devnet: "devnet", // Solana devnet\n  westend: "westend", // Polkadot testnet\n};\n\nconst OPERATIONS = {\n  staking: "staking", // Ethereum only supports staking\n  unstaking: "unstaking", // NEAR or Polkadot\n  transfer: "transfer", // NEAR or Polkadot or Solana\n  sol_unstaking: "unstaking", // Solana unstaking\n  add_proxy: "add_proxy", // Polkadot only\n  remove_proxy: "remove_proxy", // Polkadot only\n};\n\nconst API_KEY = "YOUR API KEY";\n\nfunction startNewFlow(network, chain, operation, params = {}) {\n  fetch(flowUrl, {\n    method: "POST",\n    headers: {\n      Authorization: `${API_KEY}`,\n      "Content-Type": "application/json",\n    },\n    body: JSON.stringify({\n      flow: {\n        network_code: NETWORK_CODES[`${network}`],\n        chain_code: CHAIN_CODES[`${chain}`],\n        operation: OPERATIONS[`${operation}`],\n        version: "v1",\n      },\n    }),\n  })\n    .then((result) => result.json())\n    .then(console.log);\n}\n\nfunction continueFlow(flowId, name, inputs = {}) {\n  console.log(name, inputs);\n  fetch(`${flowUrl}/${flowId}/next`, {\n    method: "PUT",\n    headers: {\n      Authorization: `${API_KEY}`,\n      "Content-Type": "application/json",\n    },\n    body: JSON.stringify({\n      name,\n      inputs,\n    }),\n  })\n    .then((result) => result.json())\n    .then((json) => console.log(JSON.stringify(json, null, 2)));\n}\n\nfunction getFlow(flowId) {\n  fetch(`${flowUrl}/${flowId}`, {\n    method: "GET",\n    headers: {\n      Authorization: `${API_KEY}`,\n    },\n  })\n    .then((result) => result.json())\n    .then((json) => console.log(JSON.stringify(json, null, 2)));\n}\n'))))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"managing-webhooks"},"Managing WebHooks"),(0,o.kt)("h3",{id:"authentication"},"Authentication"),(0,o.kt)("p",null,"You require an API key to authorize requests to the Webhooks API endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'{2} title="Authorization header"',"{2}":!0,title:'"Authorization','header"':!0},"curl -X GET 'https://eth-slate.figment.io/api/v1/webhook_endpoints/15' \\\n-H 'Authorization: <api_key>'\n")),(0,o.kt)("h3",{id:"create-a-new-webhook-endpoint"},"Create a new Webhook endpoint"),(0,o.kt)("p",null,"You can send a ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," request to create a new webhook endpoint.\nEach webhook is identified by a sequential number.\nCurrently when a webhook ID has been deleted it cannot be reused."),(0,o.kt)("p",null,"You will be provided with the ",(0,o.kt)("inlineCode",{parentName:"p"},"secret")," when you first create a webhook. Remember to capture this data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Sample request POST /webhook_endpoints"',title:'"Sample',request:!0,POST:!0,'/webhook_endpoints"':!0},'curl -X POST \'https://eth-slate.figment.io/api/v1/webhook_endpoints\' \\\n-H \'Authorization: API-KEY\' \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n    "webhook_endpoint": {\n        "target_url": "https://example.com/my/endpoint",\n        "event_types": ["*"],\n        "enabled": "false"\n    }\n}\'\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Sample Response"',title:'"Sample','Response"':!0},'{\n  "id": 16,\n  "event_types": [],\n  "target_url": "https://example.com/my/endpoint",\n  "enabled": true,\n  "object": "webhook_endpoint",\n  "created": "2022-07-26T19:27:12.647Z",\n  // highlight-next-line\n  "secret": "whsec_B8sidV4Bm8NnstMuP3a9TSGYov... [REDACTED]"\n}\n')),(0,o.kt)("h3",{id:"retreive-a-webhook-endpoint"},"Retreive a Webhook endpoint"),(0,o.kt)("p",null,"You can send a ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," request, including the webhook ID number in the request URL, to retreive details for an existing webhook endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="GET /webhook_endpoints/[:webhook_endpoint_id]"',title:'"GET','/webhook_endpoints/[:webhook_endpoint_id]"':!0},"curl -X GET 'https://eth-slate.figment.io/api/v1/webhook_endpoints/15' \\\n-H 'Authorization: API-KEY'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Sample Response"',title:'"Sample','Response"':!0},'{\n  "object": "list",\n  "url": "/api/v1/webhook_endpoints",\n  "has_more": false,\n  "data": [\n    {\n      "id": 15,\n      "event_types": ["*"],\n      "target_url": "https://example.com/my/endpoint",\n      "enabled": true,\n      "object": "webhook_endpoint",\n      "created": "2022-07-26T18:20:21.849Z"\n    }\n  ]\n}\n')),(0,o.kt)("h3",{id:"update-webhook-endpoint"},"Update Webhook endpoint"),(0,o.kt)("p",null,"You can send a ",(0,o.kt)("inlineCode",{parentName:"p"},"PUT")," request to update details for an existing webhook endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="PUT /webhook_endpoints/[:webhook_endpoint_id]"',title:'"PUT','/webhook_endpoints/[:webhook_endpoint_id]"':!0},'curl -X PUT \'https://eth-slate.figment.io/api/v1/webhook_endpoints/15\' \\\n-H \'Authorization: API-KEY\' \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n    "webhook_endpoint": {\n        "target_url": "https://example.com/my/new/endpoint",\n        "event_types": ["*"],\n        // highlight-next-line\n        "enabled": "true"\n    }\n}\'\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Sample Response"',title:'"Sample','Response"':!0},'{\n  "id": 15,\n  "event_types": ["*"],\n  "target_url": "https://example.com/my/new/endpoint",\n  // highlight-next-line\n  "enabled": true,\n  "object": "webhook_endpoint",\n  "created": "2022-07-26T19:27:12.647Z"\n}\n')),(0,o.kt)("h3",{id:"list-existing-webhook-endpoints"},"List existing Webhook endpoints"),(0,o.kt)("p",null,"You can send a ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," request to retreive details for all your webhook endpoints."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="GET /webhook_endpoints"',title:'"GET','/webhook_endpoints"':!0},"curl -X PUT 'https://eth-slate.figment.io/api/v1/webhook_endpoints' \\\n-H 'Authorization: API-KEY'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Sample Response"',title:'"Sample','Response"':!0},'{\n  "object": "list",\n  "url": "/api/v1/webhook_endpoints",\n  "has_more": false,\n  "data": [\n    {\n      "id": 16,\n      "event_types": ["*"],\n      "target_url": "https://example.com/my/endpoint",\n      "enabled": true,\n      "object": "webhook_endpoint",\n      "created": "2022-07-26T19:27:12.647Z"\n    },\n    {\n      "id": 15,\n      "event_types": ["*"],\n      "target_url": "https://example.com/my/new/endpoint",\n      "enabled": false,\n      "object": "webhook_endpoint",\n      "created": "2022-07-26T18:20:21.849Z"\n    }\n  ]\n}\n')),(0,o.kt)("h3",{id:"delete-an-existing-webhook-endpoint"},"Delete an existing Webhook endpoint"),(0,o.kt)("p",null,"You can send a ",(0,o.kt)("inlineCode",{parentName:"p"},"DELETE")," request, including the webhook ID number in the request URL, to delete a webhook endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="DELETE /webhook_endpoints/[:webhook_endpoint_id]"',title:'"DELETE','/webhook_endpoints/[:webhook_endpoint_id]"':!0},"curl -X PUT 'https://eth-slate.figment.io/api/v1/webhook_endpoints/15' \\\n-H 'Authorization: API-KEY'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Example response"',title:'"Example','response"':!0},"204 - No Content\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This response does not contain any JSON. Status Code ",(0,o.kt)("strong",{parentName:"p"},"204")," indicates a successful deletion.")))}m.isMDXComponent=!0}}]);