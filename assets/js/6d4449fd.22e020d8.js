"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[9471],{2750:(e,t,n)=>{n.d(t,{ZP:()=>l});var s=n(7462),a=(n(7294),n(3905)),o=n(5488),i=n(5162),r=n(7643);const d={toc:[{value:"Authentication",id:"authentication",level:3}]};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,s.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"authentication"},"Authentication"),(0,a.kt)("div",null,"API calls require authentication with API key via ",(0,a.kt)("code",null,"Authorization")," ","request header or ",(0,a.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,a.kt)("strong",null,n.network," ",n.service)," ","endpoint, hosted at ",(0,a.kt)("code",null,n.url),(0,a.kt)("br",null),(0,a.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,a.kt)(r.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${n.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,a.kt)(i.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,a.kt)(r.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${n.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,a.kt)(i.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,a.kt)(r.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${n.url}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,a.kt)(i.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,a.kt)(r.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${n.url}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`))))}l.isMDXComponent=!0},3976:(e,t,n)=>{n.d(t,{Z:()=>o});var s=n(7294),a=n(6550);function o(e){let{network:t,networks:n,methods:o,service:i}=e;const r=(0,a.TH)(),d=(0,a.k6)();return s.createElement("div",null,s.createElement("label",null,"Change Network: "),s.createElement("select",{className:"custom-select",defaultValue:t,onChange:e=>{d.push(r.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},n.map((e=>s.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),s.createElement("label",null," Jump to: "),s.createElement("select",{className:"custom-select",defaultValue:r.hash.replace("#","")||"",onChange:e=>{d.push(`#${e.target.value}`)}},o.map((e=>s.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},7297:(e,t,n)=>{n.d(t,{Z:()=>a});var s=n(7294);function a(e){let{network:t,service:n}=e;return(0,s.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=t;let s=e.previousElementSibling;s=s.cloneNode(!0),s.querySelector(".breadcrumbs__link span").innerHTML=n.label,s.querySelector(".breadcrumbs__link").href=n.link,e.insertAdjacentElement("beforebegin",s)}),[t]),s.createElement(s.Fragment,null)}},3213:(e,t,n)=>{n.d(t,{S:()=>K});var s=n(7462),a=n(7294),o=n(8538),i=n(7748),r=n(460),d=n.n(r),l=n(3746),u=n(6412);const c={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function m(e){let{children:t="",header:n,actions:o,disabled:i=!1,status:r,onValueChange:m}=e;const h=(0,u.p)(),p=(0,a.useRef)(null);(0,a.useEffect)((()=>{var e;const t=null==(e=p.current)?void 0:e.querySelector("textarea"),n=e=>{const t=e.target;t.style.width=t.scrollWidth+"px"};return t.addEventListener("input",n),()=>t.removeEventListener("input",n)}),[]);return a.createElement("div",{ref:p},a.createElement(g,{actions:o,status:r},n),a.createElement("div",{className:c.Container},a.createElement(d(),{value:t,onValueChange:m,highlight:function(e){return void 0===e&&(e=""),a.createElement(l.ZP,(0,s.Z)({},l.lG,{theme:h,code:e,language:"json"}),(e=>{let{className:t,style:n,tokens:o,getLineProps:i,getTokenProps:r}=e;return a.createElement("div",{className:c.Code},o.map(((e,t)=>a.createElement("div",(0,s.Z)({key:t},i({line:e,key:t}),{className:c.Line}),a.createElement("span",{className:c.LineContent},e.map(((e,t)=>a.createElement("span",(0,s.Z)({key:t},r({token:e,key:t}))))))))))}))},disabled:i,ignoreTabKey:!0,padding:10,style:{...h.plain,overflow:"auto"},className:c.Editor})))}function g(e){let{children:t,actions:n=[],status:s}=e;return a.createElement("div",{className:c.Header,"data-status":s},a.createElement("span",null,t),a.createElement("span",{className:c.Actions},n.map(((e,t)=>{let{title:n,onClick:s,Component:o=n}=e;return a.createElement("button",{className:c.HeaderButton,key:`${t}:${n}`,title:n,onClick:s},o)}))))}var h=n(195);const p="overlayHeaderButton_IGf5";const b=function(e,t){const n=(0,a.useRef)(!1),s={error:void 0,data:void 0,loading:!1},[o,i]=(0,a.useReducer)(((e,t)=>{switch(t.type){case"loading":return{...s,loading:!0};case"fetched":return{...s,data:t.payload,loading:!1};case"error":return{...s,error:t.payload,loading:!1};default:return e}}),s);return{...o,fetchData:async function(s,a){void 0===a&&(a={}),i({type:"loading"});try{const o=await fetch(e+(s?`/${s}`:""),{...t,...a});if(!o.ok){let e,t,n;try{n=JSON.parse(await o.text()),e=await o.json(),t=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(t,null,2)||JSON.stringify(n,null,2)||o.statusText)}const r=await o.json();if(n.current)return;return i({type:"fetched",payload:r}),r}catch(o){if(n.current)return;return i({type:"error",payload:o.message}),null}}}};var v,y=n(7643),f=n(4672);function I(){return I=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},I.apply(this,arguments)}const C=e=>{let{title:t,titleId:n,...s}=e;return a.createElement("svg",I({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},s),t?a.createElement("title",{id:n},t):null,v||(v=a.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var A;function k(){return k=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},k.apply(this,arguments)}const E=e=>{let{title:t,titleId:n,...s}=e;return a.createElement("svg",k({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},s),t?a.createElement("title",{id:n},t):null,A||(A=a.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function _(e){let{req:t,res:n,interactive:s,endpoint:o}=e;const[i,r]=(0,a.useState)(D(t.body)),[d,l]=(0,a.useState)(t.query),[u,c]=(0,a.useState)(B(n.body)),g="string"==typeof t.body&&0==t.body.indexOf("query"),{data:v,error:I,loading:A,fetchData:k}=b(o,{method:t.method,headers:{...t.headers,"Content-Type":g?"application/graphql":"application/json"},body:D(t.body)}),[_,w]=(0,a.useState)(null);(0,a.useEffect)((()=>{A?w("LOADING"):I||null!=v&&v.error?w("ERROR"):v&&w("SUCCESS")}),[v,I,A]);const q=[s?{title:"Run request",onClick:async()=>{const e=await k(d,{body:i});e&&c(B(e))},Component:a.createElement(a.Fragment,null,a.createElement(C,null)," Run")}:null,{title:"Copy",onClick:()=>(0,h.Z)(i),Component:a.createElement(f.Z,{code:"",className:p})},s?{title:"Reset",onClick:()=>{w(null),l(t.query),r(D(t.body)),c(B(n.body))},Component:a.createElement(E,null)}:null].filter((e=>!!e));return a.createElement(a.Fragment,null,a.createElement(m,{header:"GET"===t.method?"Request Query "+(s?"(try it)":""):"Request Body "+(s?"(try it)":""),actions:q,disabled:!s,onValueChange:e=>{s&&("GET"===t.method?l(e):"POST"===t.method&&r(e))}},"GET"===t.method?d:i),a.createElement(y.Z,{title:_?"Response":"Example Response",language:"json"},I?`${I}`:u))}function B(e){return JSON.stringify(e,null,2)}function D(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const w="heading_REER";var q=n(9960),x=n(3905);const R={toc:[]};function M(e){let{components:t,...n}=e;return(0,x.kt)("wrapper",(0,s.Z)({},R,n,{components:t,mdxType:"MDXLayout"}),(0,x.kt)("details",{open:n.accordionOpen?"open":void 0},(0,x.kt)("summary",null,(0,x.kt)("span",{className:"open"},"Specification"),(0,x.kt)("span",{className:"closed"},"View Specification")),(0,x.kt)(o.D,{mdxType:"ReactMarkdown"},n.details)))}function S(e){let{name:t,content:n="",interactive:s,request:i,accordionOpen:r=!1,response:d,endpoint:l}=e;["Rewards (by epoch)","Rewards (daily)"].includes(t)&&(i.body={...i.body,start_time:new Date(Date.now()-("Rewards (by epoch)"===t?1728e5:864e5)).toISOString().split("T")[0],end_time:(new Date).toISOString().split("T")[0]});const[u,...c]=n.trim().split(/\n+/),m=c.join("\n");return a.createElement(a.Fragment,null,a.createElement("h2",{id:t.toLowerCase(),className:w,"data-method":i.method},a.createElement(q.Z,{to:`#${t.toLowerCase()}`},t)),a.createElement(o.D,null,u),a.createElement(_,{req:i,res:d,interactive:s,endpoint:l}),a.createElement(M,{details:m,accordionOpen:r}),a.createElement("hr",null))}function K(e){let{network:t,methods:n,service:o,proxy:r}=e;return a.createElement(a.Fragment,null,a.createElement("h3",null,"Available Methods"),n.map(((e,n)=>a.createElement(S,(0,s.Z)({key:t+n},e,{endpoint:`${r}/${o}/${t}`,accordionOpen:"node-api"!==o})))),a.createElement(i.Z,null))}M.isMDXComponent=!0},9044:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>u,toc:()=>m});var s=n(7462),a=(n(7294),n(3905)),o=n(3213),i=n(3976),r=(n(7297),n(2750));const d={title:"Cosmos LCD",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Node API - Cosmos LCD",image:"img/logo.svg",keywords:["Node API","Cosmos LCD"]},l="Node API - Cosmos LCD",u={unversionedId:"api-reference/node-api/cosmos-lcd",id:"api-reference/node-api/cosmos-lcd",title:"Cosmos LCD",description:"Node API - Cosmos LCD",source:"@site/docs/api-reference/node-api/cosmos-lcd.mdx",sourceDirName:"api-reference/node-api",slug:"/api-reference/node-api/cosmos-lcd",permalink:"/api-reference/node-api/cosmos-lcd",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Cosmos LCD",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Node API - Cosmos LCD",image:"img/logo.svg",keywords:["Node API","Cosmos LCD"]},sidebar:"docsSidebar"},c={},m=[],g={toc:m};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,s.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"node-api---cosmos-lcd"},"Node API - Cosmos LCD"),(0,a.kt)(i.Z,{service:"node-api",methods:[{name:"/node_info"},{name:"/syncing"},{name:"/blocks/latest"},{name:"/blocks/{height}"},{name:"/validatorsets/latest"},{name:"/validatorsets/{height}"},{name:"/txs"},{name:"/staking/delegators/{delegatorAddr}/delegations"},{name:"/staking/delegators/{delegatorAddr}/unbonding_delegations"},{name:"/cosmos/auth/v1beta1/accounts"},{name:"\u200b/cosmos\u200b/auth\u200b/v1beta1\u200b/accounts\u200b/{address}"},{name:"/cosmos/auth/v1beta1/params"},{name:"/cosmos/bank/v1beta1/balances/{address}"},{name:"/cosmos/bank/v1beta1/denoms_metadata"},{name:"\u200b/cosmos\u200b/bank\u200b/v1beta1\u200b/denoms_metadata\u200b/{denom}"},{name:"/cosmos/bank/v1beta1/params"},{name:"/cosmos/bank/v1beta1/supply"},{name:"/cosmos/bank/v1beta1/supply/{denom}"},{name:"/cosmos/distribution/v1beta1/community_pool"},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards"},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}"},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators"},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address"},{name:"/cosmos/distribution/v1beta1/params"},{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/commission"},{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards"},{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/slashes"},{name:"\u200b/cosmos\u200b/evidence\u200b/v1beta1\u200b/evidence"},{name:"/cosmos/evidence/v1beta1/evidence/{evidence_hash}"},{name:"/cosmos/gov/v1beta1/params/{params_type}"},{name:"/cosmos/gov/v1beta1/proposals"},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}"},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits"},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}"},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/tally"},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/votes"},{name:"\u200b/cosmos\u200b/gov\u200b/v1beta1\u200b/proposals\u200b/{proposal_id}\u200b/votes\u200b/{voter}"},{name:"/cosmos/mint/v1beta1/annual_provisions"},{name:"/cosmos/mint/v1beta1/inflation"},{name:"/cosmos/mint/v1beta1/params"},{name:"/cosmos/slashing/v1beta1/params"},{name:"/cosmos/slashing/v1beta1/signing_infos"},{name:"/cosmos/slashing/v1beta1/signing_infos/{cons_address}"},{name:"/cosmos/staking/v1beta1/delegations/{delegator_addr}"},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations"},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations"},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators"},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}"},{name:"/cosmos/staking/v1beta1/historical_info/{height}"},{name:"/cosmos/staking/v1beta1/params"},{name:"/cosmos/staking/v1beta1/pool"},{name:"/cosmos/staking/v1beta1/validators"},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}"},{name:"\u200b/cosmos\u200b/staking\u200b/v1beta1\u200b/validators\u200b/{validator_addr}\u200b/delegations"},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}"},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation"},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations"},{name:"/cosmos/upgrade/v1beta1/applied_plan/{name}"},{name:"/cosmos/upgrade/v1beta1/current_plan"},{name:"/cosmos/upgrade/v1beta1/module_versions"},{name:"/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}"},{name:"/cosmos/authz/v1beta1/grants"},{name:"/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}"},{name:"/cosmos/feegrant/v1beta1/allowances/{grantee}"},{name:"/cosmos/base/tendermint/v1beta1/blocks/latest"},{name:"/cosmos/base/tendermint/v1beta1/blocks/{height}"},{name:"/cosmos/base/tendermint/v1beta1/node_info"},{name:"/cosmos/base/tendermint/v1beta1/syncing"},{name:"/cosmos/base/tendermint/v1beta1/validatorsets/latest"},{name:"/cosmos/base/tendermint/v1beta1/validatorsets/{height}"},{name:"/cosmos/tx/v1beta1/simulate"},{name:"/cosmos/tx/v1beta1/txs"},{name:"/cosmos/tx/v1beta1/txs"},{name:"/cosmos/tx/v1beta1/txs/{hash}"}],networks:[{label:"Arbitrum",value:"arbitrum"},{label:"Avalanche C-Chain",value:"avalanche-c-chain"},{label:"Avalanche P-Chain",value:"avalanche-p-chain"},{label:"Avalanche X-Chain",value:"avalanche-x-chain"},{label:"BNB",value:"bnb"},{label:"Celo",value:"celo"},{label:"Cosmos LCD",value:"cosmos-lcd"},{label:"Cosmos Tendermint RPC",value:"cosmos-tendermint-rpc"},{label:"Ethereum",value:"ethereum"},{label:"Fantom",value:"fantom"},{label:"Kusama Sidecar",value:"kusama-sidecar"},{label:"Mina GraphQL",value:"mina-graphql"},{label:"NEAR",value:"near"},{label:"Optimism",value:"optimism"},{label:"Osmosis LCD",value:"osmosis-lcd"},{label:"Osmosis Tendermint RPC",value:"osmosis-tendermint-rpc"},{label:"Polkadot Sidecar",value:"polkadot-sidecar"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"cosmos-lcd",mdxType:"ApiReferenceNav"}),(0,a.kt)(r.ZP,{url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",network:"Cosmos Lcd",service:"Node API",mdxType:"MakingCalls"}),(0,a.kt)(o.S,{methods:[{name:"/node_info",content:"Information about the connected node\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the properties of the connected node including `node_info`, `protocol_version`, `application_version` and `cosmos_sdk_version`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"node_info"},interactive:!0,response:{name:"/node_info",status:"OK",code:200,body:{node_info:{protocol_version:{p2p:"8",block:"11",app:"0"},id:"9f2567a0b1bb6e7e4521c3e815e9924e8272a54e",listen_addr:"tcp://15.235.53.169:26656",network:"cosmoshub-4",version:"v0.34.19",channels:"40202122233038606100",moniker:"dGmusr3h66",other:{tx_index:"on",rpc_address:"tcp://0.0.0.0:26657"}},application_version:{name:"gaia",server_name:"gaiad",version:"v7.0.3",commit:"d0884c29aac4c1e647b0a82f3df31515d2bd06a3",build_tags:"netgo,ledger",go:"go version go1.19 linux/amd64",build_deps:["filippo.io/edwards25519@v1.0.0-beta.2","github.com/99designs/keyring@v1.1.6","github.com/ChainSafe/go-schnorrkel@v0.0.0-20200405005733-88cbf1b4c40d","github.com/Workiva/go-datastructures@v1.0.53","github.com/armon/go-metrics@v0.3.10","github.com/beorn7/perks@v1.0.1"],cosmos_sdk_version:"v0.45.6"}}}},{name:"/syncing",content:"Get if the node is currently syncing with other nodes\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the node syncing status - `true` / `false`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"syncing"},interactive:!0,response:{name:"/syncing",status:"OK",code:200,body:{syncing:!1}}},{name:"/blocks/latest",content:"Get the latest block.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the latest block details including `block_id`, `hash`, `block`, `version` etc.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"blocks/latest"},interactive:!0,response:{name:"/blocks/latest",status:"OK",code:200,body:{block_id:{hash:"4A47A94F7D4157D96F9B34DEAC013BD2ACB7E3342204B8662588B9039F70C93B",parts:{total:1,hash:"5F548499878A176C55E6514F4FD26FB93D55238F7CD7557E3AF77E039016B968"}},block:{header:{version:{block:"11"},chain_id:"cosmoshub-4",height:"11807059",time:"2022-08-26T13:38:08.436329605Z",last_block_id:{hash:"754EE9C2C4436DFC7D2B42B1A30ABF5ADEFA1160B11A41B428F5F17ECE4E05C5",parts:{total:1,hash:"26A9676886D1950E6692AD8404964845A9CB55DA9C502123DC15F0026BF2C296"}},last_commit_hash:"0D0D444CC4F7035099B69F3A0BC1739DD6C83FD0C683BD6FAF82DB4D4782B54D",data_hash:"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",validators_hash:"1D07A958F50F3E5E59CA54FB8BADA1B77BB6F758623B66A64A24C004428E2A18",next_validators_hash:"1D07A958F50F3E5E59CA54FB8BADA1B77BB6F758623B66A64A24C004428E2A18",consensus_hash:"80364965B7C2CC9DE961C0998B47A7F93F1970077EB882E0ED1C3822408888C7",app_hash:"A254CB7E50C28939CD28CC81D84DB17216290D612582366057F9EE0EF8845235",last_Response_hash:"8A48A0368F38EA1866B3011A4D712FED20749B6A4CE03A5894AA70CDC2AEB0CA",evidence_hash:"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",proposer_address:"83F47D7747B0F633A6BA0DF49B7DCF61F90AA1B0"},data:{txs:[]},evidence:{evidence:[]},last_commit:{height:"11807058",round:0,block_id:{hash:"754EE9C2C4436DFC7D2B42B1A30ABF5ADEFA1160B11A41B428F5F17ECE4E05C5",parts:{total:1,hash:"26A9676886D1950E6692AD8404964845A9CB55DA9C502123DC15F0026BF2C296"}},signatures:[{block_id_flag:2,validator_address:"D68EEC0D2E8248F1EC64CDB585EDB61ECA432BD8",timestamp:"2022-08-26T13:38:08.461919856Z",signature:"MxiXr3mfH4jtLF4N80nW8vX8Pvgvsg5EJw6/7Pz56lsPP2n99/nyhkaLVYTZ3/aCFBpBwDdmsTH4J4lTuLgABA=="}]}}}}},{name:"/blocks/{height}",content:"Get a block at a certain height.\n\n### Parameters\n\n- `height` number (path) (required) - Block height\n\n### Response\n\n- Returns the block details including `block_id`, `hash`, `block`, `version` etc. for the given block height.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"blocks/11789134"},interactive:!0,response:{name:"/blocks/{height}",status:"OK",code:200,body:{block_id:{hash:"72B6624A957351B3047FB2A050293CBF82114451DC52C0A031BDFAC491B5616A",parts:{total:1,hash:"36B2AC44E2BA850FFB0E4589A78727CB7D5464552E566F3C7E4F4CF85C8642AB"}},block:{header:{version:{block:"11"},chain_id:"cosmoshub-4",height:"11789134",time:"2022-08-25T04:18:54.375989427Z",last_block_id:{hash:"D649022DA3828D08E9625EADCAA7829854522EF7EE4AFED8A502C060EECD5CD6",parts:{total:3,hash:"FFFE519B473A977932379A4D4381FB706BF78D580C85322A399421081C5D2307"}},last_commit_hash:"EF1E6A2BE2D1627124BB5E7C0F08FE04A07B8A8B1DA97009933F3E24A0B7FE05",data_hash:"99C22238F70AFDE55974DA5BB48384A80F1EC4D91382A51B07289922AA0AFAC0",validators_hash:"8F7DEBE6ECD3716F2405CC15A22A3DF87E403E38B8F4AD47F10F5514F2E317D3",next_validators_hash:"63C97725A4D4A708B0CE575B44C62968835F637E0AB73F5D735564C4AFED03BF",consensus_hash:"80364965B7C2CC9DE961C0998B47A7F93F1970077EB882E0ED1C3822408888C7",app_hash:"0A35F9CAAE5E81D4B36CAF65AE9D7AC734F83ABC7715B4A6A053B0AEF65B0785",last_Response_hash:"47BCAA173D83B23085763D37C89734DA1A739D28B111B3FCF5BF94C3AEAF25F2",evidence_hash:"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",proposer_address:"1CED30733D1625C89AB698677606D0E37B3676A9"},data:{txs:["CqMBCqABCjcvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkEmUKLWNvc21vczE1azRuMzVmc3B5bTVwbHlhYTMydGxzdDN3cnk3cTZ0bnEwN24wbhI0Y29zbW9zdmFsb3BlcjF0ZmxrMzBtcTV2Z3FqZGx5OTJra2hocTNyYWV2MmhuejZlZXRlMxJnClAKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiEC87ZjJyRi3TsrCdXxdxB96KLQt1V8tNxMIa/xWiPcjvQSBAoCCAEYMRITCg0KBXVhdG9tEgQzNTAwEODFCBpA/vE9FME3BF6S6vhvfUEdrZ/TR06FOinyMEqvhrqh8gkebQsjufi26SxHs2/eZKhlL2prUp0+fQNLSY8DgGdUeg=="]},evidence:{evidence:[]},last_commit:{height:"11789133",round:0,block_id:{hash:"D649022DA3828D08E9625EADCAA7829854522EF7EE4AFED8A502C060EECD5CD6",parts:{total:3,hash:"FFFE519B473A977932379A4D4381FB706BF78D580C85322A399421081C5D2307"}},signatures:[{block_id_flag:2,validator_address:"D68EEC0D2E8248F1EC64CDB585EDB61ECA432BD8",timestamp:"2022-08-25T04:18:54.562392687Z",signature:"eyxcwrDNhix0ghC9u5zHW7jikSOv6uOea/Srso41+R0lJ4Hl3t23TaLDXezdje6XO7Nq2ZW6TSNhJv12ROHuBQ=="}]}}}}},{name:"/validatorsets/latest",content:"Get the latest set of validators.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the latest `block_height` and list of all `validators`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"validatorsets/latest"},interactive:!0,response:{name:"/validatorsets/latest",status:"OK",code:200,body:{height:"0",result:{block_height:"11807183",validators:[{address:"cosmosvalcons1668wcrfwsfy0rmryek6ctmdkrm9yx27c7grulf",pub_key:{type:"tendermint/PubKeyEd25519",value:"LtiHVLCcE+oFII0vpIl9mfkGDmk9BpPg1eUkvKnO4xw="},proposer_priority:"11982299",voting_power:"14056148"}],total:"175"}}}},{name:"/validatorsets/{height}",content:"Get a validator set at a certain height.\n\n### Parameters\n\n- `height` number (path) (required) - Block height.\n\n### Response\n\n- Returns the set of `validators` at a given `height`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"validatorsets/11789134"},interactive:!0,response:{name:"/validatorsets/{height}",status:"OK",code:200,body:{height:"0",result:{block_height:"11789134",validators:[{address:"cosmosvalcons1668wcrfwsfy0rmryek6ctmdkrm9yx27c7grulf",pub_key:{type:"tendermint/PubKeyEd25519",value:"LtiHVLCcE+oFII0vpIl9mfkGDmk9BpPg1eUkvKnO4xw="},proposer_priority:"48125930",voting_power:"14053521"}],total:"175"}}}},{name:"/txs",content:'Broadcast a signed tx to a full node.\n\n### Parameters\n\n- `txBroadcast` object (body) (required) - The tx must be a signed StdTx. The supported broadcast modes include `"block"` (return after tx commit), `"sync"` (return afer CheckTx) and `"async"` (return right away).\n\n### Response\n\n- Returns the confirmation of the successful broadcasted transaction including `check_tx`, `deliver_tx`, `hash` and `height` of transaction.',request:{method:"POST",header:[],body:{tx:{msg:["string"],fee:{gas:"string",amount:[{denom:"stake",amount:"50"}]},memo:"string",signature:{signature:"MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=",pub_key:{type:"tendermint/PubKeySecp256k1",value:"Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"},account_number:"0",sequence:"0"}},mode:"block"},url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",headers:{},query:"txs"},interactive:!0,response:{name:"/txs",body:{check_tx:{code:0,data:"data",log:"log",gas_used:5e3,gas_wanted:1e4,info:"info",tags:["",""]},deliver_tx:{code:5,data:"data",log:"log",gas_used:5e3,gas_wanted:1e4,info:"info",tags:["",""]},hash:"EE5F3404034C524501629B56E0DDC38FAD651F04",height:0}}},{name:"/staking/delegators/{delegatorAddr}/delegations",content:"Submit Delegation\n\n### Parameters\n\n- `delegation` object (body) (required) - Delegate an amount of liquid coins to a validator.\n- `delegatorAddr` string (path) (required) Bech32 AccAddress of Delegator.\n\n### Response\n\n- Returns the confirmation of delegation in response including `msg`, `fee`, `gas`, `fee`, `denom`, `amount`, `memo`, `signatures`, `pubkey`, `type`, `value`, `account_number` and `sequence`.",request:{method:"POST",header:[],body:{base_req:{from:"cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc",memo:"Sent via Cosmos Voyager \xf0\x9f\x9a\x80",chain_id:"Cosmos-Hub",account_number:"0",sequence:"1",gas:"200000",gas_adjustment:"1.2",fees:[{denom:"stake",amount:"50"}],simulate:!1},delegator_address:"cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27",validator_address:"cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d",amount:{denom:"stake",amount:"50"}},url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",headers:{},query:"staking/delegators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d/delegations"},interactive:!0,response:{name:"/staking/delegators/{delegatorAddr}/delegations",body:{msg:["string"],fee:{gas:"string",amount:[{denom:"stake",amount:"50"}]},memo:"string",signature:{signature:"MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=",pub_key:{type:"tendermint/PubKeySecp256k1",value:"Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"},account_number:"0",sequence:"0"}}}},{name:"/staking/delegators/{delegatorAddr}/unbonding_delegations",content:"Submit an unbonding delegation\n\n### Parameters\n\n- `delegation` object (body) (required) - Unbond an amount of bonded shares from a validator\n- `delegatorAddr` string (path) (required) Bech32 AccAddress of Delegator.\n\n### Response\n\n- Returns the confirmation of unbonding delegation in response including `msg`, `fee`, `gas`, `fee`, `denom`, `amount`, `memo`, `signatures`, `pubkey`, `type`, `value`, `account_number` and `sequence`.",request:{method:"POST",header:[],body:{base_req:{from:"cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc",memo:"Sent via Cosmos Voyager \xf0\x9f\x9a\x80",chain_id:"Cosmos-Hub",account_number:"0",sequence:"1",gas:"200000",gas_adjustment:"1.2",fees:[{denom:"stake",amount:"50"}],simulate:!1},delegator_address:"cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27",validator_address:"cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d",amount:{denom:"stake",amount:"50"}},url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",headers:{},query:"staking/delegators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d/unbonding_delegations"},interactive:!0,response:{name:"/staking/delegators/{delegatorAddr}/unbonding_delegations",body:{msg:["string"],fee:{gas:"string",amount:[{denom:"stake",amount:"50"}]},memo:"string",signature:{signature:"MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=",pub_key:{type:"tendermint/PubKeySecp256k1",value:"Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"},account_number:"0",sequence:"0"}}}},{name:"/cosmos/auth/v1beta1/accounts",content:"Returns all existing accounts.\n\n### Parameters\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query)\t limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- It returns accounts with details including account `type`, `address`, `pub_key`, `account_number` and `pagination`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/auth/v1beta1/accounts?pagination.limit=2"},interactive:!0,response:{name:"/cosmos/auth/v1beta1/accounts",status:"OK",code:200,body:{accounts:[{"@type":"/cosmos.auth.v1beta1.BaseAccount",address:"cosmos1qqqpvkm4dwn66v2zns9dn6ckw2ra0avfn3vv77",pub_key:{"@type":"/cosmos.crypto.secp256k1.PubKey",key:"Ax8nWR1KClme/ixrtf2MY46nwq+UKYrmbFA3rUvu6ln/"},account_number:"470480",sequence:"3"},{"@type":"/cosmos.auth.v1beta1.BaseAccount",address:"cosmos1qqqp39zy24fqcpsps20f9avfa7mln42njr6cpm",pub_key:{"@type":"/cosmos.crypto.secp256k1.PubKey",key:"AqFWo6UBgI1q5qn/KqfZSbcn/2U/Mn1iZ5V0k4gZyamK"},account_number:"658115",sequence:"1"}],pagination:{next_key:"AAAeawM5dUAXLbhCpdZxkpTEXmI=",total:"0"}}}},{name:"\u200b/cosmos\u200b/auth\u200b/v1beta1\u200b/accounts\u200b/{address}",content:"Returns account details based on address.\n\n### Parameters\n\n- `address` string (path) address defines the address to query for.\n\n### Response\n\n- It returns accounts with details including account `type`, `address`, `pub_key`, `account_number` and `sequence`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/auth/v1beta1/accounts/cosmos1nm0rrq86ucezaf8uj35pq9fpwr5r82cl8sc7p5"},interactive:!0,response:{name:"\u200b/cosmos\u200b/auth\u200b/v1beta1\u200b/accounts\u200b/{address}",status:"OK",code:200,body:{account:{"@type":"/cosmos.auth.v1beta1.BaseAccount",address:"cosmos1nm0rrq86ucezaf8uj35pq9fpwr5r82cl8sc7p5",pub_key:{"@type":"/cosmos.crypto.secp256k1.PubKey",key:"ApEvbc+4QJiDoaaXG6v0K3A4zmPON8pu4uzCm4o142u/"},account_number:"15652",sequence:"114429"}}}},{name:"/cosmos/auth/v1beta1/params",content:"Query all parameters.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns `params` with `max_memo_characters`, `tx_sig_limit`, `tx_size_cost_per_byte`, `sig_verify_cost_ed25519` and `sig_verify_cost_secp256k1`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/auth/v1beta1/params"},interactive:!0,response:{name:"/cosmos/auth/v1beta1/params",status:"OK",code:200,body:{params:{max_memo_characters:"512",tx_sig_limit:"7",tx_size_cost_per_byte:"10",sig_verify_cost_ed25519:"590",sig_verify_cost_secp256k1:"1000"}}}},{name:"/cosmos/bank/v1beta1/balances/{address}",content:"Queries the balance of all coins for a single account.\n\n### Parameters\n\n- `address` string (path) address is the address to query balances for.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query)\t limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- It returns balances for the given address which includes `denom`, `amount` and `pagination`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/bank/v1beta1/balances/cosmos1nm0rrq86ucezaf8uj35pq9fpwr5r82cl8sc7p5"},interactive:!0,response:{name:"/cosmos/bank/v1beta1/balances/{address}",status:"OK",code:200,body:{balances:[{denom:"uatom",amount:"3366734439024"}],pagination:{next_key:null,total:"1"}}}},{name:"/cosmos/bank/v1beta1/denoms_metadata",content:"Queries the client metadata for all registered coin denominations.\n\n### Parameters\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query)\t limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Return the `metadatas` of all Comsos Hub tokens with their `denom`, `exponent`, `aliases`, `base`, `display` `name` and `symbol`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/bank/v1beta1/denoms_metadata"},interactive:!0,response:{name:"/cosmos/bank/v1beta1/denoms_metadata",status:"OK",code:200,body:{metadatas:[{description:"The native staking token of the Cosmos Hub.",denom_units:[{denom:"uatom",exponent:0,aliases:["microatom"]},{denom:"matom",exponent:3,aliases:["milliatom"]},{denom:"atom",exponent:6,aliases:[]}],base:"uatom",display:"atom",name:"",symbol:""}],pagination:{next_key:null,total:"1"}}}},{name:"\u200b/cosmos\u200b/bank\u200b/v1beta1\u200b/denoms_metadata\u200b/{denom}",content:"Queries the client metadata of a given coin denomination.\n\n### Parameters\n\n- `denom` string (path) (required) denom is the coin denom to query the metadata for.\n\n### Response\n\n - It returns the `metadata`, `description` and `denom_units` for the given denom of the coin.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/bank/v1beta1/denoms_metadata/uatom"},interactive:!0,response:{name:"\u200b/cosmos\u200b/bank\u200b/v1beta1\u200b/denoms_metadata\u200b/{denom}",status:"OK",code:200,body:{metadata:{description:"The native staking token of the Cosmos Hub.",denom_units:[{denom:"uatom",exponent:0,aliases:["microatom"]},{denom:"matom",exponent:3,aliases:["milliatom"]},{denom:"atom",exponent:6,aliases:[]}],base:"uatom",display:"atom",name:"",symbol:""}}}},{name:"/cosmos/bank/v1beta1/params",content:"Queries the parameters of x/bank module.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the `params` - `send_enabled` and `default_send_enabled` as `true` | `false`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/bank/v1beta1/params"},interactive:!0,response:{name:"/cosmos/bank/v1beta1/params",status:"OK",code:200,body:{params:{send_enabled:[],default_send_enabled:!0}}}},{name:"/cosmos/bank/v1beta1/supply",content:"Queries the total supply of all coins.\n\n### Parameters\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query)\t limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the supply list of various denoms including details like `denom`, `amount` and `total` denoms",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/bank/v1beta1/supply"},interactive:!0,response:{name:"/cosmos/bank/v1beta1/supply",status:"OK",code:200,body:{supply:[{denom:"ibc/00255B18FBBC1E36845AAFDCB4CBD460DC45331496A64C2A29CEAFDD3B997B5F",amount:"1015160059457055549180"}],pagination:{next_key:"aWJjLzUxOUU4MzFEQjVDMzYzMzhGMkQ3MzRDQUY2Q0I3RkM2ODlCOTI2N0UxMEVFMDA0NTQyNzMyNzU4RkIxMUY2QjQ=",total:"339"}}}},{name:"/cosmos/bank/v1beta1/supply/{denom}",content:"Queries the supply of a single coin.\n\n### Parameters\n\n- `denom` string (path) (required) denom is the coin denom to query balances for.\n\n### Response\n\n- Returns the total supply as `amount` for the specified `denom`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/bank/v1beta1/supply/uatom"},interactive:!0,response:{name:"/cosmos/bank/v1beta1/supply/{denom}",status:"OK",code:200,body:{amount:{denom:"uatom",amount:"306775620105244"}}}},{name:"/cosmos/distribution/v1beta1/community_pool",content:"Queries the community pool coins.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the `amount` and `denom` for the community pool coins.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/community_pool"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/community_pool",status:"OK",code:200,body:{pool:[{denom:"uatom",amount:"1084432704927.201378922530458669"}]}}},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards",content:"Queries the total rewards accrued by each validator.\n\n### Parameters\n\n- `delegator_address` string (path) (required) delegator_address defines the delegator address to query for.\n\n### Response\n\n- It returns the `rewards` accrued by each validator and `validator_address` for the given `delegator_address` including the staked `denom` and reward `amount`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/delegators/cosmos15k4n35fspym5plyaa32tlst3wry7q6tnq07n0n/rewards"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards",status:"OK",code:200,body:{rewards:[{validator_address:"cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3",reward:[{denom:"uatom",amount:"216355.307588508220053824"}]}],total:[{denom:"uatom",amount:"216355.307588508220053824"}]}}},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}",content:"Queries the total rewards accrued by a delegation.\n\n### Parameters\n\n- `delegator_address` string (path) (required) delegator_address defines the delegator address to query for.\n\n- `validator_address` string (path) (required) validator_address defines the validator address to query for.\n\n### Response\n\n- Returns the total rewards from a specific validator for delegation.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/delegators/cosmos15k4n35fspym5plyaa32tlst3wry7q6tnq07n0n/rewards/cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}",status:"OK",code:200,body:{rewards:[{denom:"uatom",amount:"216565.264421979960008040"}]}}},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators",content:"Queries the validators of a delegator.\n\n### Parameters\n\n- `delegator_address` string (path) (required) delegator_address defines the delegator address to query for.\n\n### Response\n\n- Returns the list of validators to whom the given address has delegated the tokens.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/delegators/cosmos15k4n35fspym5plyaa32tlst3wry7q6tnq07n0n/validators"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators",status:"OK",code:200,body:{validators:["cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3"]}}},{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address",content:"Queries withdraw address of a delegator.\n\n### Parameters\n\n- `delegator_address` string (path) (required) delegator_address defines the delegator address to query for.\n\n### Response\n\n- Returns the `withdraw_address` of the given `delegator_address`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/delegators/cosmos15k4n35fspym5plyaa32tlst3wry7q6tnq07n0n/withdraw_address"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address",status:"OK",code:200,body:{withdraw_address:"cosmos15k4n35fspym5plyaa32tlst3wry7q6tnq07n0n"}}},{name:"/cosmos/distribution/v1beta1/params",content:"Queries params of the distribution module.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the params of the distribution module which includes `community_tax`, `base_proposer_reward`, `bonus_proposer_reward` and `withdraw_addr_enabled`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/params"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/params",status:"OK",code:200,body:{params:{community_tax:"0.020000000000000000",base_proposer_reward:"0.010000000000000000",bonus_proposer_reward:"0.040000000000000000",withdraw_addr_enabled:!0}}}},{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/commission",content:"Queries accumulated commission for a validator.\n\n### Parameters\n\n- `validator_address` string (path) (required) validator_address defines the validator address to query for.\n\n### Response\n\n- Returns the accumulated `commission` for the given validator address.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/validators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d/commission"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/commission",status:"OK",code:200,body:{commission:{commission:[{denom:"uatom",amount:"665078777.122720453591425010"}]}}}},{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards",content:"Queries rewards of a validator address.\n\n### Parameters\n\n- `validator_address` string (path) (required) validator_address defines the validator address to query for.\n\n### Response\n\n- Returns the pending `rewards` of the given validator.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/validators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d/outstanding_rewards"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards",status:"OK",code:200,body:{rewards:{rewards:[{denom:"uatom",amount:"98519065806.297056414850643616"}]}}}},{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/slashes",content:"Queries slash events of a validator.\n\n### Parameters\n\n- `validator_address` string (path) (required) validator_address defines the validator address to query for.\n\n- `starting_height` string($uint64) (query) starting_height defines the optional starting height to query the slashes.\n\n- `ending_height` string($uint64) (query) starting_height defines the optional ending height to query the slashes.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the list of `slashes` events for the given `validator_address` and total event `count`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/distribution/v1beta1/validators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d/slashes"},interactive:!0,response:{name:"/cosmos/distribution/v1beta1/validators/{validator_address}/slashes",status:"OK",code:200,body:{slashes:[],pagination:{next_key:null,total:"0"}}}},{name:"\u200b/cosmos\u200b/evidence\u200b/v1beta1\u200b/evidence",content:"Queries all evidence.\n\n### Parameters\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the `evidence` if there's any, else null array.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/evidence/v1beta1/evidence"},interactive:!0,response:{name:"\u200b/cosmos\u200b/evidence\u200b/v1beta1\u200b/evidence",status:"OK",code:200,body:{evidence:[],pagination:{next_key:null,total:"0"}}}},{name:"/cosmos/evidence/v1beta1/evidence/{evidence_hash}",content:"Queries evidence based on evidence hash.\n\n### Parameters\n\n- `evidence_hash` string($byte) (path) (required) evidence_hash defines the hash of the requested evidence.\n\n### Response\n\n- Returns the `evidence` details which includes `consensus_address`, `height`, `power` and `time`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/evidence/v1beta1/evidence/DF0C23E8634E480F84B9D5674A7CDC9816466DEC28A3358F73260F68D28D7660"},interactive:!0,response:{name:"/cosmos/evidence/v1beta1/evidence/{evidence_hash}",body:{evidence:{consensus_address:"cosmosvalcons1ntk8eualewuprz0gamh8hnvcem2nrcdsgz563h",height:"11",power:"100",time:"2021-10-20T16:08:38.194017624Z"}}}},{name:"/cosmos/gov/v1beta1/params/{params_type}",content:'Queries all parameters of the gov module.\n\n### Parameters\n\n- `params_type` string (path) (required) params_type defines which parameters to query for, can be one of "voting", "tallying" or "deposit".\n\n### Response\n\n- Returns the parameters for the given `params_type` of the gov module.',request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/params/voting"},interactive:!0,response:{name:"/cosmos/gov/v1beta1/params/{params_type}",status:"OK",code:200,body:{voting_params:{voting_period:"1209600s"},deposit_params:{min_deposit:[],max_deposit_period:"0s"},tally_params:{quorum:"0.000000000000000000",threshold:"0.000000000000000000",veto_threshold:"0.000000000000000000"}}}},{name:"/cosmos/gov/v1beta1/proposals",content:"Queries all proposals based on the given status.\n\n### Parameters\n\n- `proposal_status` string (query) proposal_status defines the status of the proposals.\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting period.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has passed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has been rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has failed.\n\n - Available values : PROPOSAL_STATUS_UNSPECIFIED, PROPOSAL_STATUS_DEPOSIT_PERIOD, PROPOSAL_STATUS_VOTING_PERIOD, PROPOSAL_STATUS_PASSED, PROPOSAL_STATUS_REJECTED, PROPOSAL_STATUS_FAILED\n - Default value : PROPOSAL_STATUS_UNSPECIFIED\n\n- `voter` string (query) voter defines the voter address for the proposals.\n\n- `depositor` string (query) depositor defines the deposit addresses from the proposals.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the `proposals` based on given `params`, response includes the `proposal_id`, `content`, `title`, `description`, `status`, `final_tally_result`, `submit_time`, `deposit_end_time`, `total_deposit`, `voting_start_time` and `voting_end_time`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/proposals?pagination.limit=1"},interactive:!0,response:{name:"/cosmos/gov/v1beta1/proposals",status:"OK",code:200,body:{proposals:[{proposal_id:"1",content:{"@type":"/cosmos.gov.v1beta1.TextProposal",title:"Adjustment of blocks_per_year to come aligned with actual block time",description:"This governance proposal is for adjustment of blocks_per_year parameter to normalize the inflation rate and reward rate.\\n ipfs link: https://ipfs.io/ipfs/QmXqEBr56xeUzFpgjsmDKMSit3iqnKaDEL4tabxPXoz9xc"},status:"PROPOSAL_STATUS_PASSED",final_tally_result:{yes:"97118903526799",abstain:"402380577234",no:"320545400000",no_with_veto:"0"},submit_time:"2019-03-20T06:41:27.040075748Z",deposit_end_time:"2019-04-03T06:41:27.040075748Z",total_deposit:[{denom:"uatom",amount:"512100000"}],voting_start_time:"2019-03-20T20:43:59.630492307Z",voting_end_time:"2019-04-03T20:43:59.630492307Z"}],pagination:{next_key:"AAAAAAAAAAI=",total:"0"}}}},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}",content:"Queries proposal details based on ProposalID.\n\n### Parameters\n\n- `proposal_id` string($uint64) (path) (required) proposal_id defines the unique id of the proposal.\n\n### Response\n\n- Returns the `proposal` based on the given `proposal_id`, the response includes the `proposal_id`, `content`, `title`, `description`, `status`, `final_tally_result`, `submit_time`, `deposit_end_time`, `total_deposit`, `voting_start_time` and `voting_end_time`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/proposals/72"},interactive:!0,response:{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}",status:"OK",code:200,body:{proposal:{proposal_id:"72",content:{"@type":"/cosmos.distribution.v1beta1.CommunityPoolSpendProposal",title:"Bringing Liquid Staking and DeFi to the Cosmos Hub with Interchain Security",description:"This community spend proposal will be used to fund smart contract applications that take advantage of liquid staking. This proposal is requesting 150 000 ATOMs from the Cosmos Hub community pool to fund smart contract applications that are looking to leverage Interchain Security and the liquid staking feature, and to fund P2P\u2019s mission to launch a DeFi Hub consumer chain, set to host the Lido liquid staking protocol.\n\n. Full Proposal: https://ipfs.io/ipfs/QmNeorW8npMEeo4BmJTwmqCMRsjbMJDZDfoMQvh3f1Yeop",recipient:"cosmos1czryt9wefedpqc43k2pnvqyl5txzhqdkxxdfcz",amount:[{denom:"uatom",amount:"150000000000"}]},status:"PROPOSAL_STATUS_PASSED",final_tally_result:{yes:"106381452832061",abstain:"5005503503570",no:"5325126195565",no_with_veto:"7889791135191"},submit_time:"2022-06-23T05:01:43.081233950Z",deposit_end_time:"2022-07-07T05:01:43.081233950Z",total_deposit:[{denom:"uatom",amount:"64010201"}],voting_start_time:"2022-06-26T23:26:05.044259911Z",voting_end_time:"2022-07-10T23:26:05.044259911Z"}}}},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits",content:"Queries all deposits of a single proposal.\n\n### Parameters\n\n- `proposal_id` string($uint64) (path) (required) proposal_id defines the unique id of the proposal.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the `deposits` for the given `proposal_id`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/proposals/76/deposits"},interactive:!0,response:{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits",status:"OK",code:200,body:{deposits:[{proposal_id:"76",depositor:"cosmos198kk24cc2ty2dr76jcq3azz88zmte7qf5pqpy0",amount:[{denom:"uatom",amount:"64000000"}]}],pagination:{next_key:null,total:"1"}}}},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}",content:"Queries single deposit information based proposalID, depositAddr.\n\n### Parameters\n\n- `proposal_id` string ($uint64) (path) (required) proposal_id defines the unique id of the proposal.\n\n- `depositor` string (path) depositor defines the deposit addresses from the proposals.\n\n### Response\n\n- Returns the `deposit` for the given `proposal_id` and `depositor`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/proposals/76/deposits/cosmos198kk24cc2ty2dr76jcq3azz88zmte7qf5pqpy0"},interactive:!0,response:{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}",status:"OK",code:200,body:{deposit:{proposal_id:"76",depositor:"cosmos198kk24cc2ty2dr76jcq3azz88zmte7qf5pqpy0",amount:[{denom:"uatom",amount:"64000000"}]}}}},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/tally",content:"Queries the tally of a proposal vote.\n\n### Parameters\n\n- `proposal_id` string ($uint64) (path) (required) proposal_id defines the unique id of the proposal.\n\n### Response\n\n- Returns the final result tally of the given proposal id.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/proposals/56/tally"},interactive:!0,response:{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/tally",status:"OK",code:200,body:{tally:{yes:"93972118631452",abstain:"2711033962",no:"5868023811",no_with_veto:"35822547113"}}}},{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/votes",content:"Queries votes of a given proposal.\n\n### Parameters\n\n- `proposal_id` string ($uint64) (path) (required) proposal_id defines the unique id of the proposal.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Return `votes` for the given proposal id.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/proposals/72/votes"},interactive:!0,response:{name:"/cosmos/gov/v1beta1/proposals/{proposal_id}/votes",status:"OK",code:200,body:{votes:[],pagination:{next_key:null,total:"0"}}}},{name:"\u200b/cosmos\u200b/gov\u200b/v1beta1\u200b/proposals\u200b/{proposal_id}\u200b/votes\u200b/{voter}",content:"Voted information based on proposal_ID,\n\n### Parameters\n\n- `proposal_id` string($uint64) (path)\t (required) proposal_id defines the unique id of the proposal.\n\n- `voter` string (path)\t(required) voter defines the voter address for the proposals.\n\n### Response\n\n- Returns the `vote` information for the given `proposal_id` including the details `voter` and `option`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/gov/v1beta1/proposals/76/votes/cosmos17vv33gl7esrnulrhz943rrchs623g0aac2m756"},interactive:!0,response:{name:"\u200b/cosmos\u200b/gov\u200b/v1beta1\u200b/proposals\u200b/{proposal_id}\u200b/votes\u200b/{voter}",status:"OK",code:200,body:{vote:{proposal_id:"76",voter:"cosmos17vv33gl7esrnulrhz943rrchs623g0aac2m756",option:"VOTE_OPTION_NO",options:[{option:"VOTE_OPTION_NO",weight:"1.000000000000000000"}]}}}},{name:"/cosmos/mint/v1beta1/annual_provisions",content:"Current minting annual provisions value.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the `annual_provisions` value (`string`)",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/mint/v1beta1/annual_provisions"},interactive:!0,response:{name:"/cosmos/mint/v1beta1/annual_provisions",status:"OK",code:200,body:{annual_provisions:"39099471458353.740970271361539270"}}},{name:"/cosmos/mint/v1beta1/inflation",content:"Returns the current minting inflation value.\n\n### Parameters\n\n- None\n\n### Response\n\n- `inflation` value",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/mint/v1beta1/inflation"},interactive:!0,response:{name:"/cosmos/mint/v1beta1/inflation",status:"OK",code:200,body:{inflation:"0.127414815902221940"}}},{name:"/cosmos/mint/v1beta1/params",content:"Returns the total set of minting parameters.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the set of minting parameters \n - `mint_denom`\n - `inflation_rate_change`\n - `inflation_max`\n - `inflation_min`\n - `goal_bonded`\n - `blocks_per_year`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/mint/v1beta1/params"},interactive:!0,response:{name:"/cosmos/mint/v1beta1/params",status:"OK",code:200,body:{params:{mint_denom:"uatom",inflation_rate_change:"1.000000000000000000",inflation_max:"0.200000000000000000",inflation_min:"0.070000000000000000",goal_bonded:"0.670000000000000000",blocks_per_year:"4360000"}}}},{name:"/cosmos/slashing/v1beta1/params",content:"Queries the parameters of slashing module\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the slashing module parameters which include - \n - `signed_blocks_window`\n - `min_signed_per_window`\n - `downtime_jail_duration`\n - `slash_fraction_double_sign`\n - `slash_fraction_downtime`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/slashing/v1beta1/params"},interactive:!0,response:{name:"/cosmos/slashing/v1beta1/params",status:"OK",code:200,body:{params:{signed_blocks_window:"10000",min_signed_per_window:"0.050000000000000000",downtime_jail_duration:"600s",slash_fraction_double_sign:"0.050000000000000000",slash_fraction_downtime:"0.000100000000000000"}}}},{name:"/cosmos/slashing/v1beta1/signing_infos",content:"Queries signing info of all validators\n\n### Parameters\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the signing info of validator(s) including the validator `address`, `start_height`, `index_offset`, `jailed_until`, `tombstoned` and `missed_blocks_counter`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/slashing/v1beta1/signing_infos?pagination.limit=1"},interactive:!0,response:{name:"/cosmos/slashing/v1beta1/signing_infos",status:"OK",code:200,body:{info:[{address:"",start_height:"0",index_offset:"14968324",jailed_until:"1970-01-01T00:00:00Z",tombstoned:!1,missed_blocks_counter:"0"}],pagination:{next_key:"FAAKpav1kKgV68va4HCv9QvlceuL",total:"0"}}}},{name:"/cosmos/slashing/v1beta1/signing_infos/{cons_address}",content:"Queries the signing info of given cons address\n\n### Parameters\n\n- `cons_address` string (path) (required) cons_address is the address to query signing info of.\n\n### Response\n\n- Returns the `val_signing_info` (validator signing info) for the given `cons_address`, it includes the validator `address`, `start_height`, `index_offset`, `jailed_until`, `tombstoned` and `missed_blocks_counter`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/slashing/v1beta1/signing_infos/cosmosvalcons1qrxwan7srvknxwsm264l0nlc56uw6fd3mq0s7v"},interactive:!0,response:{name:"/cosmos/slashing/v1beta1/signing_infos/{cons_address}",status:"OK",code:200,body:{val_signing_info:{address:"cosmosvalcons1qrxwan7srvknxwsm264l0nlc56uw6fd3mq0s7v",start_height:"4211581",index_offset:"990120",jailed_until:"2022-06-13T11:05:25.609228452Z",tombstoned:!1,missed_blocks_counter:"1"}}}},{name:"/cosmos/staking/v1beta1/delegations/{delegator_addr}",content:"Queries all delegations of a given delegator address.\n\n### Parameters\n\n- `delegator_addr` string (path) (required) delegator_addr defines the delegator address to query for.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns all delegations for the given delegation address including the `delegator_address`, `validator_address`, `shares`, `balance`, `denom` & `amount`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/delegations/cosmos15k4n35fspym5plyaa32tlst3wry7q6tnq07n0n"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/delegations/{delegator_addr}",status:"OK",code:200,body:{delegation_responses:[{delegation:{delegator_address:"cosmos15k4n35fspym5plyaa32tlst3wry7q6tnq07n0n",validator_address:"cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3",shares:"94540744.000000000000000000"},balance:{denom:"uatom",amount:"94540744"}}],pagination:{next_key:null,total:"1"}}}},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations",content:"Queries redelegations of given address.\n\n### Parameters\n\n- `delegator_addr` string (path) (required) delegator_addr defines the delegator address to query for.\n\n- `src_validator_addr` string (query) src_validator_addr defines the validator address to redelegate from.\n\n- `dst_validator_addr` string (query)\ndst_validator_addr defines the validator address to redelegate to.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the `redelegation_responses` including the info of `redelegation` and redelegation `entries`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/delegators/cosmos18eyfc75wjrx4nwmxrkaxmhjzv2wefkx28r0ga4/redelegations"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations",status:"OK",code:200,body:{redelegation_responses:[{redelegation:{delegator_address:"cosmos18eyfc75wjrx4nwmxrkaxmhjzv2wefkx28r0ga4",validator_src_address:"cosmosvaloper1qaa9zej9a0ge3ugpx3pxyx602lxh3ztqgfnp42",validator_dst_address:"cosmosvaloper1vvwtk805lxehwle9l4yudmq6mn0g32px9xtkhc",entries:null},entries:[{redelegation_entry:{creation_height:11857094,completion_time:"2022-09-20T10:51:29.974896937Z",initial_balance:"10010000",shares_dst:"10010000.000000000000000000"},balance:"10010000"}]}],pagination:{next_key:null,total:"4"}}}},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations",content:"Queries all unbonding delegations of a given delegator address.\n\n### Parameters\n\n- `delegator_addr` string (path) (required) delegator_addr defines the delegator address to query for.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the `unbonding_responses` for the given delegator address, unbonding info includes the `delegator_address`, `validator_address` and `entries`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/delegators/cosmos170h7lhpw72hyu463cxwjhcastd6836dfcm9s2d/unbonding_delegations"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations",status:"OK",code:200,body:{unbonding_responses:[{delegator_address:"cosmos170h7lhpw72hyu463cxwjhcastd6836dfcm9s2d",validator_address:"cosmosvaloper1n229vhepft6wnkt5tjpwmxdmcnfz55jv3vp77d",entries:[{creation_height:"11857268",completion_time:"2022-09-20T11:11:51.253623711Z",initial_balance:"123139969",balance:"123139969"}]},{delegator_address:"cosmos170h7lhpw72hyu463cxwjhcastd6836dfcm9s2d",validator_address:"cosmosvaloper156gqf9837u7d4c4678yt3rl4ls9c5vuursrrzf",entries:[{creation_height:"11857273",completion_time:"2022-09-20T11:12:26.575681654Z",initial_balance:"75582577",balance:"75582577"}]}],pagination:{next_key:null,total:"2"}}}},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators",content:"Queries all validators info for given delegator address.\n\n### Parameters\n\n- `delegator_addr` string (path) (required) delegator_addr defines the delegator address to query for.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the `validators` for the given `delegator_addr`, info includes the `operator_address` (validator), `consensus_pukey`, `jailed` status, bond `status`, no. of `tokens` delegated, `delagator_shares` and validator's `description`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/delegators/cosmos1fwdgkxxke3pktj0vghzn94uf4s56z0tajmys98/validators"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators",status:"OK",code:200,body:{validators:[{operator_address:"cosmosvaloper15urq2dtp9qce4fyc85m6upwm9xul3049e02707",consensus_pubkey:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"lh/p8UTp1kF8+4noOeInUG3PuWpFzk6Mnopj0updt4I="},jailed:!1,status:"BOND_STATUS_BONDED",tokens:"3931245761197",delegator_shares:"3931245761197.000000000000000000",description:{moniker:"Chorus One",identity:"00B79D689B7DC1CE",website:"https://chorus.one/",security_contact:"",details:"Secure Cosmos and shape its future by delegating to Chorus One, a highly secure and stable validator. By delegating, you agree to the terms of service at: https://chorus.one/cosmos/tos"},unbonding_height:"0",unbonding_time:"1970-01-01T00:00:00Z",commission:{commission_rates:{rate:"0.075000000000000000",max_rate:"0.250000000000000000",max_change_rate:"0.020000000000000000"},update_time:"2019-08-13T17:43:26.871706216Z"},min_self_delegation:"10"},{operator_address:"cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d",consensus_pubkey:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"n9bW9hmvwSwm/AnJtDwZNGA+2RSoQsfoMFsc2Rrb0vY="},jailed:!1,status:"BOND_STATUS_BONDED",tokens:"2030211944386",delegator_shares:"2030211944386.000000000000000000",description:{moniker:"Figment",identity:"E5F274B870BDA01D",website:"https://figment.io",security_contact:"",details:"Makers of Hubble and Canada\u2019s largest Cosmos validator, Figment is the easiest and most secure way to stake your Atoms."},unbonding_height:"0",unbonding_time:"1970-01-01T00:00:00Z",commission:{commission_rates:{rate:"0.090000000000000000",max_rate:"0.300000000000000000",max_change_rate:"0.010000000000000000"},update_time:"2019-12-06T12:17:54.693866931Z"},min_self_delegation:"1"}],pagination:{next_key:null,total:"2"}}}},{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}",content:"Queries validator info for given delegator validator pair.\n\n### Parameters\n\n- `delegator_addr` string (path) (required) delegator_addr defines the delegator address to query for.\n\n- `validator_addr` string (path) (required) validator_addr defines the validator address to query for.\n\n### Response\n\n- Returns the `validator` based on the given `delegator_addr` & `validator_addr`, info includes the `operator_address` (validator), `consensus_pukey`, `jailed` status, bond `status`, no. of `tokens` delegated, `delagator_shares` and validator's `description`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/delegators/cosmos1fwdgkxxke3pktj0vghzn94uf4s56z0tajmys98/validators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}",status:"OK",code:200,body:{validator:{operator_address:"cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d",consensus_pubkey:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"n9bW9hmvwSwm/AnJtDwZNGA+2RSoQsfoMFsc2Rrb0vY="},jailed:!1,status:"BOND_STATUS_BONDED",tokens:"2030212054923",delegator_shares:"2030212054923.000000000000000000",description:{moniker:"Figment",identity:"E5F274B870BDA01D",website:"https://figment.io",security_contact:"",details:"Makers of Hubble and Canada\u2019s largest Cosmos validator, Figment is the easiest and most secure way to stake your Atoms."},unbonding_height:"0",unbonding_time:"1970-01-01T00:00:00Z",commission:{commission_rates:{rate:"0.090000000000000000",max_rate:"0.300000000000000000",max_change_rate:"0.010000000000000000"},update_time:"2019-12-06T12:17:54.693866931Z"},min_self_delegation:"1"}}}},{name:"/cosmos/staking/v1beta1/historical_info/{height}",content:"Queries the historical info for a given height.\n\n### Parameters\n\n- `height` string($int64) (path) (required) height defines at which height to query the historical info.\n\n### Response\n\n- Returns the detailed historical info for the given block height.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/historical_info/11858329"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/historical_info/{height}",status:"OK",code:200,body:{hist:{header:{version:{block:"11",app:"0"},chain_id:"cosmoshub-4",height:"11858329",time:"2022-08-30T13:12:40.897035325Z",last_block_id:{hash:"A94fXQZL+KyH5PUOhVw5n1w4GMXQFOvfVndk1Se+cUk=",part_set_header:{total:1,hash:"xiuh6rJ9HqMN9G4SCilXiTe/zXICfZq49xJL8QeeCxQ="}},last_commit_hash:"7hVJTxSRgnhLntzZrCbvtiqWwSOkscdR/xFiezuLnlk=",data_hash:"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",validators_hash:"vl8IL8Iy0H182onB+eU1QE6cnPkCWlPbXyymlblkDG0=",next_validators_hash:"vl8IL8Iy0H182onB+eU1QE6cnPkCWlPbXyymlblkDG0=",consensus_hash:"gDZJZbfCzJ3pYcCZi0en+T8ZcAd+uILg7Rw4IkCIiMc=",app_hash:"GRIB2XQSWQkJRVzO5F06Hg+y2sX5I+eZm7bKcWqQX6k=",last_Response_hash:"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",evidence_hash:"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",proposer_address:"bXAfpZUyaI3xa6+VIRN+jBTLsxY="},valset:[{operator_address:"cosmosvaloper1c4k24jzduc365kywrsvf5ujz4ya6mwympnc4en",consensus_pubkey:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"LtiHVLCcE+oFII0vpIl9mfkGDmk9BpPg1eUkvKnO4xw="},jailed:!1,status:"BOND_STATUS_BONDED",tokens:"14059676625369",delegator_shares:"14059676625369.000000000000000000",description:{moniker:"Coinbase Custody",identity:"AECA8EAB3D0AFAD1",website:"custody.coinbase.com",security_contact:"custody@coinbase.com",details:"Coinbase Custody Cosmos Validator"},unbonding_height:"0",unbonding_time:"1970-01-01T00:00:00Z",commission:{commission_rates:{rate:"0.200000000000000000",max_rate:"1.000000000000000000",max_change_rate:"1.000000000000000000"},update_time:"2022-06-30T17:14:03.668558534Z"},min_self_delegation:"1"}]}}}},{name:"/cosmos/staking/v1beta1/params",content:"Queries the staking parameters.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the parameters for the module which includes `unbonding_time`, `max_validators`, `max_entries`, `historical_entries` and `bond_denom`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/params"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/params",status:"OK",code:200,body:{params:{unbonding_time:"1814400s",max_validators:175,max_entries:7,historical_entries:1e4,bond_denom:"uatom"}}}},{name:"/cosmos/staking/v1beta1/pool",content:"Queries the pool info.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the `pool` info including `not_bonded_tokens` & `bonded_tokens`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/pool"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/pool",status:"OK",code:200,body:{pool:{not_bonded_tokens:"2959266356963",bonded_tokens:"202288642025100"}}}},{name:"/cosmos/staking/v1beta1/validators",content:"Queries all validators that match the given status.\n\n### Parameters\n\n\\*   `status` string (query) (required) status enables to query for validators matching a given status.\n\\*   `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\\*   `pagination.offset` string ($uint64 (query) offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\\*   `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\\*   `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\\*   `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n    \n\n### Response\n\n\\*   Returns the `validators` info including the `operator_address` (validator), `consensus_pukey`, `jailed` status, bond `status`, no. of `tokens` delegated, `delagator_shares` and validator's `description`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/validators?pagination.limit=1"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/validators",status:"OK",code:200,body:{validators:[{operator_address:"cosmosvaloper1q9p73lx07tjqc34vs8jrsu5pg3q4ha534uqv4w",consensus_pubkey:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"Y3FwPLeVHUhR+Or59OJ1SCq0OiS/tBye2YdKA3dzy/s="},jailed:!1,status:"BOND_STATUS_UNBONDED",tokens:"76709560",delegator_shares:"76709560.000000000000000000",description:{moniker:"Unstake as we will shut down",identity:"C58922A0F158B2D1",website:"https://www.3stakes.com",security_contact:"support@3stakes.com",details:"3Stakes.com is a Dutch team validating in the Ecosystem. Our operations will be CO2 neutral as we will offset any emissions created from our operations. We will be looking to create validators for new chains in the Cosmos ecosystem and participate in testnets."},unbonding_height:"10150222",unbonding_time:"2022-05-08T10:37:31.108207984Z",commission:{commission_rates:{rate:"0.050000000000000000",max_rate:"0.100000000000000000",max_change_rate:"0.010000000000000000"},update_time:"2022-04-15T08:52:23.793881126Z"},min_self_delegation:"1"}],pagination:{next_key:"FALNnEUIzx08dLvc0O8xOsLdSuAh",total:"0"}}}},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}",content:"Queries validator info for given validator address.\n\n### Parameters\n\n\\*   `validator_addr` string (path) (required) validator_addr defines the validator address to query for.\n    \n\n### Response\n\n\\*   Returns the `validator` info for the given `validator_addr`, info contains the `operator_address` (validator), `consensus_pukey`, `jailed` status, bond `status`, no. of `tokens` delegated, `delagator_shares` and validator's `description`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/validators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/validators/{validator_addr}",status:"OK",code:200,body:{validator:{operator_address:"cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d",consensus_pubkey:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"n9bW9hmvwSwm/AnJtDwZNGA+2RSoQsfoMFsc2Rrb0vY="},jailed:!1,status:"BOND_STATUS_BONDED",tokens:"2030218357223",delegator_shares:"2030218357223.000000000000000000",description:{moniker:"Figment",identity:"E5F274B870BDA01D",website:"https://figment.io",security_contact:"",details:"Makers of Hubble and Canada\u2019s largest Cosmos validator, Figment is the easiest and most secure way to stake your Atoms."},unbonding_height:"0",unbonding_time:"1970-01-01T00:00:00Z",commission:{commission_rates:{rate:"0.090000000000000000",max_rate:"0.300000000000000000",max_change_rate:"0.010000000000000000"},update_time:"2019-12-06T12:17:54.693866931Z"},min_self_delegation:"1"}}}},{name:"\u200b/cosmos\u200b/staking\u200b/v1beta1\u200b/validators\u200b/{validator_addr}\u200b/delegations",content:"Queries delegate info for given validator.\n\n### Parameters\n\n- `validator_addr` string (path) (required) validator_addr defines the validator address to query for.\n \n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order. \n\n### Response\n\n- Returns the delegation info (`delegation_responses`) for the given `validator_addr`. Info includes the `delegator_address`, `validator_address`, `shares`, `denom` & `amount`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/validators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d/delegations?pagination.limit=1"},interactive:!0,response:{name:"\u200b/cosmos\u200b/staking\u200b/v1beta1\u200b/validators\u200b/{validator_addr}\u200b/delegations",status:"OK",code:200,body:{delegation_responses:[{delegation:{delegator_address:"cosmos1qqrnzytacq9gah4a8697lfr45wkmrzmpwcs4gr",validator_address:"cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d",shares:"25000000.000000000000000000"},balance:{denom:"uatom",amount:"25000000"}}],pagination:{next_key:"FAAfMk6NYeeQI94kXtzudy6a/MlAFLywvQPTDCAYIi1DBWjBqTlgHfwp",total:"0"}}}},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}",content:"Queries validator info for given delegator validator pair.\n\n### Parameters\n\n- `delegator_addr` string (path) (required) delegator_addr defines the delegator address to query for.\n\n- `validator_addr` string (path) (required) validator_addr defines the validator address to query for.\n\n### Response\n\n- Returns the delegation info (`delegation_responses`) based on the given `validator_addr` & `delegator_addr`. Info includes the `delegator_address`, `validator_address`, `shares`, `denom` & `amount`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/validators/cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d/delegations/cosmos1fwdgkxxke3pktj0vghzn94uf4s56z0tajmys98"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}",status:"OK",code:200,body:{delegation_response:{delegation:{delegator_address:"cosmos1fwdgkxxke3pktj0vghzn94uf4s56z0tajmys98",validator_address:"cosmosvaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpfdn6m9d",shares:"103000000000.000000000000000000"},balance:{denom:"uatom",amount:"103000000000"}}}}},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation",content:"Queries unbonding info for given validator delegator pair.\n\n### Parameters\n\n- `delegator_addr` string (path) (required) delegator_addr defines the delegator address to query for.\n\n- `validator_addr` string (path) (required) validator_addr defines the validator address to query for.\n\n### Response\n\n- Returns the unbonding delegation info (`unbond`) based on the given `validator_addr` & `delegator_addr`. Info includes the `delegator_address`, `validator_address` and `entries`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/validators/cosmosvaloper1n229vhepft6wnkt5tjpwmxdmcnfz55jv3vp77d/delegations/cosmos170h7lhpw72hyu463cxwjhcastd6836dfcm9s2d/unbonding_delegation"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation",status:"OK",code:200,body:{unbond:{delegator_address:"cosmos170h7lhpw72hyu463cxwjhcastd6836dfcm9s2d",validator_address:"cosmosvaloper1n229vhepft6wnkt5tjpwmxdmcnfz55jv3vp77d",entries:[{creation_height:"11857268",completion_time:"2022-09-20T11:11:51.253623711Z",initial_balance:"123139969",balance:"123139969"}]}}}},{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations",content:"Queries unbonding delegations of a validator.\n\n### Parameters\n\n- `validator_addr` string (path) (required) validator_addr defines the validator address to query for.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the unbonding delegation info (`unbonding_responses`) based on the given `validator_addr`. Info includes the `delegator_address`, `validator_address` and `entries`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/staking/v1beta1/validators/cosmosvaloper1n229vhepft6wnkt5tjpwmxdmcnfz55jv3vp77d/unbonding_delegations?pagination.limit=1"},interactive:!0,response:{name:"/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations",status:"OK",code:200,body:{unbonding_responses:[{delegator_address:"cosmos1qytfs0053h6hj5yyvwghvkjux8tez8axgqknrs",validator_address:"cosmosvaloper1n229vhepft6wnkt5tjpwmxdmcnfz55jv3vp77d",entries:[{creation_height:"11785334",completion_time:"2022-09-14T21:14:07.543435702Z",initial_balance:"10695629",balance:"10695629"}]}],pagination:{next_key:"FALNSEfE+jIh72bRIuWtHpyaAGIu",total:"0"}}}},{name:"/cosmos/upgrade/v1beta1/applied_plan/{name}",content:"Queries a previously applied upgrade plan by its name.\n\n### Parameters\n\n- `name` string (path) (required) name is the name of the applied plan to query for.\n\n### Response\n\n- Returns the `height` at which a completed upgrade was applied.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/upgrade/v1beta1/applied_plan/test-upgrade"},interactive:!0,response:{name:"/cosmos/upgrade/v1beta1/applied_plan/{name}",status:"OK",code:200,body:{height:"0"}}},{name:"/cosmos/upgrade/v1beta1/current_plan",content:"Queries the current upgrade plan.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the current `plan` if there's any.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/upgrade/v1beta1/current_plan"},interactive:!0,response:{name:"/cosmos/upgrade/v1beta1/current_plan",status:"OK",code:200,body:{plan:null}}},{name:"/cosmos/upgrade/v1beta1/module_versions",content:"Queries the list of module versions from state.\n\n### Parameters\n\n- `module_name` string (query)\t module_name is a field to query a specific module\nconsensus version from state. Leaving this empty will fetch the full list of module versions from state.\n\n### Response\n\n- Returns all `module_versions` with each of their `name` and `version`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/upgrade/v1beta1/module_versions"},interactive:!0,response:{name:"/cosmos/upgrade/v1beta1/module_versions",status:"OK",code:200,body:{module_versions:[{name:"auth",version:"2"},{name:"authz",version:"1"},{name:"bank",version:"2"},{name:"capability",version:"1"},{name:"crisis",version:"1"},{name:"distribution",version:"2"},{name:"evidence",version:"1"},{name:"feegrant",version:"1"},{name:"genutil",version:"1"},{name:"gov",version:"2"},{name:"ibc",version:"2"},{name:"interchainaccounts",version:"1"},{name:"liquidity",version:"2"},{name:"mint",version:"1"},{name:"packetfowardmiddleware",version:"1"},{name:"params",version:"1"},{name:"slashing",version:"2"},{name:"staking",version:"2"},{name:"transfer",version:"1"},{name:"upgrade",version:"1"},{name:"vesting",version:"1"}]}}},{name:"/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}",content:"Queries the consensus state that will serve as a trusted kernel for the next version of this chain. It will only be stored at the last height of this chain. UpgradedConsensusState RPC not supported with legacy querier\n\n### Parameters\n\n- `last_height` string($int64) (path) last height of the current chain must be sent in request as this is the height under which the next consensus state is stored\n\n### Response\n\n- Returns the `upgraded_consensus_state`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/upgrade/v1beta1/upgraded_consensus_state/11857511"},interactive:!0,response:{name:"/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}",status:"OK",code:200,body:{upgraded_consensus_state:null}}},{name:"/cosmos/authz/v1beta1/grants",content:"Returns list of `Authorization`, granted to the grantee by the granter.\n\n### Parameters\n\n- `granter` string (query)\n\n- `grantee` string (query)\n\n- `msg_type_url` string (query) Optional, msg_type_url, when set, will query only grants matching given msg type.\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n### Response\n\n- Returns the list of `grants` with `authorization` and `expiration`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/authz/v1beta1/grants"},interactive:!0,response:{name:"/cosmos/authz/v1beta1/grants",body:{grants:[{authorization:{type_url:"string",value:"string"},expiration:"2022-08-31T13:18:52.918Z"}],pagination:{next_key:"string",total:"string"}}}},{name:"/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}",content:"Allowance returns fee granted to the grantee by the granter.\n\n### Parameters\n\n- `granter` string (path) (required) granter is the address of the user granting an allowance of their funds.\n\n- `grantee` string (path) (required) grantee is the address of the user being granted an allowance of another user's funds.\n\n### Response\n\n- Returns the `allowance` of the given `grantee` & `granter`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}"},interactive:!0,response:{name:"/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}",body:{allowance:{granter:"string",grantee:"string",allowance:{type_url:"string",value:"string"}}}}},{name:"/cosmos/feegrant/v1beta1/allowances/{grantee}",content:"Allowances returns all the grants for address.\n\n### Parameters\n\n- `grantee` string (path)\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order. \n\n### Response\n\n- Returns the `allowance` of the given `grantee` & `granter`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/feegrant/v1beta1/allowances/{grantee}"},interactive:!0,response:{name:"/cosmos/feegrant/v1beta1/allowances/{grantee}",body:{allowances:[{granter:"string",grantee:"string",allowance:{type_url:"string",value:"string"}}],pagination:{next_key:"string",total:"string"}}}},{name:"/cosmos/base/tendermint/v1beta1/blocks/latest",content:"Returns the latest block.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the latest block with `block_id`, `hash`, and `block` details.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/base/tendermint/v1beta1/blocks/latest"},interactive:!0,response:{name:"/cosmos/base/tendermint/v1beta1/blocks/latest",status:"OK",code:200,body:{block_id:{hash:"j6dPWQyfLZ3zWxBEHRJq7+5wIgnyUSebmIASqW06nxc=",part_set_header:{total:1,hash:"TgdBg8T8OSVus4T5qVxkg6fhNyYWlWuVT3OIVNuHE1U="}},block:{header:{version:{block:"11",app:"0"},chain_id:"cosmoshub-4",height:"11857671",time:"2022-08-30T11:59:04.159766856Z",last_block_id:{hash:"xnAUXHcl4mGtRAAXew39KkLWlcHRm+4ym5KihMSSFnQ=",part_set_header:{total:2,hash:"VXSQMLcCN5YIK/8/SZqNGANadO7Th4aXqBl6xa1UuRY="}},last_commit_hash:"CCTj3qMKDtAC90w9jSyu7zscuoCTdgticJbPUkIbicI=",data_hash:"/8sxWn3KLyFPuNeqK1CaCK1vxdrmcmrUtKavUcs+LBs=",validators_hash:"83jCBB+86gCGm30YP6OqKraUpgwONKhopIMtPL0btm8=",next_validators_hash:"83jCBB+86gCGm30YP6OqKraUpgwONKhopIMtPL0btm8=",consensus_hash:"gDZJZbfCzJ3pYcCZi0en+T8ZcAd+uILg7Rw4IkCIiMc=",app_hash:"Mqy1xZJJB0Qze15MNMNYynXDFI9b9e5AONbb3LSLLHo=",last_Response_hash:"jf4HYvhP8P7M/NL15efyFQO+40SiaNP/W6Z2Lra2Pis=",evidence_hash:"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",proposer_address:"C0LkfxVOJNEBhLsS4yNHqsYca4A="},data:{txs:["CtkBCqYBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEoUBCi1jb3Ntb3MxejVqcm5kM2U2NHV1eHlrZnA5eDBqcWU3MHkwOXc4cHhtbWF5NTASQWNvc21vczFremxybXh3M2gybjR1enV2NzNtMzNjZnc3eHQ3cWpmM2hscXgzM3VsYzAyZTlkaHh1NDZxZ2Z4ZzlsGhEKBXVhdG9tEggxMDAwMDAwMBIuMTpzdGFmaTF6NWpybmQzZTY0dXV4eWtmcDl4MGpxZTcweTA5dzhweHFzZHdxaBJnClAKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiECRZbkyg1aNU2zTgqxt3l7+O24YifshKLOfCG/zhokQzkSBAoCCAEYChITCg0KBXVhdG9tEgQ1MDAwEMCaDBpApACZ9O1jhArJXSxSk6uB577WkPnMUp6kYt0O9GgSU7R8nSL7tX5D00XBOH3JP4XWAxp52ek865K8K2L2Uqz8NQ==","Cr8BCrwBCikvaWJjLmFwcGxpY2F0aW9ucy50cmFuc2Zlci52MS5Nc2dUcmFuc2ZlchKOAQoIdHJhbnNmZXISC2NoYW5uZWwtMTQxGhAKBXVhdG9tEgcyNDAwMDAwIi1jb3Ntb3MxenhncnhqOWdmczM0ZHA3enJwNnNxNzR5ZHpobHVsdG40OXU1ZTgqK29zbW8xenhncnhqOWdmczM0ZHA3enJwNnNxNzR5ZHpobHVsdG5hNzB5MDQyBwgBENSx4gISZQpOCkYKHy9jb3Ntb3MuY3J5cHRvLnNlY3AyNTZrMS5QdWJLZXkSIwohAg1PL2YLJJFMopFw0CAgXzQLxEvFKjPYEpAxcuTz4dyCEgQKAgh/EhMKDQoFdWF0b20SBDMyNTAQ0PcHGkBWqJ6rfg2CEva3QlgUVZZU0DkZ1PgLGIeh4tX91R1TJWPk47QR9W5Bn9T4VC+c20FizgMvG7fUXWUbupnQ3Fqj","","CpQBCpEBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnEKLWNvc21vczFzY3djZnJlNmg0YzdlcGt5cmRmZWdwZWF6OHVtcWxkbDUwZ244dxItY29zbW9zMXc1bXRtdHVleTVhM2Y1OWQ5bTB4aDJxdWg5MHplMnZqajA2cm4yGhEKBXVhdG9tEggzMjk5NzE4MBJpClIKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiEChlTNiokI23wOMejLDVoci638NPRnEgg66V5cN542LHQSBAoCCAEYqdgBEhMKDQoFdWF0b20SBDI4MTkQ6PAGGkAlo3Src3sFYCYSbTBexVVo08zac4TSTf3zrpKl91yUanbeohW3tym0zNB9k7Da4abpIm01+PB1cB+IVu3mhiRo","CqEBCpMBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnMKLWNvc21vczE5YWhrcWo4cXhwemdtbjh2amdnZ243ZXl3aHNhbnFlNDY3NXV5bBItY29zbW9zMWo4cHA3enZjdTl6OHZkODgybTI4NGoyOWZuMmRzemgwNWNxdmY5GhMKBXVhdG9tEgoxMDk4ODQ3ODMxEgkxMDMxMjcwNzQSaApRCkYKHy9jb3Ntb3MuY3J5cHRvLnNlY3AyNTZrMS5QdWJLZXkSIwohAr1pZkgbuI40KYSQf+V8DjnAyKyd3kG74BsKnivrWEA8EgQKAgh/GPJIEhMKDQoFdWF0b20SBDIxNjkQ1qUFGkBwFlBu0Ob0VjfLbcRMNWFG8UTi7GkuVNgOuvJoMQ+iD2bQtCnywRg0smLUOfbEeYR9MQCBdfxgTOCG7DnkVmQE","CpMBCpABChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnAKLWNvc21vczF5NTYwcGdmeHB0NWhxdmZ6ZW5nemRxeGdtZXZwdHFwOWh3Z2xqdBItY29zbW9zMWo4cHA3enZjdTl6OHZkODgybTI4NGoyOWZuMmRzemgwNWNxdmY5GhAKBXVhdG9tEgc0NjA4NzUwEmUKTgpGCh8vY29zbW9zLmNyeXB0by5zZWNwMjU2azEuUHViS2V5EiMKIQLkumkLjK3ZDpkT5neDc1TSAvzCnOSqKlOzQJVYUL8DgxIECgIIfxITCg0KBXVhdG9tEgQ2MjUwEJChDxpA8WiDMhLr2K88A7Q9NpzbXzzQx4k03KHcluPc36uWos8Bx61PTUDMxG34p3ih6flNHSRG4MVTQXy+TchB3JIIiA==","CpQBCpEBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnEKLWNvc21vczFnd3l2ODN6Y25ja2RodXozbjc4cnZ5emo1OXU4eDZsOGRrOWNmeRItY29zbW9zMTRkYXh0MHYzdDByZWxmOWg1dXY5eXY0dW45MDRreGFjZXkzZjRuGhEKBXVhdG9tEggzMTc1MDAwMBJpClIKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiECoW5CbY72s10LpmH/+AnNe79YIxup3HSgtMMQY/a46GQSBAoCCAEY/v4GEhMKDQoFdWF0b20SBDMwMDAQ4KcSGkAQ6WGC7L2cz7u6804DGiGdPwYkwU/4G6K8/pcEQ1tqvgYw9G0C3zCTkwaSnJIwOJtNy4lsloE27d+jM7l6zIjI","CqMBCqABCjcvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkEmUKLWNvc21vczF4cGc0eDc1c3dxcDk1OWt3c2N4bDZxajRmZzc4cjZqeTloZDM2ZhI0Y29zbW9zdmFsb3BlcjF0ZmxrMzBtcTV2Z3FqZGx5OTJra2hocTNyYWV2MmhuejZlZXRlMxJnClAKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiEC7QZVbIb/cPu5qcoFS32+ZBCCkPEQu4dp/G0OBw9RWrYSBAoCCAEYLhITCg0KBXVhdG9tEgQzNTAwEODFCBpAKbBDfxwjZ1bMYS66MkxMi1TEZLaq3q+JGXDeNiKfbjlZ4aSj+T8eADbAgP3o2GoThcM4SepBjI6Q3U2m0zpeJw==","CpQBCpEBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnEKLWNvc21vczF0NXUwamZnM2xqc2pyaDJtOWU0N2Q0bnkyaGVhN2VlaHhyemRnZBItY29zbW9zMWYzOThuNDlrNnF0cGhtaDdoY2NzN3J4YXJ5bmc3OHo4aHhmNGgyGhEKBXVhdG9tEggxNzc2NDI3MBJpClIKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiEC6hqHSxMFnpczw16QyypYZaRrZO2Q0lVUfAfKUjkn/GISBAoCCH8Y+potEhMKDQoFdWF0b20SBDI1MDAQiJgFGkA2h04h+Bob9dD5BJ1cg4Ga8+PVbfoRqtmf9uHAHjo9hgLB94g7yIKz3ZBUkv8WLzQWMKNe+8NsOgj4/TrK6yyS","CpMBCpABChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnAKLWNvc21vczFlZjg5M3pjem0zbjJnamV1MGQ3a2w5M2htdjlxN3d6MnZzMjlrOBItY29zbW9zMTJubjI1ZXlnbHN0ZHdydXNrMGt1ZzlyeXNuY3lweDN6eGd1eXczGhAKBXVhdG9tEgcxMDY3MDIxEmcKUApGCh8vY29zbW9zLmNyeXB0by5zZWNwMjU2azEuUHViS2V5EiMKIQKbFKn23ygUetiYI1FppjhRiPPsn+GWyKNNKmgUSEfWZhIECgIIARgLEhMKDQoFdWF0b20SBDIwMzAQsPoEGkCFQb4Zs13Fzmx20vqsf+jJXdMKPbSne8E0iraUNywyBktzYXZdydHQ/6MTR5ik7VtCG+nn4gffSkwzXY/Fbekk","CqABCp0BCiMvY29zbW9zLnN0YWtpbmcudjFiZXRhMS5Nc2dEZWxlZ2F0ZRJ2Ci1jb3Ntb3MxMjM0bGs0eWprMzAycDR1YTVuN3ZzMzNwaDA2eDVwdHVtbHQ0NDYSNGNvc21vc3ZhbG9wZXIxbHpobG5wYWh2em53ZnY0am1heTJ0Z2FoYTVrbXo1cXhlcmFycmwaDwoFdWF0b20SBjExMDAwMBJoClEKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiECj9Dm3+rL/PWt02IikR2Fz7QocpWmWNf8c+FAwtdiNqQSBAoCCH8YoQESEwoNCgV1YXRvbRIEMjUwMBCQoQ8aQAOdw+xRs47HZmr+D9p5VQcJ/PSJ8qJ7937d/IUUsxa5dni84GPw6kYgHrlfckuHU8wUJF75ocl5/xorobI6xhg="]},evidence:{evidence:[]},last_commit:{height:"11857670",round:0,block_id:{hash:"xnAUXHcl4mGtRAAXew39KkLWlcHRm+4ym5KihMSSFnQ=",part_set_header:{total:2,hash:"VXSQMLcCN5YIK/8/SZqNGANadO7Th4aXqBl6xa1UuRY="}},signatures:[{block_id_flag:"BLOCK_ID_FLAG_COMMIT",validator_address:"1o7sDS6CSPHsZM21he22HspDK9g=",timestamp:"2022-08-30T11:59:04.226365461Z",signature:"CDngWtE/qwCn4FgWi2gnifHeBKiTIzNtyaa47vCrfC7AlFRJWdXMrrdVbcIBJQehcegjOopxK7najvRqpJinCQ=="},{block_id_flag:"BLOCK_ID_FLAG_COMMIT",validator_address:"rC1WBXzYR2Xm++MYl5CT6ORKoY8=",timestamp:"2022-08-30T11:59:04.059879289Z",signature:"F+X73JCbhKZMhxX4OrbqlWG4ib81TmVHex33saU1Ok3fy3b6pj5ksmrIY3DMwi814Nf3r/1kTDNt7BXMGBkDBA=="}]}}}}},{name:"/cosmos/base/tendermint/v1beta1/blocks/{height}",content:"Queries block for given height.\n\n### Parameters\n\n- `height` string($int64)(path) (required)\n\n### Response\n\n- - Returns the `block_id`, `hash`, and `block` details for the given block `height`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/base/tendermint/v1beta1/blocks/11857671"},interactive:!0,response:{name:"/cosmos/base/tendermint/v1beta1/blocks/{height}",status:"OK",code:200,body:{block_id:{hash:"j6dPWQyfLZ3zWxBEHRJq7+5wIgnyUSebmIASqW06nxc=",part_set_header:{total:1,hash:"TgdBg8T8OSVus4T5qVxkg6fhNyYWlWuVT3OIVNuHE1U="}},block:{header:{version:{block:"11",app:"0"},chain_id:"cosmoshub-4",height:"11857671",time:"2022-08-30T11:59:04.159766856Z",last_block_id:{hash:"xnAUXHcl4mGtRAAXew39KkLWlcHRm+4ym5KihMSSFnQ=",part_set_header:{total:2,hash:"VXSQMLcCN5YIK/8/SZqNGANadO7Th4aXqBl6xa1UuRY="}},last_commit_hash:"CCTj3qMKDtAC90w9jSyu7zscuoCTdgticJbPUkIbicI=",data_hash:"/8sxWn3KLyFPuNeqK1CaCK1vxdrmcmrUtKavUcs+LBs=",validators_hash:"83jCBB+86gCGm30YP6OqKraUpgwONKhopIMtPL0btm8=",next_validators_hash:"83jCBB+86gCGm30YP6OqKraUpgwONKhopIMtPL0btm8=",consensus_hash:"gDZJZbfCzJ3pYcCZi0en+T8ZcAd+uILg7Rw4IkCIiMc=",app_hash:"Mqy1xZJJB0Qze15MNMNYynXDFI9b9e5AONbb3LSLLHo=",last_Response_hash:"jf4HYvhP8P7M/NL15efyFQO+40SiaNP/W6Z2Lra2Pis=",evidence_hash:"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",proposer_address:"C0LkfxVOJNEBhLsS4yNHqsYca4A="},data:{txs:["CtkBCqYBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEoUBCi1jb3Ntb3MxejVqcm5kM2U2NHV1eHlrZnA5eDBqcWU3MHkwOXc4cHhtbWF5NTASQWNvc21vczFremxybXh3M2gybjR1enV2NzNtMzNjZnc3eHQ3cWpmM2hscXgzM3VsYzAyZTlkaHh1NDZxZ2Z4ZzlsGhEKBXVhdG9tEggxMDAwMDAwMBIuMTpzdGFmaTF6NWpybmQzZTY0dXV4eWtmcDl4MGpxZTcweTA5dzhweHFzZHdxaBJnClAKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiECRZbkyg1aNU2zTgqxt3l7+O24YifshKLOfCG/zhokQzkSBAoCCAEYChITCg0KBXVhdG9tEgQ1MDAwEMCaDBpApACZ9O1jhArJXSxSk6uB577WkPnMUp6kYt0O9GgSU7R8nSL7tX5D00XBOH3JP4XWAxp52ek865K8K2L2Uqz8NQ==","Cr8BCrwBCikvaWJjLmFwcGxpY2F0aW9ucy50cmFuc2Zlci52MS5Nc2dUcmFuc2ZlchKOAQoIdHJhbnNmZXISC2NoYW5uZWwtMTQxGhAKBXVhdG9tEgcyNDAwMDAwIi1jb3Ntb3MxenhncnhqOWdmczM0ZHA3enJwNnNxNzR5ZHpobHVsdG40OXU1ZTgqK29zbW8xenhncnhqOWdmczM0ZHA3enJwNnNxNzR5ZHpobHVsdG5hNzB5MDQyBwgBENSx4gISZQpOCkYKHy9jb3Ntb3MuY3J5cHRvLnNlY3AyNTZrMS5QdWJLZXkSIwohAg1PL2YLJJFMopFw0CAgXzQLxEvFKjPYEpAxcuTz4dyCEgQKAgh/EhMKDQoFdWF0b20SBDMyNTAQ0PcHGkBWqJ6rfg2CEva3QlgUVZZU0DkZ1PgLGIeh4tX91R1TJWPk47QR9W5Bn9T4VC+c20FizgMvG7fUXWUbupnQ3Fqj","","CpQBCpEBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnEKLWNvc21vczFzY3djZnJlNmg0YzdlcGt5cmRmZWdwZWF6OHVtcWxkbDUwZ244dxItY29zbW9zMXc1bXRtdHVleTVhM2Y1OWQ5bTB4aDJxdWg5MHplMnZqajA2cm4yGhEKBXVhdG9tEggzMjk5NzE4MBJpClIKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiEChlTNiokI23wOMejLDVoci638NPRnEgg66V5cN542LHQSBAoCCAEYqdgBEhMKDQoFdWF0b20SBDI4MTkQ6PAGGkAlo3Src3sFYCYSbTBexVVo08zac4TSTf3zrpKl91yUanbeohW3tym0zNB9k7Da4abpIm01+PB1cB+IVu3mhiRo","CqEBCpMBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnMKLWNvc21vczE5YWhrcWo4cXhwemdtbjh2amdnZ243ZXl3aHNhbnFlNDY3NXV5bBItY29zbW9zMWo4cHA3enZjdTl6OHZkODgybTI4NGoyOWZuMmRzemgwNWNxdmY5GhMKBXVhdG9tEgoxMDk4ODQ3ODMxEgkxMDMxMjcwNzQSaApRCkYKHy9jb3Ntb3MuY3J5cHRvLnNlY3AyNTZrMS5QdWJLZXkSIwohAr1pZkgbuI40KYSQf+V8DjnAyKyd3kG74BsKnivrWEA8EgQKAgh/GPJIEhMKDQoFdWF0b20SBDIxNjkQ1qUFGkBwFlBu0Ob0VjfLbcRMNWFG8UTi7GkuVNgOuvJoMQ+iD2bQtCnywRg0smLUOfbEeYR9MQCBdfxgTOCG7DnkVmQE","CpMBCpABChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnAKLWNvc21vczF5NTYwcGdmeHB0NWhxdmZ6ZW5nemRxeGdtZXZwdHFwOWh3Z2xqdBItY29zbW9zMWo4cHA3enZjdTl6OHZkODgybTI4NGoyOWZuMmRzemgwNWNxdmY5GhAKBXVhdG9tEgc0NjA4NzUwEmUKTgpGCh8vY29zbW9zLmNyeXB0by5zZWNwMjU2azEuUHViS2V5EiMKIQLkumkLjK3ZDpkT5neDc1TSAvzCnOSqKlOzQJVYUL8DgxIECgIIfxITCg0KBXVhdG9tEgQ2MjUwEJChDxpA8WiDMhLr2K88A7Q9NpzbXzzQx4k03KHcluPc36uWos8Bx61PTUDMxG34p3ih6flNHSRG4MVTQXy+TchB3JIIiA==","CpQBCpEBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnEKLWNvc21vczFnd3l2ODN6Y25ja2RodXozbjc4cnZ5emo1OXU4eDZsOGRrOWNmeRItY29zbW9zMTRkYXh0MHYzdDByZWxmOWg1dXY5eXY0dW45MDRreGFjZXkzZjRuGhEKBXVhdG9tEggzMTc1MDAwMBJpClIKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiECoW5CbY72s10LpmH/+AnNe79YIxup3HSgtMMQY/a46GQSBAoCCAEY/v4GEhMKDQoFdWF0b20SBDMwMDAQ4KcSGkAQ6WGC7L2cz7u6804DGiGdPwYkwU/4G6K8/pcEQ1tqvgYw9G0C3zCTkwaSnJIwOJtNy4lsloE27d+jM7l6zIjI","CqMBCqABCjcvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkEmUKLWNvc21vczF4cGc0eDc1c3dxcDk1OWt3c2N4bDZxajRmZzc4cjZqeTloZDM2ZhI0Y29zbW9zdmFsb3BlcjF0ZmxrMzBtcTV2Z3FqZGx5OTJra2hocTNyYWV2MmhuejZlZXRlMxJnClAKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiEC7QZVbIb/cPu5qcoFS32+ZBCCkPEQu4dp/G0OBw9RWrYSBAoCCAEYLhITCg0KBXVhdG9tEgQzNTAwEODFCBpAKbBDfxwjZ1bMYS66MkxMi1TEZLaq3q+JGXDeNiKfbjlZ4aSj+T8eADbAgP3o2GoThcM4SepBjI6Q3U2m0zpeJw==","CpQBCpEBChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnEKLWNvc21vczF0NXUwamZnM2xqc2pyaDJtOWU0N2Q0bnkyaGVhN2VlaHhyemRnZBItY29zbW9zMWYzOThuNDlrNnF0cGhtaDdoY2NzN3J4YXJ5bmc3OHo4aHhmNGgyGhEKBXVhdG9tEggxNzc2NDI3MBJpClIKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiEC6hqHSxMFnpczw16QyypYZaRrZO2Q0lVUfAfKUjkn/GISBAoCCH8Y+potEhMKDQoFdWF0b20SBDI1MDAQiJgFGkA2h04h+Bob9dD5BJ1cg4Ga8+PVbfoRqtmf9uHAHjo9hgLB94g7yIKz3ZBUkv8WLzQWMKNe+8NsOgj4/TrK6yyS","CpMBCpABChwvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kEnAKLWNvc21vczFlZjg5M3pjem0zbjJnamV1MGQ3a2w5M2htdjlxN3d6MnZzMjlrOBItY29zbW9zMTJubjI1ZXlnbHN0ZHdydXNrMGt1ZzlyeXNuY3lweDN6eGd1eXczGhAKBXVhdG9tEgcxMDY3MDIxEmcKUApGCh8vY29zbW9zLmNyeXB0by5zZWNwMjU2azEuUHViS2V5EiMKIQKbFKn23ygUetiYI1FppjhRiPPsn+GWyKNNKmgUSEfWZhIECgIIARgLEhMKDQoFdWF0b20SBDIwMzAQsPoEGkCFQb4Zs13Fzmx20vqsf+jJXdMKPbSne8E0iraUNywyBktzYXZdydHQ/6MTR5ik7VtCG+nn4gffSkwzXY/Fbekk","CqABCp0BCiMvY29zbW9zLnN0YWtpbmcudjFiZXRhMS5Nc2dEZWxlZ2F0ZRJ2Ci1jb3Ntb3MxMjM0bGs0eWprMzAycDR1YTVuN3ZzMzNwaDA2eDVwdHVtbHQ0NDYSNGNvc21vc3ZhbG9wZXIxbHpobG5wYWh2em53ZnY0am1heTJ0Z2FoYTVrbXo1cXhlcmFycmwaDwoFdWF0b20SBjExMDAwMBJoClEKRgofL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleRIjCiECj9Dm3+rL/PWt02IikR2Fz7QocpWmWNf8c+FAwtdiNqQSBAoCCH8YoQESEwoNCgV1YXRvbRIEMjUwMBCQoQ8aQAOdw+xRs47HZmr+D9p5VQcJ/PSJ8qJ7937d/IUUsxa5dni84GPw6kYgHrlfckuHU8wUJF75ocl5/xorobI6xhg="]},evidence:{evidence:[]},last_commit:{height:"11857670",round:0,block_id:{hash:"xnAUXHcl4mGtRAAXew39KkLWlcHRm+4ym5KihMSSFnQ=",part_set_header:{total:2,hash:"VXSQMLcCN5YIK/8/SZqNGANadO7Th4aXqBl6xa1UuRY="}},signatures:[{block_id_flag:"BLOCK_ID_FLAG_COMMIT",validator_address:"1o7sDS6CSPHsZM21he22HspDK9g=",timestamp:"2022-08-30T11:59:04.226365461Z",signature:"CDngWtE/qwCn4FgWi2gnifHeBKiTIzNtyaa47vCrfC7AlFRJWdXMrrdVbcIBJQehcegjOopxK7najvRqpJinCQ=="},{block_id_flag:"BLOCK_ID_FLAG_COMMIT",validator_address:"rC1WBXzYR2Xm++MYl5CT6ORKoY8=",timestamp:"2022-08-30T11:59:04.059879289Z",signature:"F+X73JCbhKZMhxX4OrbqlWG4ib81TmVHex33saU1Ok3fy3b6pj5ksmrIY3DMwi814Nf3r/1kTDNt7BXMGBkDBA=="}]}}}}},{name:"/cosmos/base/tendermint/v1beta1/node_info",content:"Queries the current node info.\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the `default_node_info` including `protocol_version`, `p2p`, `block`, `app`, `default_node_id`, `listen_addr`, `network`, `version`, `channels`, `moniker` and `application_version` etc.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/base/tendermint/v1beta1/node_info"},interactive:!0,response:{name:"/cosmos/base/tendermint/v1beta1/node_info",status:"OK",code:200,body:{default_node_info:{protocol_version:{p2p:"8",block:"11",app:"0"},default_node_id:"ab1c90a25b19e59dad94b129e1fe2b7736daf68a",listen_addr:"tcp://15.235.53.112:26656",network:"cosmoshub-4",version:"v0.34.19",channels:"QCAhIiMwOGBhAA==",moniker:"0BW7zVRNqf",other:{tx_index:"on",rpc_address:"tcp://0.0.0.0:26657"}},application_version:{name:"gaia",app_name:"gaiad",version:"v7.0.3",git_commit:"d0884c29aac4c1e647b0a82f3df31515d2bd06a3",build_tags:"netgo,ledger",go_version:"go version go1.19 linux/amd64",build_deps:[{path:"filippo.io/edwards25519",version:"v1.0.0-beta.2",sum:"h1:/BZRNzm8N4K4eWfK28dL4yescorxtO7YG1yun8fy+pI="}],cosmos_sdk_version:"v0.45.6"}}}},{name:"/cosmos/base/tendermint/v1beta1/syncing",content:"Queries node syncing\n\n### Parameters\n\n- None\n\n### Response\n\n- Returns the node's syncing status as `true` / `false`",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/base/tendermint/v1beta1/syncing"},interactive:!0,response:{name:"/cosmos/base/tendermint/v1beta1/syncing",status:"OK",code:200,body:{syncing:!1}}},{name:"/cosmos/base/tendermint/v1beta1/validatorsets/latest",content:"Queries latest validator-set.\n\n### Parameters\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order. \n\n### Response\n\n- Returns the latest `block_height` and the latest set of `validators`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/base/tendermint/v1beta1/validatorsets/latest?pagination.limit=1"},interactive:!0,response:{name:"/cosmos/base/tendermint/v1beta1/validatorsets/latest",status:"OK",code:200,body:{block_height:"11857804",validators:[{address:"cosmosvalcons1668wcrfwsfy0rmryek6ctmdkrm9yx27c7grulf",pub_key:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"LtiHVLCcE+oFII0vpIl9mfkGDmk9BpPg1eUkvKnO4xw="},voting_power:"14059619",proposer_priority:"77008133"}],pagination:{next_key:null,total:"175"}}}},{name:"/cosmos/base/tendermint/v1beta1/validatorsets/{height}",content:"Queries validator-set at a given height.\n\n### Parameters\n\n- `height` string($int64) (path) (required)\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order. \n\n### Response\n\n- Returns the `block_height` and the set of `validators` at the given `block_height`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/base/tendermint/v1beta1/validatorsets/11857804?pagination.limit=1"},interactive:!0,response:{name:"/cosmos/base/tendermint/v1beta1/validatorsets/{height}",status:"OK",code:200,body:{block_height:"11857804",validators:[{address:"cosmosvalcons1668wcrfwsfy0rmryek6ctmdkrm9yx27c7grulf",pub_key:{"@type":"/cosmos.crypto.ed25519.PubKey",key:"LtiHVLCcE+oFII0vpIl9mfkGDmk9BpPg1eUkvKnO4xw="},voting_power:"14059619",proposer_priority:"77008133"}],pagination:{next_key:null,total:"175"}}}},{name:"/cosmos/tx/v1beta1/simulate",content:'Simulates executing a transaction for estimating gas usage.\n\n### Parameters\n\n- `body` object (body) (required)\n\n```json\n\n{\n  "tx": {\n    "body": {\n      "messages": [\n        {\n          "type_url": "string",\n          "value": "string"\n        }\n      ],\n      "memo": "string",\n      "timeout_height": "string",\n      "extension_options": [\n        {\n          "type_url": "string",\n          "value": "string"\n        }\n      ],\n      "non_critical_extension_options": [\n        {\n          "type_url": "string",\n          "value": "string"\n        }\n      ]\n    },\n    "auth_info": {\n      "signer_infos": [\n        {\n          "public_key": {\n            "type_url": "string",\n            "value": "string"\n          },\n          "mode_info": {\n            "single": {\n              "mode": "SIGN_MODE_UNSPECIFIED"\n            },\n            "multi": {\n              "bitarray": {\n                "extra_bits_stored": 0,\n                "elems": "string"\n              },\n              "mode_infos": [\n                null\n              ]\n            }\n          },\n          "sequence": "string"\n        }\n      ],\n      "fee": {\n        "amount": [\n          {\n            "denom": "string",\n            "amount": "string"\n          }\n        ],\n        "gas_limit": "string",\n        "payer": "string",\n        "granter": "string"\n      }\n    },\n    "signatures": [\n      "string"\n    ]\n  },\n  "tx_bytes": "string"\n}\n\n```\n\n### Response\n\n- Returns the `gas_info` & `result` with transaction details.',request:{method:"POST",header:[],body:{tx:{body:{messages:[{type_url:"string",value:"string"}],memo:"string",timeout_height:"string",extension_options:[{type_url:"string",value:"string"}],non_critical_extension_options:[{type_url:"string",value:"string"}]},auth_info:{signer_infos:[{public_key:{type_url:"string",value:"string"},mode_info:{single:{mode:"SIGN_MODE_UNSPECIFIED"},multi:{bitarray:{extra_bits_stored:0,elems:"string"},mode_infos:[null]}},sequence:"string"}],fee:{amount:[{denom:"string",amount:"string"}],gas_limit:"string",payer:"string",granter:"string"}},signatures:["string"]},tx_bytes:"string"},url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",headers:{},query:"cosmos/tx/v1beta1/simulate"},interactive:!0,response:{name:"/cosmos/tx/v1beta1/simulate",body:{gas_info:{gas_wanted:"string",gas_used:"string"},result:{data:"string",log:"string",events:[{type:"string",attributes:[{key:"string",value:"string",index:!0}]}]}}}},{name:"/cosmos/tx/v1beta1/txs",content:"Fetches txs by event.\n\n### Parameters\n\n- `events` array[string] (query)\n\n- `pagination.key` string ($byte) (query) Key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one offset or key should be set.\n\n- `pagination.offset` string ($uint64 (query)\toffset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.\n\n- `pagination.limit` string ($uint64) (query) limit is the total number of Response to be returned in the result page. If left empty it will default to a value to be set by each app.\n\n- `pagination.count_total` boolean($boolean) (query) count_total is set to true to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.\n\n- `pagination.reverse` boolean ($boolean (query) reverse is set to true if Response are to be returned in the descending order.\n\n- `order_by` string (query) \n - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. \n - OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending order\n - Available values : ORDER_BY_UNSPECIFIED, ORDER_BY_ASC, ORDER_BY_DESC\n - Default value : ORDER_BY_UNSPECIFIED \n\n### Response\n\n- Returns the complete details of the transaction based on the given parameters.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/tx/v1beta1/txs?events=tx.height=8215392"},interactive:!0,response:{name:"/cosmos/tx/v1beta1/txs",status:"OK",code:200,body:{txs:[{body:{messages:[{"@type":"/cosmos.staking.v1beta1.MsgDelegate",delegator_address:"cosmos1al4pxd2qdry78afpusa87hkeyuqx99nnpxa35z",validator_address:"cosmosvaloper1vvwtk805lxehwle9l4yudmq6mn0g32px9xtkhc",amount:{denom:"uatom",amount:"2500000"}}],memo:"",timeout_height:"0",extension_options:[],non_critical_extension_options:[]},auth_info:{signer_infos:[{public_key:{"@type":"/cosmos.crypto.secp256k1.PubKey",key:"A2EoDO+ecsHKtTpBNqfYM0Le6GdPQcAT9U6m/1tpGvZD"},mode_info:{single:{mode:"SIGN_MODE_LEGACY_AMINO_JSON"}},sequence:"0"}],fee:{amount:[{denom:"uatom",amount:"6250"}],gas_limit:"250000",payer:"",granter:""}},signatures:["hpjMIrYRlYmd+wk+69nu3gaEZ1W7FcgL9vmhGrtlXToSTb+BwLDRcf53E5hVJ/W9eZcast0X0BMgoQka9Bu+4g=="]}],tx_responses:[{height:"8215392",txhash:"E010A0985811A96CD154F4D0BB770E4597AA705151D6BC824B2604F21015D65D",codespace:"",code:0,data:"0A0A0A0864656C6567617465",raw_log:'[{"events":[{"type":"delegate","attributes":[{"key":"validator","value":"cosmosvaloper1vvwtk805lxehwle9l4yudmq6mn0g32px9xtkhc"},{"key":"amount","value":"2500000"}]},{"type":"message","attributes":[{"key":"action","value":"delegate"},{"key":"module","value":"staking"},{"key":"sender","value":"cosmos1al4pxd2qdry78afpusa87hkeyuqx99nnpxa35z"}]}]}]',logs:[{msg_index:0,log:"",events:[{type:"delegate",attributes:[{key:"validator",value:"cosmosvaloper1vvwtk805lxehwle9l4yudmq6mn0g32px9xtkhc"},{key:"amount",value:"2500000"}]},{type:"message",attributes:[{key:"action",value:"delegate"},{key:"module",value:"staking"},{key:"sender",value:"cosmos1al4pxd2qdry78afpusa87hkeyuqx99nnpxa35z"}]}]}],info:"",gas_wanted:"250000",gas_used:"115857",tx:{"@type":"/cosmos.tx.v1beta1.Tx",body:{messages:[{"@type":"/cosmos.staking.v1beta1.MsgDelegate",delegator_address:"cosmos1al4pxd2qdry78afpusa87hkeyuqx99nnpxa35z",validator_address:"cosmosvaloper1vvwtk805lxehwle9l4yudmq6mn0g32px9xtkhc",amount:{denom:"uatom",amount:"2500000"}}],memo:"",timeout_height:"0",extension_options:[],non_critical_extension_options:[]},auth_info:{signer_infos:[{public_key:{"@type":"/cosmos.crypto.secp256k1.PubKey",key:"A2EoDO+ecsHKtTpBNqfYM0Le6GdPQcAT9U6m/1tpGvZD"},mode_info:{single:{mode:"SIGN_MODE_LEGACY_AMINO_JSON"}},sequence:"0"}],fee:{amount:[{denom:"uatom",amount:"6250"}],gas_limit:"250000",payer:"",granter:""}},signatures:["hpjMIrYRlYmd+wk+69nu3gaEZ1W7FcgL9vmhGrtlXToSTb+BwLDRcf53E5hVJ/W9eZcast0X0BMgoQka9Bu+4g=="]},timestamp:"2021-11-02T07:04:06Z",events:[{type:"tx",attributes:[{key:"YWNjX3NlcQ==",value:"Y29zbW9zMWFsNHB4ZDJxZHJ5NzhhZnB1c2E4N2hrZXl1cXg5OW5ucHhhMzV6LzA=",index:!0}]},{type:"tx",attributes:[{key:"c2lnbmF0dXJl",value:"aHBqTUlyWVJsWW1kK3drKzY5bnUzZ2FFWjFXN0ZjZ0w5dm1oR3J0bFhUb1NUYitCd0xEUmNmNTNFNWhWSi9XOWVaY2FzdDBYMEJNZ29Ra2E5QnUrNGc9PQ==",index:!0}]},{type:"transfer",attributes:[{key:"cmVjaXBpZW50",value:"Y29zbW9zMTd4cGZ2YWttMmFtZzk2MnlsczZmODR6M2tlbGw4YzVsc2VycXRh",index:!0},{key:"c2VuZGVy",value:"Y29zbW9zMWFsNHB4ZDJxZHJ5NzhhZnB1c2E4N2hrZXl1cXg5OW5ucHhhMzV6",index:!0},{key:"YW1vdW50",value:"NjI1MHVhdG9t",index:!0}]},{type:"message",attributes:[{key:"c2VuZGVy",value:"Y29zbW9zMWFsNHB4ZDJxZHJ5NzhhZnB1c2E4N2hrZXl1cXg5OW5ucHhhMzV6",index:!0}]},{type:"message",attributes:[{key:"YWN0aW9u",value:"ZGVsZWdhdGU=",index:!0}]},{type:"delegate",attributes:[{key:"dmFsaWRhdG9y",value:"Y29zbW9zdmFsb3BlcjF2dnd0azgwNWx4ZWh3bGU5bDR5dWRtcTZtbjBnMzJweDl4dGtoYw==",index:!0},{key:"YW1vdW50",value:"MjUwMDAwMA==",index:!0}]},{type:"message",attributes:[{key:"bW9kdWxl",value:"c3Rha2luZw==",index:!0},{key:"c2VuZGVy",value:"Y29zbW9zMWFsNHB4ZDJxZHJ5NzhhZnB1c2E4N2hrZXl1cXg5OW5ucHhhMzV6",index:!0}]}]}],pagination:{next_key:null,total:"1"}}}},{name:"/cosmos/tx/v1beta1/txs",content:'Broadcast transaction.\n\n### Parameters\n\n- body object (body) (required)\n\n```json\n\n{\n  "tx_bytes": "string",\n  "mode": "BROADCAST_MODE_UNSPECIFIED"\n}\n\n```\n\n### Response\n\n- Returns the `tx_response` with complete details of the successful transaction.',request:{method:"POST",header:[],body:{tx_bytes:"string",mode:"BROADCAST_MODE_UNSPECIFIED"},url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",headers:{},query:"cosmos/tx/v1beta1/txs"},interactive:!0,response:{name:"/cosmos/tx/v1beta1/txs",body:{tx_response:{height:"string",txhash:"string",codespace:"string",code:0,data:"string",raw_log:"string",logs:[{msg_index:0,log:"string",events:[{type:"string",attributes:[{key:"string",value:"string"}]}]}],info:"string",gas_wanted:"string",gas_used:"string",tx:{type_url:"string",value:"string"},timestamp:"string"}}}},{name:"/cosmos/tx/v1beta1/txs/{hash}",content:"Fetches a tx by hash.\n\n### Parameters\n\n- `hash` string (path) (required) hash is the tx hash to query, encoded as a hex string.\n\n### Response\n\n- Returns the complete transaction details for the given transaction `hash`.",request:{method:"GET",header:[],url:"https://cosmoshub-4--lcd--archive.datahub.figment.io",body:"",headers:{},query:"cosmos/tx/v1beta1/txs/27A9741409C795A4DA928ECA9E93EDBBFE74A18D5C9D20AA559FEEAE80D3F497"},interactive:!0,response:{name:"/cosmos/tx/v1beta1/txs/{hash}",status:"OK",code:200,body:{tx:{body:{messages:[{"@type":"/cosmos.bank.v1beta1.MsgSend",from_address:"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru",to_address:"cosmos1c9fkd52v2mpx0vm0fss7r6qrcpx4k4d4uzaae5",amount:[{denom:"uatom",amount:"10100000"}]}],memo:"",timeout_height:"0",extension_options:[],non_critical_extension_options:[]},auth_info:{signer_infos:[{public_key:{"@type":"/cosmos.crypto.secp256k1.PubKey",key:"AokL4n7XVhFrWFhuHSr2Szh4ZbBKKJfxIMN9BAeE/3hq"},mode_info:{single:{mode:"SIGN_MODE_LEGACY_AMINO_JSON"}},sequence:"293"}],fee:{amount:[{denom:"uatom",amount:"2464"}],gas_limit:"98543",payer:"",granter:""}},signatures:["oBlA+6OkNz4yRytQVDcEJN74Q7MN7AMrx/UOH0l+MZcOGg5uMCHFu16YXlvJHnhkShj+zNT7L+8X0LD1JVTCsw=="]},tx_response:{height:"11857947",txhash:"27A9741409C795A4DA928ECA9E93EDBBFE74A18D5C9D20AA559FEEAE80D3F497",codespace:"",code:0,data:"0A1E0A1C2F636F736D6F732E62616E6B2E763162657461312E4D736753656E64",raw_log:'[{"events":[{"type":"coin_received","attributes":[{"key":"receiver","value":"cosmos1c9fkd52v2mpx0vm0fss7r6qrcpx4k4d4uzaae5"},{"key":"amount","value":"10100000uatom"}]},{"type":"coin_spent","attributes":[{"key":"spender","value":"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru"},{"key":"amount","value":"10100000uatom"}]},{"type":"message","attributes":[{"key":"action","value":"/cosmos.bank.v1beta1.MsgSend"},{"key":"sender","value":"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru"},{"key":"module","value":"bank"}]},{"type":"transfer","attributes":[{"key":"recipient","value":"cosmos1c9fkd52v2mpx0vm0fss7r6qrcpx4k4d4uzaae5"},{"key":"sender","value":"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru"},{"key":"amount","value":"10100000uatom"}]}]}]',logs:[{msg_index:0,log:"",events:[{type:"coin_received",attributes:[{key:"receiver",value:"cosmos1c9fkd52v2mpx0vm0fss7r6qrcpx4k4d4uzaae5"},{key:"amount",value:"10100000uatom"}]},{type:"coin_spent",attributes:[{key:"spender",value:"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru"},{key:"amount",value:"10100000uatom"}]},{type:"message",attributes:[{key:"action",value:"/cosmos.bank.v1beta1.MsgSend"},{key:"sender",value:"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru"},{key:"module",value:"bank"}]},{type:"transfer",attributes:[{key:"recipient",value:"cosmos1c9fkd52v2mpx0vm0fss7r6qrcpx4k4d4uzaae5"},{key:"sender",value:"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru"},{key:"amount",value:"10100000uatom"}]}]}],info:"",gas_wanted:"98543",gas_used:"76563",tx:{"@type":"/cosmos.tx.v1beta1.Tx",body:{messages:[{"@type":"/cosmos.bank.v1beta1.MsgSend",from_address:"cosmos1vfnr3rv9v802g5zu2vlzdyunf4pasfcs73wvru",to_address:"cosmos1c9fkd52v2mpx0vm0fss7r6qrcpx4k4d4uzaae5",amount:[{denom:"uatom",amount:"10100000"}]}],memo:"",timeout_height:"0",extension_options:[],non_critical_extension_options:[]},auth_info:{signer_infos:[{public_key:{"@type":"/cosmos.crypto.secp256k1.PubKey",key:"AokL4n7XVhFrWFhuHSr2Szh4ZbBKKJfxIMN9BAeE/3hq"},mode_info:{single:{mode:"SIGN_MODE_LEGACY_AMINO_JSON"}},sequence:"293"}],fee:{amount:[{denom:"uatom",amount:"2464"}],gas_limit:"98543",payer:"",granter:""}},signatures:["oBlA+6OkNz4yRytQVDcEJN74Q7MN7AMrx/UOH0l+MZcOGg5uMCHFu16YXlvJHnhkShj+zNT7L+8X0LD1JVTCsw=="]},timestamp:"2022-08-30T12:29:58Z",events:[{type:"coin_spent",attributes:[{key:"c3BlbmRlcg==",value:"Y29zbW9zMXZmbnIzcnY5djgwMmc1enUydmx6ZHl1bmY0cGFzZmNzNzN3dnJ1",index:!0},{key:"YW1vdW50",value:"MjQ2NHVhdG9t",index:!0}]}]}}}}],service:"node-api",networks:[{label:"Arbitrum",value:"arbitrum"},{label:"Avalanche C-Chain",value:"avalanche-c-chain"},{label:"Avalanche P-Chain",value:"avalanche-p-chain"},{label:"Avalanche X-Chain",value:"avalanche-x-chain"},{label:"BNB",value:"bnb"},{label:"Celo",value:"celo"},{label:"Cosmos LCD",value:"cosmos-lcd"},{label:"Cosmos Tendermint RPC",value:"cosmos-tendermint-rpc"},{label:"Ethereum",value:"ethereum"},{label:"Fantom",value:"fantom"},{label:"Kusama Sidecar",value:"kusama-sidecar"},{label:"Mina GraphQL",value:"mina-graphql"},{label:"NEAR",value:"near"},{label:"Optimism",value:"optimism"},{label:"Osmosis LCD",value:"osmosis-lcd"},{label:"Osmosis Tendermint RPC",value:"osmosis-tendermint-rpc"},{label:"Polkadot Sidecar",value:"polkadot-sidecar"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"cosmos-lcd",proxy:"https://api-service-proxy.paulpomerleau.workers.dev",mdxType:"APIMethods"}))}h.isMDXComponent=!0}}]);