"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[5094],{2750:(e,a,t)=>{t.d(a,{ZP:()=>c});var n=t(7462),d=(t(7294),t(3905)),s=t(5488),o=t(5162),r=t(7643);const i={toc:[{value:"Authentication",id:"authentication",level:3}]};function c(e){let{components:a,...t}=e;return(0,d.kt)("wrapper",(0,n.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,d.kt)("h3",{id:"authentication"},"Authentication"),(0,d.kt)("div",null,"API calls require authentication with API key via ",(0,d.kt)("code",null,"Authorization")," ","request header or ",(0,d.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,d.kt)("strong",null,t.network," ",t.service)," ","endpoint, hosted at ",(0,d.kt)("code",null,t.url),(0,d.kt)("br",null),(0,d.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,d.kt)(s.Z,{mdxType:"Tabs"},(0,d.kt)(o.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,d.kt)(r.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,d.kt)(o.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,d.kt)(r.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,d.kt)(o.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,d.kt)(r.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,d.kt)(o.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,d.kt)(r.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`))))}c.isMDXComponent=!0},3976:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(7294),d=t(6550);function s(e){let{network:a,networks:t,methods:s,service:o}=e;const r=(0,d.TH)(),i=(0,d.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:a,onChange:e=>{i.push(r.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},t.map((e=>n.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:r.hash.replace("#","")||"",onChange:e=>{i.push(`#${e.target.value}`)}},s.map((e=>n.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},7297:(e,a,t)=>{t.d(a,{Z:()=>d});var n=t(7294);function d(e){let{network:a,service:t}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=a;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=t.label,n.querySelector(".breadcrumbs__link").href=t.link,e.insertAdjacentElement("beforebegin",n)}),[a]),n.createElement(n.Fragment,null)}},3213:(e,a,t)=>{t.d(a,{S:()=>D});var n=t(7462),d=t(7294),s=t(8538),o=t(7748),r=t(460),i=t.n(r),c=t(3746),f=t(6412);const l={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function b(e){let{children:a="",header:t,actions:s,disabled:o=!1,status:r,onValueChange:b}=e;const m=(0,f.p)(),h=(0,d.useRef)(null);(0,d.useEffect)((()=>{var e;const a=null==(e=h.current)?void 0:e.querySelector("textarea"),t=e=>{const a=e.target;a.style.width=a.scrollWidth+"px"};return a.addEventListener("input",t),()=>a.removeEventListener("input",t)}),[]);return d.createElement("div",{ref:h},d.createElement(u,{actions:s,status:r},t),d.createElement("div",{className:l.Container},d.createElement(i(),{value:a,onValueChange:b,highlight:function(e){return void 0===e&&(e=""),d.createElement(c.ZP,(0,n.Z)({},c.lG,{theme:m,code:e,language:"json"}),(e=>{let{className:a,style:t,tokens:s,getLineProps:o,getTokenProps:r}=e;return d.createElement("div",{className:l.Code},s.map(((e,a)=>d.createElement("div",(0,n.Z)({key:a},o({line:e,key:a}),{className:l.Line}),d.createElement("span",{className:l.LineContent},e.map(((e,a)=>d.createElement("span",(0,n.Z)({key:a},r({token:e,key:a}))))))))))}))},disabled:o,ignoreTabKey:!0,padding:10,style:{...m.plain,overflow:"auto"},className:l.Editor})))}function u(e){let{children:a,actions:t=[],status:n}=e;return d.createElement("div",{className:l.Header,"data-status":n},d.createElement("span",null,a),d.createElement("span",{className:l.Actions},t.map(((e,a)=>{let{title:t,onClick:n,Component:s=t}=e;return d.createElement("button",{className:l.HeaderButton,key:`${a}:${t}`,title:t,onClick:n},s)}))))}var m=t(195);const h="overlayHeaderButton_IGf5";const p=function(e,a){const t=(0,d.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[s,o]=(0,d.useReducer)(((e,a)=>{switch(a.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:a.payload,loading:!1};case"error":return{...n,error:a.payload,loading:!1};default:return e}}),n);return{...s,fetchData:async function(n,d){void 0===d&&(d={}),o({type:"loading"});try{const s=await fetch(e+(n?`/${n}`:""),{...a,...d});if(!s.ok){let e,a,t;try{t=JSON.parse(await s.text()),e=await s.json(),a=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(a,null,2)||JSON.stringify(t,null,2)||s.statusText)}const r=await s.json();if(t.current)return;return o({type:"fetched",payload:r}),r}catch(s){if(t.current)return;return o({type:"error",payload:s.message}),null}}}};var g,_=t(7643),w=t(4672);function y(){return y=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},y.apply(this,arguments)}const v=e=>{let{title:a,titleId:t,...n}=e;return d.createElement("svg",y({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?d.createElement("title",{id:t},a):null,g||(g=d.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var x;function k(){return k=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},k.apply(this,arguments)}const T=e=>{let{title:a,titleId:t,...n}=e;return d.createElement("svg",k({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?d.createElement("title",{id:t},a):null,x||(x=d.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function N(e){let{req:a,res:t,interactive:n,endpoint:s}=e;const[o,r]=(0,d.useState)(E(a.body)),[i,c]=(0,d.useState)(a.query),[f,l]=(0,d.useState)(S(t.body)),u="string"==typeof a.body&&0==a.body.indexOf("query"),{data:g,error:y,loading:x,fetchData:k}=p(s,{method:a.method,headers:{...a.headers,"Content-Type":u?"application/graphql":"application/json"},body:E(a.body)}),[N,A]=(0,d.useState)(null);(0,d.useEffect)((()=>{x?A("LOADING"):y||null!=g&&g.error?A("ERROR"):g&&A("SUCCESS")}),[g,y,x]);const P=[n?{title:"Run request",onClick:async()=>{const e=await k(i,{body:o});e&&l(S(e))},Component:d.createElement(d.Fragment,null,d.createElement(v,null)," Run")}:null,{title:"Copy",onClick:()=>(0,m.Z)(o),Component:d.createElement(w.Z,{code:"",className:h})},n?{title:"Reset",onClick:()=>{A(null),c(a.query),r(E(a.body)),l(S(t.body))},Component:d.createElement(T,null)}:null].filter((e=>!!e));return d.createElement(d.Fragment,null,d.createElement(b,{header:"GET"===a.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:P,disabled:!n,onValueChange:e=>{n&&("GET"===a.method?c(e):"POST"===a.method&&r(e))}},"GET"===a.method?i:o),d.createElement(_.Z,{title:N?"Response":"Example Response",language:"json"},y?`${y}`:f))}function S(e){return JSON.stringify(e,null,2)}function E(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const A="heading_REER";var P=t(9960),q=t(3905);const F={toc:[]};function R(e){let{components:a,...t}=e;return(0,q.kt)("wrapper",(0,n.Z)({},F,t,{components:a,mdxType:"MDXLayout"}),(0,q.kt)("details",{open:t.accordionOpen?"open":void 0},(0,q.kt)("summary",null,(0,q.kt)("span",{className:"open"},"Specification"),(0,q.kt)("span",{className:"closed"},"View Specification")),(0,q.kt)(s.D,{mdxType:"ReactMarkdown"},t.details)))}function C(e){let{name:a,content:t="",interactive:n,request:o,accordionOpen:r=!1,response:i,endpoint:c}=e;["Rewards (by epoch)","Rewards (daily)"].includes(a)&&(o.body={...o.body,start_time:new Date(Date.now()-("Rewards (by epoch)"===a?1728e5:864e5)).toISOString().split("T")[0],end_time:(new Date).toISOString().split("T")[0]});const[f,...l]=t.trim().split(/\n+/),b=l.join("\n");return d.createElement(d.Fragment,null,d.createElement("h2",{id:a.toLowerCase(),className:A,"data-method":o.method},d.createElement(P.Z,{to:`#${a.toLowerCase()}`},a)),d.createElement(s.D,null,f),d.createElement(N,{req:o,res:i,interactive:n,endpoint:c}),d.createElement(R,{details:b,accordionOpen:r}),d.createElement("hr",null))}function D(e){let{network:a,methods:t,service:s,proxy:r}=e;return d.createElement(d.Fragment,null,d.createElement("h3",null,"Available Methods"),t.map(((e,t)=>d.createElement(C,(0,n.Z)({key:a+t},e,{endpoint:`${r}/${s}/${a}`,accordionOpen:"node-api"!==s})))),d.createElement(o.Z,null))}R.isMDXComponent=!0},8123:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>f,toc:()=>b});var n=t(7462),d=(t(7294),t(3905)),s=t(3213),o=t(3976),r=(t(7297),t(2750));const i={title:"NEAR",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - NEAR",image:"img/logo.svg",keywords:["Staking API","NEAR"]},c="Staking API - NEAR",f={unversionedId:"api-reference/staking-api/near",id:"api-reference/staking-api/near",title:"NEAR",description:"Staking API - NEAR",source:"@site/docs/api-reference/staking-api/near.mdx",sourceDirName:"api-reference/staking-api",slug:"/api-reference/staking-api/near",permalink:"/api-reference/staking-api/near",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"NEAR",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - NEAR",image:"img/logo.svg",keywords:["Staking API","NEAR"]},sidebar:"docsSidebar"},l={},b=[],u={toc:b};function m(e){let{components:a,...t}=e;return(0,d.kt)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,d.kt)("h1",{id:"staking-api---near"},"Staking API - NEAR"),(0,d.kt)(o.Z,{service:"staking-api",methods:[{name:"Create New Delegation Flow"},{name:"Submit Delegate Data"},{name:"Submit Signed Delegate Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Create New Undelegation Flow"},{name:"Submit Undelegate Data"},{name:"Submit Signed Undelegate Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Submit Withdraw Data"},{name:"Submit a Signed Withdraw Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Create New Transfer Flow"},{name:"Submit Transfer Data"},{name:"Submit Signed Transfer Transaction for Broadcast"},{name:"Get Flow Status"}],networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"near",mdxType:"ApiReferenceNav"}),(0,d.kt)(r.ZP,{url:"https://near-slate.datahub.figment.io",network:"Near",service:"Staking API",mdxType:"MakingCalls"}),(0,d.kt)(s.S,{methods:[{name:"Create New Delegation Flow",content:"To initiate the staking process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `near`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `mainnet`) (required).\n  - `operation` &mdash; `string` The operation to perform (ex. `staking`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n  - `create_delegate_tx` &mdash; Use this action to generate a delegation transaction to stake NEAR.\n   - `validator_address` &mdash; Figment validator address.\n   - `delegator_address` &mdash; The delegating address.\n   - `delegator_pubkey` &mdash; The public key of the signing account. Must start with `ed25519:`.\n   - `amount` &mdash; The amount of NEAR to be delegated.\n   - `max_gas` &mdash; Adjust if you wish to limit the possible transaction fee.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"near",chain_code:"testnet",operation:"staking",version:"v1"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Delegation Flow",body:{id:"aeb7503c-27c8-4184-8537-8f4a77f694a9",state:"initialized",actions:[{name:"create_delegate_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"account_balance",options:{on:"with_on_chain_validations",greater_than_or_equal_to:null}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]}],data:{delegator_address:null,delegator_pubkey:null,validator_address:null,amount:null,max_gas:null,delegate_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T15:24:43.720Z",updated_at:"2022-09-26T15:24:43.720Z"}}},{name:"Submit Delegate Data",content:"After creating a new staking flow, submit the staking account data. Collect the required inputs. Send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The delegating address (required).\n  - `delegator_pubkey` &mdash; `string` The public key of the signing account (required).\n  - `validator_address` &mdash; `string` Address of the validator you want to delegate your tokens to (required).\n  - `amount` &mdash; `number` &mdash; The amount of NEAR to be delegated (required).\n  - `max_gas` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_delegate_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., the nonce has increased).\n - `sign_delegate_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_delegate_tx",inputs:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25",max_gas:null}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Delegate Data",body:{id:"aeb7503c-27c8-4184-8537-8f4a77f694a9",state:"delegate_tx_signature",actions:[{name:"refresh_delegate_tx",inputs:[]},{name:"sign_delegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"1a45dcf2292e9f43ddb2053ed913ca84291a820549be5b04075f6e2719173fd0"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25.0",max_gas:null,delegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"1a45dcf2292e9f43ddb2053ed913ca84291a820549be5b04075f6e2719173fd0",signed:null,hash:"2mZPUCSVnhKNL1LwWtGXpMzzck9xgVJRtn5g8fJgwTWP",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T15:24:43.720Z",updated_at:"2022-09-26T15:29:38.291Z"}}},{name:"Submit Signed Delegate Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` with the signed payload. The Staking API will broadcast the transaction to the Ethereum network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `delegate_tx_broadcasting` &mdash; Transaction has been broadcast and is confirming.\n - `delegated` &mdash; Transaction has been confirmed and the delegation is active.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_delegate_tx",inputs:{transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad14000000000000cd7538bc1db22a72cbaa19f54e9df00b9444863c74eefd5897d2ebbb7a52e7f8042d675c09d40684b7f7dd17feb73ecd09f6ae08c33e7f82450b438694f5430e"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Delegate Transaction for Broadcast",body:{id:"aeb7503c-27c8-4184-8537-8f4a77f694a9",state:"delegate_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-09-26T16:06:15.163Z",inputs:[]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25.0",max_gas:null,delegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"1a45dcf2292e9f43ddb2053ed913ca84291a820549be5b04075f6e2719173fd0",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad14000000000000cd7538bc1db22a72cbaa19f54e9df00b9444863c74eefd5897d2ebbb7a52e7f8042d675c09d40684b7f7dd17feb73ecd09f6ae08c33e7f82450b438694f5430e",hash:"2mZPUCSVnhKNL1LwWtGXpMzzck9xgVJRtn5g8fJgwTWP",status:null,error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T15:24:43.720Z",updated_at:"2022-09-26T16:05:13.939Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `delegate_tx_broadcasting` &mdash; Transaction has been broadcast and is confirming.\n - `delegated` &mdash; Transaction has been confirmed and the delegation is active.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"GET",header:[],url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"aeb7503c-27c8-4184-8537-8f4a77f694a9",state:"delegated",actions:[],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25.0",max_gas:null,delegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"1a45dcf2292e9f43ddb2053ed913ca84291a820549be5b04075f6e2719173fd0",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3904cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ab9d36f31580c94fcf7eace07f4a286a6f69cdd3caef0efed5d78930df546880100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad14000000000000cd7538bc1db22a72cbaa19f54e9df00b9444863c74eefd5897d2ebbb7a52e7f8042d675c09d40684b7f7dd17feb73ecd09f6ae08c33e7f82450b438694f5430e",hash:"2mZPUCSVnhKNL1LwWtGXpMzzck9xgVJRtn5g8fJgwTWP",status:"confirmed",error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T15:24:43.720Z",updated_at:"2022-09-26T16:05:34.224Z"}}},{name:"Create New Undelegation Flow",content:"To initiate the undelegation process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `near`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `testnet`) (required).\n  - `operation` `string` The operation to perform (ex. `unstaking`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `create_undelegate_tx` &mdash; Use this action to generate an undelegation transaction to unstake NEAR.\n   - `delegator_address` &mdash; The delegator address.\n   - `delegator_pubkey` &mdash; The public key of the signing account.\n   - `validator_address` &mdash; Validator address from which NEAR will be undelegated.\n   - `undelegate_amount` &mdash; The amount of NEAR to be undelegated.\n   - `undelegate_maximum` &mdash; Set to `true`if you wish to unbond the full delegated balance without needing to know the exact delegated balance.\n   - `max_gas` &mdash; Adjust if you wish to limit the possible transaction fee.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"near",chain_code:"testnet",operation:"unstaking",version:"v1"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Undelegation Flow",body:{id:"96237daf-973a-456b-ae07-a5e16eeffbd1",state:"initialized",actions:[{name:"create_withdraw_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"withdraw_amount",display:"Withdraw Amount",description:"",type:"decimal",validations:[{type:"presence",options:{unless:"withdraw_maximum"}},{type:"numericality",options:{unless:"withdraw_maximum",greater_than:0}},{type:"withdrawal_availability",options:{on:"with_on_chain_validations"}},{type:"withdrawal_balance",options:{unless:!0,on:"with_on_chain_validations"}}]},{name:"withdraw_maximum",display:"Withdraw Maximum",description:"",type:"boolean",validations:[]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]},{name:"create_undelegate_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"undelegate_amount",display:"Undelegate Amount",description:"",type:"decimal",validations:[{type:"presence",options:{unless:"undelegate_maximum"}},{type:"numericality",options:{unless:"undelegate_maximum",greater_than:0}},{type:"staked_balance",options:{unless:!0,on:"with_on_chain_validations"}}]},{name:"undelegate_maximum",display:"Undelegate Maximum",description:"",type:"boolean",validations:[]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]}],data:{delegator_address:null,delegator_pubkey:null,validator_address:null,max_gas:null,undelegate_amount:null,undelegate_maximum:null,undelegate_transaction:null,estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:15:50.379Z",updated_at:"2022-09-26T16:15:50.379Z"}}},{name:"Submit Undelegate Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The delegator address (required).\n  - `delegator_pubkey` &mdash; `string` The pubkey of the signing account (required).\n  - `validator_address` &mdash; `string` Validator address from which NEAR will be undelegated (required).\n  - `undelegate_amount` &mdash; `number` The amount of NEAR to be undelegated (required).\n  - `undelegate_maximum` &mdash; `boolean` Set to `true` if you wish to unbond the full delegated balance without needing to know the exact delegated balance (optional).\n  - `max_gas` &mdash; `null` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_undelegate_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., the nonce has increased).\n - `sign_undelegate_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_undelegate_tx",inputs:{validator_address:"01node.pool.f863973.m0",delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",undelegate_amount:"25"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Undelegate Data",body:{id:"96237daf-973a-456b-ae07-a5e16eeffbd1",state:"undelegate_tx_signature",actions:[{name:"refresh_undelegate_tx",inputs:[]},{name:"sign_undelegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"3ff41ac1a4b1f35e22412c3ebaa29b5e3075427929f111609d1cfc6706a27e2b"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:null,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"3ff41ac1a4b1f35e22412c3ebaa29b5e3075427929f111609d1cfc6706a27e2b",signed:null,hash:"5JeaBzEJguWfF35C8duE1vDRzP8rSQU4DM8T7stXLcEN",status:null,error:null,signatures:null},estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:15:50.379Z",updated_at:"2022-09-26T16:19:09.645Z"}}},{name:"Submit Signed Undelegate Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` with the signed payload. The Staking API will broadcast the transaction to the NEAR network\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `undelegate_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting confirmation.\n - `cool_down` &mdash; Transaction has been confirmed and the delegation is unbonding.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_undelegate_tx",inputs:{transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000d27fe1cabf4535e130002217b79d743941e22110d0b3b3f446aba92d3416eb5774efb6aa925af5ebc78e459218de9ae0baeee7de0e4fad77d299ace7fcf80107"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Undelegate Transaction for Broadcast",body:{id:"96237daf-973a-456b-ae07-a5e16eeffbd1",state:"undelegate_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-09-26T16:25:23.094Z",inputs:[]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:null,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"3ff41ac1a4b1f35e22412c3ebaa29b5e3075427929f111609d1cfc6706a27e2b",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000d27fe1cabf4535e130002217b79d743941e22110d0b3b3f446aba92d3416eb5774efb6aa925af5ebc78e459218de9ae0baeee7de0e4fad77d299ace7fcf80107",hash:"5JeaBzEJguWfF35C8duE1vDRzP8rSQU4DM8T7stXLcEN",status:null,error:null,signatures:[]},estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:15:50.379Z",updated_at:"2022-09-26T16:24:22.552Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `undelegate_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n - `cool_down` &mdash; Transaction has been confirmed and the delegation is unbonding.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"GET",header:[],url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"96237daf-973a-456b-ae07-a5e16eeffbd1",state:"cool_down",actions:[{name:"wait",estimated_state_change_at:"2022-09-28T16:24:34.472Z",inputs:[]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:null,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"3ff41ac1a4b1f35e22412c3ebaa29b5e3075427929f111609d1cfc6706a27e2b",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000d27fe1cabf4535e130002217b79d743941e22110d0b3b3f446aba92d3416eb5774efb6aa925af5ebc78e459218de9ae0baeee7de0e4fad77d299ace7fcf80107",hash:"5JeaBzEJguWfF35C8duE1vDRzP8rSQU4DM8T7stXLcEN",status:"confirmed",error:null,signatures:[]},estimated_inactive_at:"2022-09-28T16:24:34.472Z",withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:15:50.379Z",updated_at:"2022-09-26T16:24:34.473Z"}}},{name:"Submit Withdraw Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The delegator address (required).\n  - `delegator_pubkey` &mdash; `string` The pubkey of the signing account (required).\n  - `validator_address` &mdash; `string` Validator address from which NEAR will be undelegated (required).\n  - `withdraw_amount` &mdash; `number` The amount of NEAR to be withdrawn (required).\n  - `withdraw_maximum` &mdash; `boolean` Set to `true` if you wish to withdraw the full available balance without needing to know the exact available balance. (optional).\n  - `max_gas` &mdash; `number` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_withdraw_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., if the nonce needs to be updated)\n - `sign_withdraw_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_withdraw_tx",inputs:{validator_address:"01node.pool.f863973.m0",delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",withdraw_amount:"25"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Withdraw Data",body:{id:"96237daf-973a-456b-ae07-a5e16eeffbd1",state:"withdraw_tx_signature",actions:[{name:"refresh_withdraw_tx",inputs:[]},{name:"sign_withdraw_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"b3988227217a53c7eaf6b904aa30c40fe218f81c6a9c6313baf22a305b5600b2"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:null,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"3ff41ac1a4b1f35e22412c3ebaa29b5e3075427929f111609d1cfc6706a27e2b",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000d27fe1cabf4535e130002217b79d743941e22110d0b3b3f446aba92d3416eb5774efb6aa925af5ebc78e459218de9ae0baeee7de0e4fad77d299ace7fcf80107",hash:"5JeaBzEJguWfF35C8duE1vDRzP8rSQU4DM8T7stXLcEN",status:"confirmed",error:null,signatures:[]},estimated_inactive_at:"2022-09-28T16:24:34.472Z",withdraw_amount:"25.0",withdraw_maximum:null,withdraw_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"b3988227217a53c7eaf6b904aa30c40fe218f81c6a9c6313baf22a305b5600b2",signed:null,hash:"D64riKQvR9ZjTgKG5rNBpQC8WDsxSNPxMQvLb8Ckyk81",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:15:50.379Z",updated_at:"2022-09-28T16:40:32.482Z"}}},{name:"Submit a Signed Withdraw Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` (as always!) and the Staking API will broadcast the transaction to the NEAR network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; `string` Signed transaction payload from the previous step's response (required).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `withdraw_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n - `withdrawn` &mdash; Transaction has been confirmed and the withdrawal is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_withdraw_tx",inputs:{transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000235397dfd3f0b7ce06a4fe11395e36ce40d12610eae07dcc1dc1d962b38fa9592cdc22f6c9164b0155967a773c369719f71d76b84185ec13c39381343c63cf0b"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Withdraw Transaction for Broadcast",body:{id:"96237daf-973a-456b-ae07-a5e16eeffbd1",state:"withdraw_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-09-28T16:48:37.242Z",inputs:[]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:null,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"3ff41ac1a4b1f35e22412c3ebaa29b5e3075427929f111609d1cfc6706a27e2b",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000d27fe1cabf4535e130002217b79d743941e22110d0b3b3f446aba92d3416eb5774efb6aa925af5ebc78e459218de9ae0baeee7de0e4fad77d299ace7fcf80107",hash:"5JeaBzEJguWfF35C8duE1vDRzP8rSQU4DM8T7stXLcEN",status:"confirmed",error:null,signatures:[]},estimated_inactive_at:"2022-09-28T16:24:34.472Z",withdraw_amount:"25.0",withdraw_maximum:null,withdraw_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"b3988227217a53c7eaf6b904aa30c40fe218f81c6a9c6313baf22a305b5600b2",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000235397dfd3f0b7ce06a4fe11395e36ce40d12610eae07dcc1dc1d962b38fa9592cdc22f6c9164b0155967a773c369719f71d76b84185ec13c39381343c63cf0b",hash:"D64riKQvR9ZjTgKG5rNBpQC8WDsxSNPxMQvLb8Ckyk81",status:null,error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:15:50.379Z",updated_at:"2022-09-28T16:47:36.737Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `withdraw_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n - `withdrawn` &mdash; Transaction has been confirmed and the withdrawal is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"GET",header:[],url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"96237daf-973a-456b-ae07-a5e16eeffbd1",state:"withdrawn",actions:[],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:null,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"3ff41ac1a4b1f35e22412c3ebaa29b5e3075427929f111609d1cfc6706a27e2b",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3905cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d308e0f6b6bb5b283186516419e2d4c06a47f7d55b456b83947fb5f8fb815957df6010000000207000000756e7374616b65270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000d27fe1cabf4535e130002217b79d743941e22110d0b3b3f446aba92d3416eb5774efb6aa925af5ebc78e459218de9ae0baeee7de0e4fad77d299ace7fcf80107",hash:"5JeaBzEJguWfF35C8duE1vDRzP8rSQU4DM8T7stXLcEN",status:"confirmed",error:null,signatures:[]},estimated_inactive_at:"2022-09-28T16:24:34.472Z",withdraw_amount:"25.0",withdraw_maximum:null,withdraw_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000",signing_payload:"b3988227217a53c7eaf6b904aa30c40fe218f81c6a9c6313baf22a305b5600b2",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3907cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d3084edd29289b3a590be582317bb0061016a8df058b7c29a0278f5b82f86c283010100000002080000007769746864726177270000007b22616d6f756e74223a223235303030303030303030303030303030303030303030303030227d00e057eb481b00000000000000000000000000000000000000235397dfd3f0b7ce06a4fe11395e36ce40d12610eae07dcc1dc1d962b38fa9592cdc22f6c9164b0155967a773c369719f71d76b84185ec13c39381343c63cf0b",hash:"D64riKQvR9ZjTgKG5rNBpQC8WDsxSNPxMQvLb8Ckyk81",status:"confirmed",error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:15:50.379Z",updated_at:"2022-09-28T16:47:47.075Z"}}},{name:"Create New Transfer Flow",content:"To initiate the transfer process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `near`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `testnet`) (required).\n  - `operation` &mdash; `string` The operation to perform (ex. `transfer`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `create_transfer_tx` &mdash; Use this action to transfer NEAR.\n   - `from_account_address` &mdash; The address from which NEAR will be transferred.\n   - `from_account_pubkey` &mdash; The account that will sign the transaction.\n   - `to_account_address` &mdash; The address to which NEAR will be transferred.\n   - `amount` &mdash; The amount of NEAR to be transferred.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"near",chain_code:"testnet",operation:"transfer",version:"v1"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Transfer Flow",body:{id:"5f0962d5-fba0-453c-bf35-0dad79624b59",state:"initialized",actions:[{name:"create_transfer_tx",inputs:[{name:"from_account_pubkey",display:"From Account Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"from_account_address",display:"From Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"to_account_address",display:"To Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]}]}],data:{from_account_pubkey:null,from_account_address:null,to_account_address:null,amount:null,transfer_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:33:20.109Z",updated_at:"2022-09-26T16:33:20.109Z"}}},{name:"Submit Transfer Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute - `create_transfer_tx`.\n- `inputs` &mdash; `object`\n  - `from_account_pubkey` &mdash; `string` The account that will sign the transaction (required).\n  - `from_account_address` &mdash; `string` the address which NEAR will be transferred from (required).\n  - `to_account_address` &mdash; `string` The address to which NEAR will be transferred (required).\n  - `amount` &mdash; `number` The amount of NEAR to be transferred (required).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_deposit_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., the nonce has increased).\n - `sign_deposit_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_transfer_tx",inputs:{from_account_address:"slate-demo.testnet",from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",to_account_address:"pizza.testnet",amount:"10"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearTransferFlowId}}/next"},interactive:!1,response:{name:"Submit Transfer Data",body:{id:"5f0962d5-fba0-453c-bf35-0dad79624b59",state:"transfer_tx_signature",actions:[{name:"refresh_transfer_tx",inputs:[]},{name:"sign_transfer_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a480114169545080000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a480114169545080000000000",signing_payload:"a7ee9bc8e05b776636571edcf4f8b6e679bb53568e384f905f3e4f682eaebcfc"}]}],data:{from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",from_account_address:"slate-demo.testnet",to_account_address:"pizza.testnet",amount:"10.0",transfer_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a480114169545080000000000",signing_payload:"a7ee9bc8e05b776636571edcf4f8b6e679bb53568e384f905f3e4f682eaebcfc",signed:null,hash:"CJY7WBZVnMFWfRteZgHAkf1SgfwnqRvm7K8SsMTiQUSX",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:33:20.109Z",updated_at:"2022-09-26T16:45:15.042Z"}}},{name:"Submit Signed Transfer Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` with the signed payload. The Staking API will broadcast the transaction to the NEAR network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `transfer_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting confirmation.\n - `transfered` &mdash; Transaction has been confirmed and the transfer is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_transfer_tx",inputs:{transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a48011416954508000000000000e7a0bf4947796c6c2962084dccd3c97fa1b78de1fab4765ab3d2cadf3e6c90b6290d5aae0a79b7c0a5bc31120210591135a7604fcc12ecc4b3b34d7513e73a0b"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearTransferFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Transfer Transaction for Broadcast",body:{id:"5f0962d5-fba0-453c-bf35-0dad79624b59",state:"transfer_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-09-26T16:50:38.484Z",inputs:[]}],data:{from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",from_account_address:"slate-demo.testnet",to_account_address:"pizza.testnet",amount:"10.0",transfer_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a480114169545080000000000",signing_payload:"a7ee9bc8e05b776636571edcf4f8b6e679bb53568e384f905f3e4f682eaebcfc",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a48011416954508000000000000e7a0bf4947796c6c2962084dccd3c97fa1b78de1fab4765ab3d2cadf3e6c90b6290d5aae0a79b7c0a5bc31120210591135a7604fcc12ecc4b3b34d7513e73a0b",hash:"CJY7WBZVnMFWfRteZgHAkf1SgfwnqRvm7K8SsMTiQUSX",status:null,error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:33:20.109Z",updated_at:"2022-09-26T16:49:37.923Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `transfer_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting confirmation.\n - `transfered` &mdash; Transaction has been confirmed and the transfer is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"GET",header:[],url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearTransferFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"5f0962d5-fba0-453c-bf35-0dad79624b59",state:"transfered",actions:[],data:{from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",from_account_address:"slate-demo.testnet",to_account_address:"pizza.testnet",amount:"10.0",transfer_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a480114169545080000000000",signing_payload:"a7ee9bc8e05b776636571edcf4f8b6e679bb53568e384f905f3e4f682eaebcfc",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3906cc1038fc5700000d00000070697a7a612e746573746e657490121aa419ea5a902edec74ac78626fd251b8466f4c637f3ded5f0898014448001000000030000004a48011416954508000000000000e7a0bf4947796c6c2962084dccd3c97fa1b78de1fab4765ab3d2cadf3e6c90b6290d5aae0a79b7c0a5bc31120210591135a7604fcc12ecc4b3b34d7513e73a0b",hash:"CJY7WBZVnMFWfRteZgHAkf1SgfwnqRvm7K8SsMTiQUSX",status:"confirmed",error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-09-26T16:33:20.109Z",updated_at:"2022-09-26T16:49:49.708Z"}}}],service:"staking-api",networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"near",proxy:"https://api-service-proxy.paulpomerleau.workers.dev",mdxType:"APIMethods"}))}m.isMDXComponent=!0}}]);