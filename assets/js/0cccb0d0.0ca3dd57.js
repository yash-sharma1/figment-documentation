"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[5094],{2750:(e,a,t)=>{t.d(a,{ZP:()=>c});var n=t(7462),d=(t(7294),t(3905)),i=t(5488),s=t(5162),o=t(7643);const r={toc:[{value:"Authentication",id:"authentication",level:3}]};function c(e){let{components:a,...t}=e;return(0,d.kt)("wrapper",(0,n.Z)({},r,t,{components:a,mdxType:"MDXLayout"}),(0,d.kt)("h3",{id:"authentication"},"Authentication"),(0,d.kt)("div",null,"API calls require authentication with API key via ",(0,d.kt)("code",null,"Authorization")," ","request header or ",(0,d.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,d.kt)("strong",null,t.network," ",t.service)," ","endpoint, hosted at ",(0,d.kt)("code",null,t.url),(0,d.kt)("br",null),(0,d.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,d.kt)(i.Z,{mdxType:"Tabs"},(0,d.kt)(s.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,d.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},'fetch("'+t.url+'", {\n    method: \'POST\', // can also be \'GET\', \'PUT\' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is \'POST\'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})')),(0,d.kt)(s.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,d.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},'fetch("'+t.url+"\", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        \"Content-Type\": \"application/json\" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})")),(0,d.kt)(s.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,d.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},"curl -X POST '"+t.url+"' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'")),(0,d.kt)(s.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,d.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},"curl -X POST '"+t.url+"' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'"))))}c.isMDXComponent=!0},3976:(e,a,t)=>{t.d(a,{Z:()=>i});var n=t(7294),d=t(6775);function i(e){let{network:a,networks:t,methods:i,service:s}=e;const o=(0,d.TH)(),r=(0,d.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:a,onChange:e=>{r.push(o.pathname.replace(/\/[^\/]+$/,"/"+e.target.value))}},t.map((e=>n.createElement("option",{key:e.value+"--n-option",value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:o.hash.replace("#","")||"",onChange:e=>{r.push("#"+e.target.value)}},i.map((e=>n.createElement("option",{key:e.name+"--m-hash",value:e.name.toLowerCase()},e.name)))))}},7297:(e,a,t)=>{t.d(a,{Z:()=>d});var n=t(7294);function d(e){let{network:a,service:t}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=a;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=t.label,n.querySelector(".breadcrumbs__link").href=t.link,e.insertAdjacentElement("beforebegin",n)}),[a]),n.createElement(n.Fragment,null)}},3213:(e,a,t)=>{t.d(a,{S:()=>G});var n=t(7462),d=t(7294),i=t(1099),s=t(7748),o=t(460),r=t.n(o),c=t(3746),l=t(6412);const u={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function f(e){let{children:a="",header:t,actions:i,disabled:s=!1,status:o,onValueChange:f}=e;const b=(0,l.p)(),m=(0,d.useRef)(null);(0,d.useEffect)((()=>{var e;const a=null==(e=m.current)?void 0:e.querySelector("textarea"),t=e=>{const a=e.target;a.style.width=a.scrollWidth+"px"};return a.addEventListener("input",t),()=>a.removeEventListener("input",t)}),[]);return d.createElement("div",{ref:m},d.createElement(p,{actions:i,status:o},t),d.createElement("div",{className:u.Container},d.createElement(r(),{value:a,onValueChange:f,highlight:function(e){return void 0===e&&(e=""),d.createElement(c.ZP,(0,n.Z)({},c.lG,{theme:b,code:e,language:"json"}),(e=>{let{className:a,style:t,tokens:i,getLineProps:s,getTokenProps:o}=e;return d.createElement("div",{className:u.Code},i.map(((e,a)=>d.createElement("div",(0,n.Z)({key:a},s({line:e,key:a}),{className:u.Line}),d.createElement("span",{className:u.LineContent},e.map(((e,a)=>d.createElement("span",(0,n.Z)({key:a},o({token:e,key:a}))))))))))}))},disabled:s,ignoreTabKey:!0,padding:10,style:{...b.plain,overflow:"auto"},className:u.Editor})))}function p(e){let{children:a,actions:t=[],status:n}=e;return d.createElement("div",{className:u.Header,"data-status":n},d.createElement("span",null,a),d.createElement("span",{className:u.Actions},t.map(((e,a)=>{let{title:t,onClick:n,Component:i=t}=e;return d.createElement("button",{className:u.HeaderButton,key:a+":"+t,title:t,onClick:n},i)}))))}var b=t(195);const m="overlayHeaderButton_IGf5";const h=function(e,a){const t=(0,d.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[i,s]=(0,d.useReducer)(((e,a)=>{switch(a.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:a.payload,loading:!1};case"error":return{...n,error:a.payload,loading:!1};default:return e}}),n);return{...i,fetchData:async function(n,d){void 0===d&&(d={}),s({type:"loading"});try{const i=await fetch(e+(n?"/"+n:""),{...a,...d});if(!i.ok){let e,a,t;try{t=JSON.parse(await i.text()),e=await i.json(),a=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(a,null,2)||JSON.stringify(t,null,2)||i.statusText)}const o=await i.json();if(t.current)return;return s({type:"fetched",payload:o}),o}catch(i){if(t.current)return;return s({type:"error",payload:i.message}),null}}}};var g,_=t(7643),y=t(4672);function w(){return w=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},w.apply(this,arguments)}const x=e=>{let{title:a,titleId:t,...n}=e;return d.createElement("svg",w({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?d.createElement("title",{id:t},a):null,g||(g=d.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var v;function k(){return k=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},k.apply(this,arguments)}const T=e=>{let{title:a,titleId:t,...n}=e;return d.createElement("svg",k({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?d.createElement("title",{id:t},a):null,v||(v=d.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function N(e){let{req:a,res:t,interactive:n,endpoint:i}=e;const[s,o]=(0,d.useState)(P(a.body)),[r,c]=(0,d.useState)(a.query),[l,u]=(0,d.useState)(A(t.body)),p="string"==typeof a.body&&0==a.body.indexOf("query"),{data:g,error:w,loading:v,fetchData:k}=h(i,{method:a.method,headers:{...a.headers,"Content-Type":p?"application/graphql":"application/json"},body:P(a.body)}),[N,q]=(0,d.useState)(null);(0,d.useEffect)((()=>{v?q("LOADING"):w||null!=g&&g.error?q("ERROR"):g&&q("SUCCESS")}),[g,w,v]);const S=[n?{title:"Run request",onClick:async()=>{const e=await k(r,{body:s});e&&u(A(e))},Component:d.createElement(d.Fragment,null,d.createElement(x,null)," Run")}:null,{title:"Copy",onClick:()=>(0,b.Z)(s),Component:d.createElement(y.Z,{code:"",className:m})},n?{title:"Reset",onClick:()=>{q(null),c(a.query),o(P(a.body)),u(A(t.body))},Component:d.createElement(T,null)}:null].filter((e=>!!e));return d.createElement(d.Fragment,null,d.createElement(f,{header:"GET"===a.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:S,disabled:!n,onValueChange:e=>{n&&("GET"===a.method?c(e):"POST"===a.method&&o(e))}},"GET"===a.method?r:s),d.createElement(_.Z,{title:N?"Response":"Example Response",language:"json"},w?""+w:l))}function A(e){return JSON.stringify(e,null,2)}function P(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const q="heading_REER";var S=t(9960),F=t(3905);const E={toc:[]};function L(e){let{components:a,...t}=e;return(0,F.kt)("wrapper",(0,n.Z)({},E,t,{components:a,mdxType:"MDXLayout"}),(0,F.kt)("details",{open:t.accordionOpen?"open":void 0},(0,F.kt)("summary",null,(0,F.kt)("span",{className:"open"},"Specification"),(0,F.kt)("span",{className:"closed"},"View Specification")),(0,F.kt)(i.D,{mdxType:"ReactMarkdown"},t.details)))}function C(e){let{name:a,content:t="",interactive:n,request:s,accordionOpen:o=!1,response:r,endpoint:c}=e;["Rewards (by epoch)","Rewards (daily)"].includes(a)&&(s.body={...s.body,start_time:new Date(Date.now()-("Rewards (by epoch)"===a?1728e5:864e5)).toISOString().split("T")[0],end_time:(new Date).toISOString().split("T")[0]});const[l,...u]=t.trim().split(/\n+/),f=u.join("\n");return d.createElement(d.Fragment,null,d.createElement("h2",{id:a.toLowerCase(),className:q,"data-method":s.method},d.createElement(S.Z,{to:"#"+a.toLowerCase()},a)),d.createElement(i.D,null,l),d.createElement(N,{req:s,res:r,interactive:n,endpoint:c}),d.createElement(L,{details:f,accordionOpen:o}),d.createElement("hr",null))}function G(e){let{network:a,methods:t,service:i,proxy:o}=e;return d.createElement(d.Fragment,null,d.createElement("h3",null,"Available Methods"),t.map(((e,t)=>d.createElement(C,(0,n.Z)({key:a+t},e,{endpoint:o+"/"+i+"/"+a,accordionOpen:"node-api"!==i})))),d.createElement(s.Z,null))}L.isMDXComponent=!0},8123:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>c,default:()=>b,frontMatter:()=>r,metadata:()=>l,toc:()=>f});var n=t(7462),d=(t(7294),t(3905)),i=t(3213),s=t(3976),o=(t(7297),t(2750));const r={title:"NEAR",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - NEAR",image:"img/logo.svg",keywords:["Staking API","NEAR"]},c="Staking API - NEAR",l={unversionedId:"api-reference/staking-api/near",id:"api-reference/staking-api/near",title:"NEAR",description:"Staking API - NEAR",source:"@site/docs/api-reference/staking-api/near.mdx",sourceDirName:"api-reference/staking-api",slug:"/api-reference/staking-api/near",permalink:"/api-reference/staking-api/near",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"NEAR",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - NEAR",image:"img/logo.svg",keywords:["Staking API","NEAR"]},sidebar:"docsSidebar"},u={},f=[],p={toc:f};function b(e){let{components:a,...t}=e;return(0,d.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,d.kt)("h1",{id:"staking-api---near"},"Staking API - NEAR"),(0,d.kt)(s.Z,{service:"staking-api",methods:[{name:"New Staking Flow"},{name:"Get Staking Flow Status"},{name:"Create Delegate Transaction"},{name:"Refresh Delegate Transaction"},{name:"Sign Delegate Transaction"},{name:"New Unstaking Flow"},{name:"Get Unstaking Flow Status"},{name:"Create Withdraw Transaction"},{name:"Sign Withdraw Transaction"},{name:"Create Undelegate Transaction"},{name:"Refresh Undelegate Transaction"},{name:"Sign Undelegate Transaction"},{name:"New Transfer Flow"},{name:"Get Transfer Flow Status"},{name:"Create Transfer Transaction"},{name:"Refresh Transfer Transaction"},{name:"Sign Transfer Transaction"}],networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"near",mdxType:"ApiReferenceNav"}),(0,d.kt)(o.ZP,{url:"https://near-slate.datahub.figment.io",network:"Near",service:"Staking API",mdxType:"MakingCalls"}),(0,d.kt)(i.S,{methods:[{name:"New Staking Flow",content:"Create a new flow with a `POST` request to `/api/v1/flows` to initiate the staking process.\n\n### Parameters\n\n*   `flow` - `object`\n    *   `network_code` - `string` Network this flow operates on (ex. near) (required)\n    *   `chain_code` - `string` Chain this flow operates on (ex. mainnet) (required)\n    *   `operation` - `string` The operation to -perform (ex. staking) (required)\n    *   `version` - `string` API version to use (ex. v1) (optional)\n\n### Response\n\n*   `id` - `string` ID of the newly created flow.\n*   `state` - `string` The current state of the flow i.e., `initialized`.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"POST",header:[],body:{flow:{network_code:"near",chain_code:"testnet",operation:"staking",version:"v1"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"New Staking Flow",status:"OK",code:200,body:{id:"d2e484b1-2933-44df-a399-6a214481b719",state:"initialized",actions:[{name:"create_delegate_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"account_balance",options:{on:"with_on_chain_validations",greater_than_or_equal_to:null}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]}],data:{delegator_address:null,delegator_pubkey:null,validator_address:null,amount:null,max_gas:null,delegate_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:19:31.113Z",updated_at:"2022-08-15T18:19:31.113Z"}}},{name:"Get Staking Flow Status",content:"Get the status of existing flow using the flow id from the previous step.\n\n### Parameters\n\n*   `flow_id` - `string` Pass the Flow ID you received in the response when creating the flow in the GET request URL, ex. `/flows/69d02e2c-bbde-4b09-bbe9-2be287a9a6de`.\n    \n\n### Response\n\n*   `id` - `string` Id of the flow.\n*   `state` - `string` The current state of the flow, i.e., `initialized`.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"GET",header:[],url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}"},interactive:!1,response:{name:"200 - initialized",status:"OK",code:200,body:{id:"d2e484b1-2933-44df-a399-6a214481b719",state:"initialized",actions:[{name:"create_delegate_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"account_balance",options:{on:"with_on_chain_validations",greater_than_or_equal_to:null}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]}],data:{delegator_address:null,delegator_pubkey:null,validator_address:null,amount:null,max_gas:null,delegate_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:19:31.113Z",updated_at:"2022-08-15T18:19:31.113Z"}}},{name:"Create Delegate Transaction",content:"After collecting the required inputs, `PUT /api/v1/flows/[:flow_id]/next` to move on to the next step in the flow.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `delegator_address` - `string` The delegating address (required).\n    *   `delegator_pubkey` - `string` The public key of the signing account (required).\n    *   `validator_address` - `string` Address of the validator you want to delegate your tokens to (required).\n    *   `amount` - `number` - The amount of NEAR to be delegated (required).\n    *   `max_gas` - `string` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` Current state of the flow i:e; `delegate_tx_signature`\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"create_delegate_tx",inputs:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25",max_gas:null,delegate_transaction:null}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}/next"},interactive:!1,response:{name:"200 - delegate_tx_signature",status:"OK",code:200,body:{id:"d2e484b1-2933-44df-a399-6a214481b719",state:"delegate_tx_signature",actions:[{name:"refresh_delegate_tx",inputs:[]},{name:"sign_delegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30815f25e9e646fd987ada2f37aa3f40096d4c606807e44c22a1afd88f44956e530100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30815f25e9e646fd987ada2f37aa3f40096d4c606807e44c22a1afd88f44956e530100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"addcd9fbe94e2b4131f9f8e007097a740dd3b6e6722c96c0a4dd006457cb4af7"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25.0",max_gas:null,delegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30815f25e9e646fd987ada2f37aa3f40096d4c606807e44c22a1afd88f44956e530100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"addcd9fbe94e2b4131f9f8e007097a740dd3b6e6722c96c0a4dd006457cb4af7",signed:null,hash:"ChgrXWwLc94HkJr9pQbVfGT1PzB82gCa6P9GNsKzcgPx",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:19:31.113Z",updated_at:"2022-08-15T18:20:07.817Z"}}},{name:"Refresh Delegate Transaction",content:"Use `refresh_delegate_tx` if you need to get a fresh version of the transaction Payload (for example, if the nonce needs to be updated).\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array` There are no inputs for this action (optional).\n    \n\n### Response\n\nThe transaction payload is refreshed.\n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"refresh_delegate_tx",inputs:null},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}/next"},interactive:!1,response:{name:"200 - delegate_tx_signature",status:"OK",code:200,body:{id:"d2e484b1-2933-44df-a399-6a214481b719",state:"delegate_tx_signature",actions:[{name:"refresh_delegate_tx",inputs:[]},{name:"sign_delegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30b18cee8fad806c8e3086535ba55c791f69e3d668c4703a50236f436734fbc4fe0100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30b18cee8fad806c8e3086535ba55c791f69e3d668c4703a50236f436734fbc4fe0100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"702327223bb044d1b094f2398da7a56d3d58b1a31536648b13d88646ab970131"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25.0",max_gas:null,delegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30b18cee8fad806c8e3086535ba55c791f69e3d668c4703a50236f436734fbc4fe0100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"702327223bb044d1b094f2398da7a56d3d58b1a31536648b13d88646ab970131",signed:null,hash:"8Yjkb81WZB4xpt5S4ijrfiC9grx9UNGMqBbhkNaB1Jpg",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:19:31.113Z",updated_at:"2022-08-15T18:20:14.764Z"}}},{name:"Sign Delegate Transaction",content:"Submit a signed transaction payload ready to be broadcast to the network.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `transaction_payload` - `string` Transaction payload can be found in the response after creating the transaction. (required). **OR**\n    *   `signatures` - `array` An array of signatures. Staking API will sign the payload if this is provided (optional).\n\n### Response\n\nThe transaction is broadcast to the network. Once it is confirmed, the staking flow is completed.\n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"sign_delegate_tx",inputs:{transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30323a4b17a3268aae11dd47cd46d80c3494e4f483806f84a458d6053d2f68da460100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b00000000004a480114169545080000000000008aa1a217ce7fe8a4c1a5178e711793f5744db875972774aa436d3c921a04223383e5203f27ecd11750b88259e17aed5bcb8a53e622e6f9a50ba7e778cc93c800"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}/next"},interactive:!1,response:{name:"200 - delegate_tx_broadcasting",status:"OK",code:200,body:{id:"9507127c-47c6-4946-aa88-74fdf4034074",state:"delegate_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-08-15T20:38:42.170Z",inputs:[]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",amount:"25.0",max_gas:null,delegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30464d9830b8e8159ca37dc73bbf56574803e5a9016b1fe6b1df035f360cbbd3360100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b0000000000b9340332b7f4ad140000000000",signing_payload:"3071c201cd1f97787bbe309215b5eaa9199758727de739af15d5a92f26d6cb97",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30323a4b17a3268aae11dd47cd46d80c3494e4f483806f84a458d6053d2f68da460100000002110000006465706f7369745f616e645f7374616b65020000007b7d00e057eb481b00000000004a480114169545080000000000008aa1a217ce7fe8a4c1a5178e711793f5744db875972774aa436d3c921a04223383e5203f27ecd11750b88259e17aed5bcb8a53e622e6f9a50ba7e778cc93c800",hash:"4G7BJ7wufmyULMXYJcKuS3YrUC2eMPG4atfZ1sYAjCJr",status:null,error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T20:37:22.431Z",updated_at:"2022-08-15T20:37:41.825Z"}}},{name:"New Unstaking Flow",content:"Create a new flow with `POST /api/v1/flows` to initiate the unstaking process.\n\n### **Parameters**\n\n*   `flow` - `object`\n    *   `network_code` - `string` Network this flow operates on (required).\n    *   `chain_code` - `string` Chain this flow operates on (required).\n    *   `operation` `string` The operation to perform (required).\n    *   `version` - `string` API version to use (optional).\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` The current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"POST",header:[],body:{flow:{network_code:"near",chain_code:"testnet",operation:"unstaking",version:"v1"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"200 - initialized",status:"OK",code:200,body:{id:"103a6e83-678c-4852-93f8-084ce94cd0c8",state:"initialized",actions:[{name:"create_withdraw_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"withdraw_amount",display:"Withdraw Amount",description:"",type:"decimal",validations:[{type:"presence",options:{unless:"withdraw_maximum"}},{type:"numericality",options:{unless:"withdraw_maximum",greater_than:0}},{type:"withdrawal_availability",options:{on:"with_on_chain_validations"}},{type:"withdrawal_balance",options:{unless:!0,on:"with_on_chain_validations"}}]},{name:"withdraw_maximum",display:"Withdraw Maximum",description:"",type:"boolean",validations:[]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]},{name:"create_undelegate_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"undelegate_amount",display:"Undelegate Amount",description:"",type:"decimal",validations:[{type:"presence",options:{unless:"undelegate_maximum"}},{type:"numericality",options:{unless:"undelegate_maximum",greater_than:0}},{type:"staked_balance",options:{unless:!0,on:"with_on_chain_validations"}}]},{name:"undelegate_maximum",display:"Undelegate Maximum",description:"",type:"boolean",validations:[]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]}],data:{delegator_address:null,delegator_pubkey:null,validator_address:null,max_gas:null,undelegate_amount:null,undelegate_maximum:null,undelegate_transaction:null,estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:21:04.272Z",updated_at:"2022-08-15T18:21:04.272Z"}}},{name:"Get Unstaking Flow Status",content:"Get the status of the existing flow using the flow id from the previous step.\n\n### Parameters\n\n*   `flow_id` - `string` Pass the Flow ID you received in the response when creating the flow in the GET request URL.\n    \n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` The current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"GET",header:[],url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}"},interactive:!1,response:{name:"200 - initialized",status:"OK",code:200,body:{id:"103a6e83-678c-4852-93f8-084ce94cd0c8",state:"initialized",actions:[{name:"create_withdraw_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"withdraw_amount",display:"Withdraw Amount",description:"",type:"decimal",validations:[{type:"presence",options:{unless:"withdraw_maximum"}},{type:"numericality",options:{unless:"withdraw_maximum",greater_than:0}},{type:"withdrawal_availability",options:{on:"with_on_chain_validations"}},{type:"withdrawal_balance",options:{unless:!0,on:"with_on_chain_validations"}}]},{name:"withdraw_maximum",display:"Withdraw Maximum",description:"",type:"boolean",validations:[]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]},{name:"create_undelegate_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"delegator_pubkey",display:"Delegator Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"undelegate_amount",display:"Undelegate Amount",description:"",type:"decimal",validations:[{type:"presence",options:{unless:"undelegate_maximum"}},{type:"numericality",options:{unless:"undelegate_maximum",greater_than:0}},{type:"staked_balance",options:{unless:!0,on:"with_on_chain_validations"}}]},{name:"undelegate_maximum",display:"Undelegate Maximum",description:"",type:"boolean",validations:[]},{name:"max_gas",display:"Max Gas",description:"",type:"decimal",validations:[]}]}],data:{delegator_address:null,delegator_pubkey:null,validator_address:null,max_gas:null,undelegate_amount:null,undelegate_maximum:null,undelegate_transaction:null,estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:21:04.272Z",updated_at:"2022-08-15T18:21:04.272Z"}}},{name:"Create Withdraw Transaction",content:"After collecting the required Inputs, `PUT /api/v1/flows/[:flow_id]/next` to move on to the next step in the flow.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `delegator_address` - `string` The delegator address (required).\n    *   `delegator_pubkey` - `string` The pubkey of the signing account (required).\n    *   `validator_address` - `string` Validator address from which NEAR will be un-delegated (required).\n    *   `withdraw_amount` - `number` The amount of NEAR to be withdrawn (required).\n    *   `withdraw_maximum` - `boolean` Set to `true` if you wish to withdraw the full available balance without needing to know the exact available balance. (optional).\n    *   `max_gas` - `number` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"create_withdraw_tx",inputs:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",withdraw_amount:"25",withdraw_maximum:!0,max_gas:null}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}/next"},interactive:!1,response:{name:"create_withdraw_tx",status:"OK",code:200,body:{id:"103a6e83-678c-4852-93f8-084ce94cd0c8",state:"withdraw_tx_signature",actions:[{name:"refresh_withdraw_tx",inputs:[]},{name:"sign_withdraw_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ca4381aa39b90e7ab34734477e2adca3e94353ce96baf3d9bae5398bd8d2a2d01000000020c00000077697468647261775f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ca4381aa39b90e7ab34734477e2adca3e94353ce96baf3d9bae5398bd8d2a2d01000000020c00000077697468647261775f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000",signing_payload:"c9247712255a54491c192d85bff57cd180a52d98a259f9d7dd8856f9505d18c3"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:null,undelegate_maximum:null,undelegate_transaction:null,estimated_inactive_at:null,withdraw_amount:"25.0",withdraw_maximum:!0,withdraw_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d309ca4381aa39b90e7ab34734477e2adca3e94353ce96baf3d9bae5398bd8d2a2d01000000020c00000077697468647261775f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000",signing_payload:"c9247712255a54491c192d85bff57cd180a52d98a259f9d7dd8856f9505d18c3",signed:null,hash:"EYBCSLfBk3qbXoomhbH3ay27pTcuzhuV4fVWnubeaHB8",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:21:04.272Z",updated_at:"2022-08-15T18:21:17.464Z"}}},{name:"Sign Withdraw Transaction",content:"After collecting the required Inputs, `PUT /api/v1/flows/[:flow_id]/next` to move on to the next step in the flow.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `delegator_address` - `string` The delegator address (required).\n    *   `delegator_pubkey` - `string` The pubkey of the signing account (required).\n    *   `validator_address` - `string` Validator address from which NEAR will be un-delegated (required).\n    *   `withdraw_amount` - `number` The amount of NEAR to be withdrawn (required).\n    *   `withdraw_maximum` - `boolean` Set to `true` if you wish to withdraw the full available balance without needing to know the exact available balance. (optional).\n    *   `max_gas` - `number` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"sign_withdraw_tx",inputs:{transaction_payload:null,signatures:[]}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearStakingFlowId}}/next"},interactive:!1,response:{name:"422 - payload_or_signatures_missing",status:"Unprocessable Entity",code:422,body:{code:"invalid",message:"Request could not be processed due to validation errors!",errors:{base:[{code:"payload_or_signatures_missing",message:"missing signed transaction payload or sigantures",context:{signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"]}}]}}}},{name:"Create Undelegate Transaction",content:"After collecting the required Inputs, `PUT /api/v1/flows/[:flow_id]/next` to move on to the next step in the flow.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `delegator_address` - `string` The delegator address (required).\n    *   `delegator_pubkey` - `string` The pubkey of the signing account (required).\n    *   `validator_address` - `string` Validator address from which NEAR will be un-delegated (required).\n    *   `undelegate_amount` - `number` The amount of NEAR to be un-delegated (required).\n    *   `undelegate_maximum` - `boolean` Set to `true` if you wish to unbond the full delegated balance without needing to know the exact delegated balance (optional).\n    *   `max_gas` - `null` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"create_undelegate_tx",inputs:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",undelegate_amount:"25",undelegate_maximum:!0,max_gas:null,undelegate_transaction:null}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}/next"},interactive:!1,response:{name:"200 - create_undelegate_tx",status:"OK",code:200,body:{id:"fd01dd63-a5d3-4ffa-9600-c8eff93342a4",state:"undelegate_tx_signature",actions:[{name:"refresh_undelegate_tx",inputs:[]},{name:"sign_undelegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30d7f102962cdd244d2b92fcd86828bd2a8542478658a69e98a862dbd235fd561801000000020b000000756e7374616b655f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30d7f102962cdd244d2b92fcd86828bd2a8542478658a69e98a862dbd235fd561801000000020b000000756e7374616b655f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000",signing_payload:"db2b18daa4f2144b0d4a73c9d7b1be7bcfeab56eb117afbb716a650775e5deac"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:!0,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30d7f102962cdd244d2b92fcd86828bd2a8542478658a69e98a862dbd235fd561801000000020b000000756e7374616b655f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000",signing_payload:"db2b18daa4f2144b0d4a73c9d7b1be7bcfeab56eb117afbb716a650775e5deac",signed:null,hash:"FkYQGGii9fvQxfqhjJGWsLV7uG51RamWXBMtGLbAKLAP",status:null,error:null,signatures:null},estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:24:50.723Z",updated_at:"2022-08-15T18:24:58.827Z"}}},{name:"Refresh Undelegate Transaction",content:"Use this action if you need to get a fresh version of the transaction payload (i.e., if the nonce needs to be updated).\n\n### Parameters\n\n*   `name` - `string` name of the action to execute (i.e., `refresh_undelegate_tx`)\n*   `inputs` - `array` There are no inputs for this action (optional).\n    \n\n### Response\n\n*   `id` - `string` Id of the flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"refresh_undelegate_tx",inputs:{}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}/next"},interactive:!1,response:{name:"refresh_undelegate_tx",status:"OK",code:200,body:{id:"fd01dd63-a5d3-4ffa-9600-c8eff93342a4",state:"undelegate_tx_signature",actions:[{name:"refresh_undelegate_tx",inputs:[]},{name:"sign_undelegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30dc0c35677c7c8ec3b3df020697959b13705a2ad93b0f2d1909be4a48843d693301000000020b000000756e7374616b655f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30dc0c35677c7c8ec3b3df020697959b13705a2ad93b0f2d1909be4a48843d693301000000020b000000756e7374616b655f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000",signing_payload:"e500cc97a424a9423771d238c7c76cc2983591fd1052833e5b3f37aab4575e9f"}]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"25.0",undelegate_maximum:!0,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30dc0c35677c7c8ec3b3df020697959b13705a2ad93b0f2d1909be4a48843d693301000000020b000000756e7374616b655f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000",signing_payload:"e500cc97a424a9423771d238c7c76cc2983591fd1052833e5b3f37aab4575e9f",signed:null,hash:"GQw537dHhYthGvngXmge7p1Juq7H6gGwDDLd9ptxRV9G",status:null,error:null,signatures:null},estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:24:50.723Z",updated_at:"2022-08-15T18:25:25.836Z"}}},{name:"Sign Undelegate Transaction",content:"Submit a signed transaction payload ready to be broadcast to the network.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `transaction_payload` - `string` Transaction payload can be found in the response after creating the transaction. (required). **OR**\n    *   `signatures` - `array` An array of signatures. Staking API will sign the payload if this is provided (optional).\n\n### Response\n\nThe transaction is broadcast to the network. Once it is confirmed, the unstaking flow is completed.\n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"sign_undelegate_tx",inputs:{transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3903cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30c30f1c809a30c28077fdefdc7b0515a04ff9a8375daeb42b82fbb81858fff530010000000207000000756e7374616b65260000007b22616d6f756e74223a2232303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000005a130e9cde647e0f06bdd3375b811cd7205cea263d875b6ce96a7ab424129cb67a16f891f3b7117e3459b06b44fef34c462ecffbea74ca2450b5742ed48a770d",signatures:[]}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearUnstakingFlowId}}/next"},interactive:!1,response:{name:"200 - undelegate_tx_broadcasting",status:"OK",code:200,body:{id:"fd01dd63-a5d3-4ffa-9600-c8eff93342a4",state:"undelegate_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-08-15T21:01:57.487Z",inputs:[]}],data:{delegator_address:"slate-demo.testnet",delegator_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",validator_address:"01node.pool.f863973.m0",max_gas:null,undelegate_amount:"9.999999999999999999999996",undelegate_maximum:!0,undelegate_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30dc0c35677c7c8ec3b3df020697959b13705a2ad93b0f2d1909be4a48843d693301000000020b000000756e7374616b655f616c6c020000007b7d00e057eb481b000000000000000000000000000000000000",signing_payload:"e500cc97a424a9423771d238c7c76cc2983591fd1052833e5b3f37aab4575e9f",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3903cc1038fc5700001600000030316e6f64652e706f6f6c2e663836333937332e6d30c30f1c809a30c28077fdefdc7b0515a04ff9a8375daeb42b82fbb81858fff530010000000207000000756e7374616b65260000007b22616d6f756e74223a2232303030303030303030303030303030303030303030303030227d00e057eb481b000000000000000000000000000000000000005a130e9cde647e0f06bdd3375b811cd7205cea263d875b6ce96a7ab424129cb67a16f891f3b7117e3459b06b44fef34c462ecffbea74ca2450b5742ed48a770d",hash:"GQw537dHhYthGvngXmge7p1Juq7H6gGwDDLd9ptxRV9G",status:null,error:null,signatures:[]},estimated_inactive_at:null,withdraw_amount:null,withdraw_maximum:null,withdraw_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:24:50.723Z",updated_at:"2022-08-15T21:00:57.477Z"}}},{name:"New Transfer Flow",content:"Create a new flow with `POST /api/v1/flows` to initiate the transfer process.\n\n### Parameters\n\n*   `flow` - `object`\n    *   `network_code` - `string` Network this flow operates on (required).\n    *   `chain_code` - `string` Chain this flow operates on (required).\n    *   `operation` `string` The operation to -perform (required).\n    *   `version` - `string` API version to use (optional).\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"POST",header:[],body:{flow:{network_code:"near",chain_code:"testnet",operation:"transfer",version:"v1"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"New Transfer Flow",status:"OK",code:200,body:{id:"9060d3be-af82-4413-b3a6-712eaa9edf3e",state:"initialized",actions:[{name:"create_transfer_tx",inputs:[{name:"from_account_pubkey",display:"From Account Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"from_account_address",display:"From Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"to_account_address",display:"To Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]}]}],data:{from_account_pubkey:null,from_account_address:null,to_account_address:null,amount:null,transfer_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:23:35.572Z",updated_at:"2022-08-15T18:23:35.572Z"}}},{name:"Get Transfer Flow Status",content:"Get the status of the existing flow using the `flow_id` from the previous step.\n\n### Parameters\n\n*   `flow_id` - `string` Pass the Flow ID you received in the response when creating the flow in the GET request URL.\n    \n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` The current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{method:"GET",header:[],url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearTransferFlowId}}"},interactive:!1,response:{name:"Get Transfer Flow Status",status:"OK",code:200,body:{id:"9060d3be-af82-4413-b3a6-712eaa9edf3e",state:"initialized",actions:[{name:"create_transfer_tx",inputs:[{name:"from_account_pubkey",display:"From Account Pubkey",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"from_account_address",display:"From Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"to_account_address",display:"To Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]}]}],data:{from_account_pubkey:null,from_account_address:null,to_account_address:null,amount:null,transfer_transaction:null},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:23:35.572Z",updated_at:"2022-08-15T18:23:35.572Z"}}},{name:"Create Transfer Transaction",content:"After collecting the required Inputs, `PUT /api/v1/flows/[:flow_id]/next` to move on to the next step in the flow.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute i:e; `create_transfer_tx`\n*   `inputs` - `array`\n    *   `from_account_pubkey` - `string` The account that will sign the transaction (required).\n    *   `from_account_address` - `string` the address which NEAR will be transferred from (required).\n    *   `to_account_address` - `string` The address to which NEAR will be transferred (required).\n    *   `amount` - `number` The amount of NEAR to be transferred (required).\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"create_transfer_tx",inputs:{from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",from_account_address:"slate-demo.testnet",to_account_address:"sliders-and-bacon.testnet",amount:"25"}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearTransferFlowId}}/next"},interactive:!1,response:{name:"create_transfer_tx",status:"OK",code:200,body:{id:"9060d3be-af82-4413-b3a6-712eaa9edf3e",state:"transfer_tx_signature",actions:[{name:"refresh_transfer_tx",inputs:[]},{name:"sign_transfer_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65745ec0f801b06699a9512af05ee63c99b82428fb80badd24497a841e0b1948d2bf0100000003000000b9340332b7f4ad140000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65745ec0f801b06699a9512af05ee63c99b82428fb80badd24497a841e0b1948d2bf0100000003000000b9340332b7f4ad140000000000",signing_payload:"8e935154353e34c0a9ad9200b5bef7ddc0ece5c354561c3b319fb4ae37fe0ecc"}]}],data:{from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",from_account_address:"slate-demo.testnet",to_account_address:"sliders-and-bacon.testnet",amount:"25.0",transfer_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65745ec0f801b06699a9512af05ee63c99b82428fb80badd24497a841e0b1948d2bf0100000003000000b9340332b7f4ad140000000000",signing_payload:"8e935154353e34c0a9ad9200b5bef7ddc0ece5c354561c3b319fb4ae37fe0ecc",signed:null,hash:"AbZBXtMkf2uUUvGvgPU3rCjY9mbgPQ3CPfrLUwqYhig3",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:23:35.572Z",updated_at:"2022-08-15T18:23:54.536Z"}}},{name:"Refresh Transfer Transaction",content:"Use this action if you need to get a fresh version of the transaction payload (i.e., if the nonce needs to be updated)\n\n### Parameters\n\n*   `name` - `string` name of the action to execute (i.e., `refresh_transfer_tx`)\n*   `inputs` - `array` There are no inputs for this action (optional).\n    \n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"refresh_transfer_tx",inputs:{}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearTransferFlowId}}/next"},interactive:!1,response:{name:"refresh_transfer_tx",status:"OK",code:200,body:{id:"9060d3be-af82-4413-b3a6-712eaa9edf3e",state:"transfer_tx_signature",actions:[{name:"refresh_transfer_tx",inputs:[]},{name:"sign_transfer_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65746e56074031708fb86466378ce8f7bfa63f7867bd6e516847313676d3eacb2cbb0100000003000000b9340332b7f4ad140000000000"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY"],transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65746e56074031708fb86466378ce8f7bfa63f7867bd6e516847313676d3eacb2cbb0100000003000000b9340332b7f4ad140000000000",signing_payload:"76fb4571e8d2c3f0d48703e877e75b99bb3eb153922cbd6823e7ec69b79386ec"}]}],data:{from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",from_account_address:"slate-demo.testnet",to_account_address:"sliders-and-bacon.testnet",amount:"25.0",transfer_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65746e56074031708fb86466378ce8f7bfa63f7867bd6e516847313676d3eacb2cbb0100000003000000b9340332b7f4ad140000000000",signing_payload:"76fb4571e8d2c3f0d48703e877e75b99bb3eb153922cbd6823e7ec69b79386ec",signed:null,hash:"91TLNJr9onQELfGQWQtn6ziy74ucaJ7fkRPDSSzwjZEj",status:null,error:null,signatures:null}},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:23:35.572Z",updated_at:"2022-08-15T18:24:01.767Z"}}},{name:"Sign Transfer Transaction",content:"Submit a signed transaction payload ready to be broadcast to the network.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `transaction_payload` - `string` Transaction payload can be found in the response after creating the transaction. (required). **OR**\n    *   `signatures` - `array` An array of signatures. Staking API will sign the payload if this is provided (optional).\n\n### Response\n\nThe transaction is broadcast to the network. Once it is confirmed, the transfer flow is completed.\n\n* * *",request:{auth:{type:"noauth"},method:"PUT",header:[],body:{name:"sign_transfer_tx",inputs:{transaction_payload:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3902cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65748c904f9a33447c07e97c62d3f5a8f3856daca7fd2cee3574b8de1f2cdd91821f0100000003000000a1edccce1bc2d300000000000000917149ee9813d524118ca85b7af5748428aa5bc8ff56918c00edaec682d9993684cc2408b7c098186ee5892eac993c8ae11b199f31f606ae6c0227e84b99b406",signatures:[]}},url:"https://near-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{nearTransferFlowId}}/next"},interactive:!1,response:{name:"200 - transfer_tx_broadcasting",status:"OK",code:200,body:{id:"9060d3be-af82-4413-b3a6-712eaa9edf3e",state:"transfer_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-08-15T20:58:43.422Z",inputs:[]}],data:{from_account_pubkey:"ed25519:5QA46X6NkNmsFdu9xWVBaLNowh9gGeF1c5r9u6NcxaLY",from_account_address:"slate-demo.testnet",to_account_address:"sliders-and-bacon.testnet",amount:"25.0",transfer_transaction:{raw:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3901cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65746e56074031708fb86466378ce8f7bfa63f7867bd6e516847313676d3eacb2cbb0100000003000000b9340332b7f4ad140000000000",signing_payload:"76fb4571e8d2c3f0d48703e877e75b99bb3eb153922cbd6823e7ec69b79386ec",signed:"12000000736c6174652d64656d6f2e746573746e657400415d57cdf21d28e35e0cfa864e895c18b4bc6a711642d38eb6762af81ec1cf3902cc1038fc57000019000000736c69646572732d616e642d6261636f6e2e746573746e65748c904f9a33447c07e97c62d3f5a8f3856daca7fd2cee3574b8de1f2cdd91821f0100000003000000a1edccce1bc2d300000000000000917149ee9813d524118ca85b7af5748428aa5bc8ff56918c00edaec682d9993684cc2408b7c098186ee5892eac993c8ae11b199f31f606ae6c0227e84b99b406",hash:"91TLNJr9onQELfGQWQtn6ziy74ucaJ7fkRPDSSzwjZEj",status:null,error:null,signatures:[]}},network_code:"near",chain_code:"testnet",created_at:"2022-08-15T18:23:35.572Z",updated_at:"2022-08-15T20:57:43.290Z"}}}],service:"staking-api",networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"near",proxy:"https://api-service-proxy.paulpomerleau.workers.dev",mdxType:"APIMethods"}))}b.isMDXComponent=!0}}]);