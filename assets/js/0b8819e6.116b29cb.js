"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[8008],{2750:(e,a,t)=>{t.d(a,{ZP:()=>f});var n=t(7462),o=(t(7294),t(3905)),s=t(5488),i=t(5162),d=t(7643);const r={toc:[{value:"Authentication",id:"authentication",level:3}]};function f(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},r,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"authentication"},"Authentication"),(0,o.kt)("div",null,"API calls require authentication with API key via ",(0,o.kt)("code",null,"Authorization")," ","request header or ",(0,o.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,o.kt)("strong",null,t.network," ",t.service)," ","endpoint, hosted at ",(0,o.kt)("code",null,t.url),(0,o.kt)("br",null),(0,o.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,o.kt)(s.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(i.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(i.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,o.kt)(i.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`))))}f.isMDXComponent=!0},3976:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(7294),o=t(6550);function s(e){let{network:a,networks:t,methods:s,service:i}=e;const d=(0,o.TH)(),r=(0,o.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:a,onChange:e=>{r.push(d.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},t.map((e=>n.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:d.hash.replace("#","")||"",onChange:e=>{r.push(`#${e.target.value}`)}},s.map((e=>n.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},7297:(e,a,t)=>{t.d(a,{Z:()=>o});var n=t(7294);function o(e){let{network:a,service:t}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=a;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=t.label,n.querySelector(".breadcrumbs__link").href=t.link,e.insertAdjacentElement("beforebegin",n)}),[a]),n.createElement(n.Fragment,null)}},3213:(e,a,t)=>{t.d(a,{S:()=>B});var n=t(7462),o=t(7294),s=t(8538),i=t(7748),d=t(460),r=t.n(d),f=t(3746),c=t(6412);const l={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function b(e){let{children:a="",header:t,actions:s,disabled:i=!1,status:d,onValueChange:b}=e;const p=(0,c.p)(),g=(0,o.useRef)(null);(0,o.useEffect)((()=>{var e;const a=null==(e=g.current)?void 0:e.querySelector("textarea"),t=e=>{const a=e.target;a.style.width=a.scrollWidth+"px"};return a.addEventListener("input",t),()=>a.removeEventListener("input",t)}),[]);return o.createElement("div",{ref:g},o.createElement(u,{actions:s,status:d},t),o.createElement("div",{className:l.Container},o.createElement(r(),{value:a,onValueChange:b,highlight:function(e){return void 0===e&&(e=""),o.createElement(f.ZP,(0,n.Z)({},f.lG,{theme:p,code:e,language:"json"}),(e=>{let{className:a,style:t,tokens:s,getLineProps:i,getTokenProps:d}=e;return o.createElement("div",{className:l.Code},s.map(((e,a)=>o.createElement("div",(0,n.Z)({key:a},i({line:e,key:a}),{className:l.Line}),o.createElement("span",{className:l.LineContent},e.map(((e,a)=>o.createElement("span",(0,n.Z)({key:a},d({token:e,key:a}))))))))))}))},disabled:i,ignoreTabKey:!0,padding:10,style:{...p.plain,overflow:"auto"},className:l.Editor})))}function u(e){let{children:a,actions:t=[],status:n}=e;return o.createElement("div",{className:l.Header,"data-status":n},o.createElement("span",null,a),o.createElement("span",{className:l.Actions},t.map(((e,a)=>{let{title:t,onClick:n,Component:s=t}=e;return o.createElement("button",{className:l.HeaderButton,key:`${a}:${t}`,title:t,onClick:n},s)}))))}var p=t(195);const g="overlayHeaderButton_IGf5";const m=function(e,a){const t=(0,o.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[s,i]=(0,o.useReducer)(((e,a)=>{switch(a.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:a.payload,loading:!1};case"error":return{...n,error:a.payload,loading:!1};default:return e}}),n);return{...s,fetchData:async function(n,o){void 0===o&&(o={}),i({type:"loading"});try{const s=await fetch(e+(n?`/${n}`:""),{...a,...o});if(!s.ok){let e,a,t;try{t=JSON.parse(await s.text()),e=await s.json(),a=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(a,null,2)||JSON.stringify(t,null,2)||s.statusText)}const d=await s.json();if(t.current)return;return i({type:"fetched",payload:d}),d}catch(s){if(t.current)return;return i({type:"error",payload:s.message}),null}}}};var h,_=t(7643),y=t(4672);function w(){return w=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},w.apply(this,arguments)}const x=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",w({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,h||(h=o.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var v;function T(){return T=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},T.apply(this,arguments)}const k=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",T({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,v||(v=o.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function C(e){let{req:a,res:t,interactive:n,endpoint:s}=e;const[i,d]=(0,o.useState)(A(a.body)),[r,f]=(0,o.useState)(a.query),[c,l]=(0,o.useState)(S(t.body)),u="string"==typeof a.body&&0==a.body.indexOf("query"),{data:h,error:w,loading:v,fetchData:T}=m(s,{method:a.method,headers:{...a.headers,"Content-Type":u?"application/graphql":"application/json"},body:A(a.body)}),[C,E]=(0,o.useState)(null);(0,o.useEffect)((()=>{v?E("LOADING"):w||null!=h&&h.error?E("ERROR"):h&&E("SUCCESS")}),[h,w,v]);const P=[n?{title:"Run request",onClick:async()=>{const e=await T(r,{body:i});e&&l(S(e))},Component:o.createElement(o.Fragment,null,o.createElement(x,null)," Run")}:null,{title:"Copy",onClick:()=>(0,p.Z)(i),Component:o.createElement(y.Z,{code:"",className:g})},n?{title:"Reset",onClick:()=>{E(null),f(a.query),d(A(a.body)),l(S(t.body))},Component:o.createElement(k,null)}:null].filter((e=>!!e));return o.createElement(o.Fragment,null,o.createElement(b,{header:"GET"===a.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:P,disabled:!n,onValueChange:e=>{n&&("GET"===a.method?f(e):"POST"===a.method&&d(e))}},"GET"===a.method?r:i),o.createElement(_.Z,{title:C?"Response":"Example Response",language:"json"},w?`${w}`:c))}function S(e){return JSON.stringify(e,null,2)}function A(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const E="heading_REER";var P=t(9960),q=t(3905);const F={toc:[]};function I(e){let{components:a,...t}=e;return(0,q.kt)("wrapper",(0,n.Z)({},F,t,{components:a,mdxType:"MDXLayout"}),(0,q.kt)("details",{open:t.accordionOpen?"open":void 0},(0,q.kt)("summary",null,(0,q.kt)("span",{className:"open"},"Specification"),(0,q.kt)("span",{className:"closed"},"View Specification")),(0,q.kt)(s.D,{mdxType:"ReactMarkdown"},t.details)))}function Z(e){let{name:a,content:t="",interactive:n,request:i,accordionOpen:d=!1,response:r,endpoint:f}=e;["Rewards (by epoch)","Rewards (daily)"].includes(a)&&(i.body={...i.body,start_time:new Date(Date.now()-("Rewards (by epoch)"===a?1728e5:864e5)).toISOString().split("T")[0],end_time:(new Date).toISOString().split("T")[0]});const[c,...l]=t.trim().split(/\n+/),b=l.join("\n");return o.createElement(o.Fragment,null,o.createElement("h2",{id:a.toLowerCase(),className:E,"data-method":i.method},o.createElement(P.Z,{to:`#${a.toLowerCase()}`},a)),o.createElement(s.D,null,c),o.createElement(C,{req:i,res:r,interactive:n,endpoint:f}),o.createElement(I,{details:b,accordionOpen:d}),o.createElement("hr",null))}function B(e){let{network:a,methods:t,service:s,proxy:d}=e;return o.createElement(o.Fragment,null,o.createElement("h3",null,"Available Methods"),t.map(((e,t)=>o.createElement(Z,(0,n.Z)({key:a+t},e,{endpoint:`${d}/${s}/${a}`,accordionOpen:"node-api"!==s})))),o.createElement(i.Z,null))}I.isMDXComponent=!0},9338:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>f,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>b});var n=t(7462),o=(t(7294),t(3905)),s=t(3213),i=t(3976),d=(t(7297),t(2750));const r={title:"Polygon",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Polygon",image:"img/logo.svg",keywords:["Staking API","Polygon"]},f="Staking API - Polygon",c={unversionedId:"api-reference/staking-api/polygon",id:"api-reference/staking-api/polygon",title:"Polygon",description:"Staking API - Polygon",source:"@site/docs/api-reference/staking-api/polygon.mdx",sourceDirName:"api-reference/staking-api",slug:"/api-reference/staking-api/polygon",permalink:"/api-reference/staking-api/polygon",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Polygon",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Polygon",image:"img/logo.svg",keywords:["Staking API","Polygon"]},sidebar:"docsSidebar"},l={},b=[],u={toc:b};function p(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"staking-api---polygon"},"Staking API - Polygon"),(0,o.kt)(i.Z,{service:"staking-api",methods:[{name:"Create New Delegation Flow"},{name:"Submit Staking Data"},{name:"Submit Staking Allowance Data"},{name:"Submit a Signed Allowance Transaction for Broadcast"},{name:"Submit Delegate Transaction Data"},{name:"Submit a Signed Delegate Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Create New Undelegation Flow"},{name:"Submit Unbonding Data"},{name:"Submit a Signed Unbonding Transaction for Broadcast"},{name:"Submit Claim Transaction Data"},{name:"Submit Signed Claim Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Create New Claim Rewards Flow"},{name:"Submit Claim Rewards Data"},{name:"Submit a Signed Claim Rewards Transaction for Broadcast"},{name:"Get Flow Status"}],networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"polygon",mdxType:"ApiReferenceNav"}),(0,o.kt)(d.ZP,{url:"https://polygon-slate.datahub.figment.io",network:"Polygon",service:"Staking API",mdxType:"MakingCalls"}),(0,o.kt)(s.S,{methods:[{name:"Create New Delegation Flow",content:"To initiate the delegation process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network on which this flow operates (ex. `polygon`) (required).\n  - `chain_code` &mdash; `string` Chain on which this flow operates (ex. `mainnet` , `testnet`) (required).\n  - `operation` `string` The operation to perform (ex. `staking`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the newly created flow.\n- `state` &mdash; `string` The current state of the flow.\n\nThe response indicates one possible action:\n\n- `assign_staking_data` &mdash; provide the funding address, validator contract address, and amount of tokens to be staked. The Staking API will check on-chain to determine if an allowance transaction is needed.\n\nThe `assign_staking_data` action indicates five fields for data collection:\n\n- `delegator_address` &mdash; The main wallet from which MATIC will originate.\n- `validator_address` &mdash; The validator smart contract address for delegation.\n- `amount` &mdash; The number of MATIC tokens to be delegated.\n- `minimum_shares_to_mint` &mdash; The minimum number of shares of the delegation pool to be minted. If the exchange rate results in fewer shares being minted, the transaction will fail.\n- `max_slippage_percentage` &mdash; The maximum slippage you are willing to accept.",request:{method:"POST",header:[],body:{flow:{network_code:"polygon",chain_code:"testnet",operation:"staking",version:"v1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Delegation Flow",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"initialized",actions:[{name:"assign_staking_data",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"precision",options:{max:18}}]},{name:"minimum_shares_to_mint",display:"Minimum Shares To Mint",description:"",type:"integer",validations:[{type:"numericality",options:{allow_nil:!0,greater_than_or_equal_to:0}}]},{name:"max_slippage_percentage",display:"Max Slippage Percentage",description:"",type:"integer",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,less_than_or_equal_to:100,greater_than_or_equal_to:0}}]}]}],data:{delegator_address:null,validator_address:null,amount:null,minimum_shares_to_mint:null,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:null,delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-06T22:57:14.491Z"}}},{name:"Submit Staking Data",content:"After creating a new staking flow, submit the staking account data. Collect the required inputs. Send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The delegating address (required).\n  - `validator_address` &mdash; `string` The address of the validator smart contract to which you want to delegate your tokens (required).\n  - `amount` &mdash; `number` &mdash; The amount of MATIC to be delegated (required).\n  - `minimum_shares_to_mint` &mdash; `string` The minimum number of shares of the delegation pool to be minted. If the exchange rate results in fewer shares being minted, the transaction will fail (optional).\n  - `max_slippage_percentage` &mdash; `number` The maximum slippage you are willing to accept (optional).\n\n### Response\n\nIn the response received from the Staking API we see one possible `action`:\n\n- `create_allowance_tx` &mdash; If an allowance transaction is needed.\n- `create_delegate_tx` &mdash; If no further allowance is needed.\n\nAssuming an allowance is needed, we will proceed with `create_allowance_transaction` which indicates two optional inputs to collect:\n\n- `gas_limit` &mdash; The gas limit for the transaction.\n- `gas_price` &mdash; The highest gas price you will pay for the transaction.",request:{method:"PUT",header:[],body:{name:"assign_staking_data",inputs:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Staking Data",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"create_allowance_tx",actions:[{name:"create_allowance_tx",inputs:[{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:null,delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:11:03.674Z"}}},{name:"Submit Staking Allowance Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `gas_limit` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n  - `gas_price` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\nIn this response you can find the unsigned, serialized transaction in `data[create_allowance_tx][raw]`.\n\nThere are two possible `actions`:\n\n- `refresh_allowance_tx` &mdash; If you need to get a fresh version of the transaction payload.\n- `sign_allowance_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n\nWe will chose `sign_allowance_tx`, so note that it indicates one Input to collect:\n\n- `transaction_payload` &mdash; the signed transaction payload ready to be broadcast to the network.\n\nMake sure to save the `transaction_payload` from this response, which is what needs to be signed in the next step.",request:{method:"PUT",header:[],body:{name:"create_allowance_tx"},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Staking Allowance Data",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"allowance_tx_signature",actions:[{name:"refresh_allowance_tx",inputs:[]},{name:"sign_allowance_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:13:12.832Z"}}},{name:"Submit a Signed Allowance Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\nWith the signed transaction provided, the Staking API will broadcast it to the network.\nAs the transaction progresses towards confirmation, the returned `state` will be either:\n\n- `allowance_tx_broadcasting` &mdash; the transaction has been broadcast but not confirmed.\n- `create_delegate_tx` &mdash; the transaction has been confirmed, ready for next step in flow.\n\nUpon finalization of the transaction, the account will be ready for the next step to submit the the delegation transaction.",request:{method:"PUT",header:[],body:{name:"sign_allowance_tx",inputs:{transaction_payload:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Allowance Transaction for Broadcast",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"allowance_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:16:44.809Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:15:43.981Z"}}},{name:"Submit Delegate Transaction Data",content:"Now that the smart contract allowance is in place, submit a delegation transaction to delegate the MATIC.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `gas_limit` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n  - `gas_price` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\nIn this response you can find the unsigned, serialized transaction in `data[create_delegate_tx][raw]`.\n\nThere are two possible `actions`:\n\n- `refresh_delegate_tx` &mdash; If you need to get a fresh version of the transaction payload.\n- `sign_delegate_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n\nWe will chose `sign_delegate_tx`, which indicates one input to collect:\n\n- `transaction_payload` &mdash; the signed transaction payload ready to be broadcast to the network.",request:{method:"PUT",header:[],body:{name:"create_delegate_tx"},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Delegate Transaction Data",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"delegate_tx_signature",actions:[{name:"refresh_delegate_tx",inputs:[]},{name:"sign_delegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:{raw:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:17:36.976Z"}}},{name:"Submit a Signed Delegate Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\nWith the signed transaction provided, the Staking API will broadcast it to the network.\nAs the transaction progresses towards confirmation, the returned `state` will be either:\n\n- `delegate_tx_broadcasting` &mdash; The transaction has been broadcast but not confirmed.\n- `completed` &mdash; The transaction has been confirmed.",request:{method:"PUT",header:[],body:{name:"sign_delegate_tx",inputs:{transaction_payload:"0x02f8b005018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c001a0424cfeb222e8dda2207cfa4e3958e252c9d5b79af6ca9e356a9f736a1de31483a03d0d9acc2cec2dca7569bdfaaf29e598a61faf7ce488de658e9af354c0d21c1b"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Delegate Transaction for Broadcast",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"delegate_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:19:52.481Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:{raw:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null,signed:"0x02f8b005018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c001a0424cfeb222e8dda2207cfa4e3958e252c9d5b79af6ca9e356a9f736a1de31483a03d0d9acc2cec2dca7569bdfaaf29e598a61faf7ce488de658e9af354c0d21c1b",hash:"0x04e8b654b128adda5a8bd648637ed5b8da157a152c2fe6fb12c99c8aa0811820",status:null,error:null,signatures:[],gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:18:52.129Z"}}},{name:"Get Flow Status",content:"To refresh the transaction state and get the latest status of the existing flow, use the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `state` &mdash; `string` The current state of the flow.\n\nThe `state` field will update from `delegate_tx_broadcasting` to `completed`.",request:{method:"GET",header:[],url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"completed",actions:[],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:{raw:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null,signed:"0x02f8b005018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c001a0424cfeb222e8dda2207cfa4e3958e252c9d5b79af6ca9e356a9f736a1de31483a03d0d9acc2cec2dca7569bdfaaf29e598a61faf7ce488de658e9af354c0d21c1b",hash:"0x04e8b654b128adda5a8bd648637ed5b8da157a152c2fe6fb12c99c8aa0811820",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:19:22.345Z"}}},{name:"Create New Undelegation Flow",content:"To initiate the undelegation process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network on which this flow operates (ex. `polygon`) (required).\n  - `chain_code` &mdash; `string` Chain on which this flow operates (ex. `testnet`) (required).\n  - `operation` `string` The operation to perform (ex. `unstaking`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the newly created flow.\n- `state` &mdash; `string` The current state of the flow.\n\nThe response indicates one possible `action`:\n\n- `create_unbond_tx`\n\nThe `create_unbond_tx` action indicates seven fields for data collection:\n\n- `delegator_address` &mdash; The delegator address.\n- `validator_address` &mdash; The validator contract address from which MATIC will be undelegated.\n- `amount` &mdash; The amount of MATIC to be undelegated.\n- `max_shares_to_burn` &mdash; The maximum number of shares of the delegation to be burned. If the exchange rate results in more shares being burned, the transaction will fail.\n- `max_slippage_percentage` &mdash; The maximum slippage you are willing to accept.\n- `gas_limit` &mdash; Adjust gas limit for the transaction.\n- `gas_price` &mdash; Adjust gas price for the transaction.",request:{method:"POST",header:[],body:{flow:{network_code:"polygon",chain_code:"testnet",operation:"unstaking",version:"v1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Undelegation Flow",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"initialized",actions:[{name:"create_unbond_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"amount",display:"Amount",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"max_shares_to_burn",display:"Max Shares To Burn",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than_or_equal_to:0}}]},{name:"max_slippage_percentage",display:"Max Slippage Percentage",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than_or_equal_to:0,less_than_or_equal_to:100}}]},{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{delegator_address:null,validator_address:null,amount:null,max_shares_to_burn:null,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,unbond_transaction:null,claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-06T23:40:33.826Z"}}},{name:"Submit Unbonding Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `validator_address` &mdash; `string` The validator smart contract address from which MATIC will be undelegated (required).\n  - `delegator_address` &mdash; `string` The delegator address (required).\n  - `amount` &mdash; `number` The amount of MATIC to be undelegated (required).\n\n### Response\n\nWe see two possible `actions`:\n\n- `refresh_unbond_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., if the nonce needs to be updated).\n- `sign_unbond_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n\nWe will choose `sign_unbond_tx`, which indicates one input to collect:\n\n- `transaction_payload` &mdash; the signed transaction payload ready to be broadcast to the network.\n\nMake sure to save the `transaction_payload` from this response, which is what needs to be signed in the next step.",request:{method:"PUT",header:[],body:{name:"create_unbond_tx",inputs:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Unbonding Data",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"unbond_tx_signature",actions:[{name:"refresh_unbond_tx",inputs:[]},{name:"sign_unbond_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-07T17:22:05.511Z"}}},{name:"Submit a Signed Unbonding Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, you will `PUT /api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\nWith the signed transaction provided, the Staking API will broadcast it to the network.\nAs the transaction progresses towards confirmation, the returned state will either:\n\n- `unbond_tx_broadcasting` &mdash; The transaction has been broadcast and is waiting for confirmation.\n- `unbonding` &mdash; The transaction has been confirmed and the delegation is unbonding.",request:{method:"PUT",header:[],body:{name:"sign_unbond_tx",inputs:{transaction_payload:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Unbonding Transaction for Broadcast",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"unbond_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:25:17.899Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-07T17:24:17.339Z"}}},{name:"Submit Claim Transaction Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `gas_limit` &mdash; `number` Adjust if you wish to limit the possible transaction fee (optional).\n  - `gas_price` &mdash; `number` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\nWe see two possible `actions`:\n\n- `refresh_claim_tx` &mdash; If you need to get a fresh version of the transaction payload (for example, if the nonce needs to be updated).\n- `sign_claim_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n\nWe will choose `sign_claim_tx`, which indicates one input to collect:\n\n- `transaction_payload` &mdash; the signed transaction payload ready to be broadcast to the network.\n\nMake sure to save the `transaction_payload` from this response, which is what needs to be signed in the next step.",request:{method:"PUT",header:[],body:{name:"create_claim_tx"},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Claim Transaction Data",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"claim_tx_signature",actions:[{name:"refresh_claim_tx",inputs:[]},{name:"sign_claim_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:{raw:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},estimated_unbonded_at:"2022-10-09T09:25:17.514Z",unbond_checkpoint:78566,unbond_nonce:1},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-11T18:11:23.081Z"}}},{name:"Submit Signed Claim Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\nWith the signed transaction provided, the Staking API will broadcast it to the network.\nAs the transaction progresses towards confirmation, the returned `state` will be either:\n\n- `claim_tx_broadcasting` &mdash; The transaction has been broadcast but not confirmed.\n- `done` &mdash; The transaction has been confirmed and the rewards have been claimed.",request:{method:"PUT",header:[],body:{name:"sign_claim_tx",inputs:{transaction_payload:"0x02f88f05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c001a0818e02361da6e36a7d0093d385d1f13b0c5e539126023f8a4175ab1a375d0723a0571fabd4f32c978e1b17585f4df52d667ca9bd824204f43db0805a291c635c46"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Claim Transaction for Broadcast",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"claim_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-11T18:14:51.766Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:{raw:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null,signed:"0x02f88f05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c001a0818e02361da6e36a7d0093d385d1f13b0c5e539126023f8a4175ab1a375d0723a0571fabd4f32c978e1b17585f4df52d667ca9bd824204f43db0805a291c635c46",hash:"0x5a565cc0002c73655cbf976fa3a04d9b9d20bc196e88f414cbdbdaed70ab7af6",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},estimated_unbonded_at:"2022-10-09T09:25:17.514Z",unbond_checkpoint:78566,unbond_nonce:1},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-11T18:13:51.472Z"}}},{name:"Get Flow Status",content:"To refresh the transaction state and get the latest status of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `state` &mdash; `string` The current state of the flow.\n\nThe `state` field will update from `claim_tx_broadcasting` to `done`.",request:{method:"GET",header:[],url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"done",actions:[],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:{raw:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null,signed:"0x02f88f05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c001a0818e02361da6e36a7d0093d385d1f13b0c5e539126023f8a4175ab1a375d0723a0571fabd4f32c978e1b17585f4df52d667ca9bd824204f43db0805a291c635c46",hash:"0x5a565cc0002c73655cbf976fa3a04d9b9d20bc196e88f414cbdbdaed70ab7af6",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},estimated_unbonded_at:"2022-10-09T09:25:17.514Z",unbond_checkpoint:78566,unbond_nonce:1},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-11T18:13:51.472Z"}}},{name:"Create New Claim Rewards Flow",content:"To claim the staking rewards with Staking API firstly we need to create a new Flow with `POST /api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `polygon`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `mainnet`, `testnet`) (required).\n  - `operation` `string` The operation to perform (ex. `claim_rewards`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the newly created flow.\n- `state` &mdash; `string` The current state of the flow.\n\nThe response indicates one possible `action`:\n\n- `create_claim_rewards_tx` -\n\nThe `create_claim_rewards_tx` action indicates four fields for data collection:\n\n- `delegator_address` &mdash; The address delegating MATIC.\n- `validator_address` &mdash; The Validator contract address to which MATIC are delegated.\n- `gas_limit` &mdash; Adjust gas limit for the claim transaction.\n- `gas_price` &mdash; Adjust gas price for the claim transaction.",request:{method:"POST",header:[],body:{flow:{network_code:"polygon",chain_code:"testnet",operation:"claim_rewards",version:"v1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Claim Rewards Flow",body:{id:"21ec6775-720c-4c58-bfd2-73275200e1d0",state:"initialized",actions:[{name:"create_claim_rewards_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{delegator_address:null,validator_address:null,claim_rewards_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-07T17:52:50.865Z",updated_at:"2022-10-07T17:52:50.865Z"}}},{name:"Submit Claim Rewards Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The address delegating MATIC (required).\n  - `validator_address` &mdash; `string` The Validator contract address to which MATIC are delegated (required).\n  - `gas_limit` &mdash; `number` Adjust gas limit for the claim transaction (optional).\n  - `gas_price` &mdash; `number` Adjust gas limit for the claim transaction (optional).\n\n### Response\n\nThe response indicates two possible `actions` :\n\n- `refresh_claim_rewards_tx` &mdash; If you need to get a fresh version of the transaction payload (for example, if the nonce needs to be updated).\n- `sign_claim_rewards_tx ` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n\nWe will choose `sign_claim_rewards_tx`, which indicates one input to collect:\n\n- `transaction_payload` &mdash; the signed transaction payload ready to be broadcast to the network.\n\nMake sure to save the `transaction_payload` from this response, which is what needs to be signed in the next step.",request:{method:"PUT",header:[],body:{name:"create_claim_rewards_tx",inputs:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonClaimRewardsFlowId}}/next"},interactive:!1,response:{name:"Submit Claim Rewards Data",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"claim_rewards_tx_signature",actions:[{name:"refresh_claim_rewards_tx",inputs:[]},{name:"sign_claim_rewards_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-07T17:22:05.511Z"}}},{name:"Submit a Signed Claim Rewards Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, you will `PUT /api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\nWith the signed transaction provided, the Staking API will broadcast it to the network.\nAs the transaction progresses towards confirmation, the returned `state`` will be either:\n\n- `claim_rewards_tx_broadcasting` &mdash; the transaction has been broadcast but not confirmed.\n- `done` &mdash; the transaction has been confirmed and the rewards are claimed.",request:{method:"PUT",header:[],body:{name:"sign_claim_rewards_tx",inputs:{transaction_payload:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonClaimRewardsFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Claim Rewards Transaction for Broadcast",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"claim_rewards_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:16:44.809Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:15:43.981Z"}}},{name:"Get Flow Status",content:"To refresh the transaction state and get the latest status of the existing flow we'll be using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `state` &mdash; `string` The current state of the flow.\n\nThe `state` field will update from `claim_rewards_tx_broadcasting` to `done`.",request:{method:"GET",header:[],url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonClaimRewardsFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"72a981d4-419b-43c2-92eb-56497f9a23f6",state:"done",actions:[],data:{delegator_address:"0xD0D77667f64CAd06a4789497065F2aaF1636Ee31",validator_address:"0x0b764b080a67f9019677Ae2c9279F52485Fd4525",claim_rewards_transaction:{raw:"0x02ec05328459682f008459693e3283024d18940b764b080a67f9019677ae2c9279f52485fd45258084c7b8981cc0",signing_payload:null,signed:"0x02f86f05328459682f008459693e3283024d18940b764b080a67f9019677ae2c9279f52485fd45258084c7b8981cc080a033ac92a662cfb3c80721dd0d1481511d492da9a608821bee6ef7c0bfa58582ffa06f4015f4f36a7f5874273ea19f6fd81f1c0d8ab952cae2720f5bce1b6f6ac05c",hash:"0x0599175dd9e839111c46aaf766fbb8f1821273e53e269a451282e2a12e3b5689",status:null,error:null,signatures:[{account_address:"0xD0D77667f64CAd06a4789497065F2aaF1636Ee31",signature:""}],gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-09-15T13:00:32.982Z",updated_at:"2022-09-15T13:10:45.368Z"}}}],service:"staking-api",networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"polygon",proxy:"https://api-service-proxy.paulpomerleau.workers.dev",mdxType:"APIMethods"}))}p.isMDXComponent=!0}}]);