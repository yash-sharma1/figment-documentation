(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[8008],{2750:(e,a,t)=>{"use strict";t.d(a,{ZP:()=>f});var n=t(7462),s=(t(7294),t(3905)),o=t(5488),i=t(5162),d=t(7643);const r={toc:[{value:"Authentication",id:"authentication",level:3}]};function f(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},r,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"authentication"},"Authentication"),(0,s.kt)("div",null,"API calls require authentication with API key via ",(0,s.kt)("code",null,"Authorization")," ","request header or ",(0,s.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,s.kt)("strong",null,t.network," ",t.service)," ","endpoint, hosted at ",(0,s.kt)("code",null,t.url),(0,s.kt)("br",null),(0,s.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,s.kt)(d.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}${t.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,s.kt)(i.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,s.kt)(d.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}/apikey/{{apikey}}${t.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,s.kt)(i.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,s.kt)(d.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}${t.route}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,s.kt)(i.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,s.kt)(d.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}/apikey/{{apikey}}${t.route}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`))))}f.isMDXComponent=!0},3976:(e,a,t)=>{"use strict";t.d(a,{Z:()=>o});var n=t(7294),s=t(6550);function o(e){let{network:a,networks:t,methods:o,service:i}=e;const d=(0,s.TH)(),r=(0,s.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:a,onChange:e=>{r.push(d.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},t.map((e=>n.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:d.hash.replace("#","")||"",onChange:e=>{r.push(`#${e.target.value}`)}},o.map((e=>n.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},7297:(e,a,t)=>{"use strict";t.d(a,{Z:()=>s});var n=t(7294);function s(e){let{network:a,service:t}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=a;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=t.label,n.querySelector(".breadcrumbs__link").href=t.link,e.insertAdjacentElement("beforebegin",n)}),[a]),n.createElement(n.Fragment,null)}},9638:(e,a,t)=>{"use strict";t.d(a,{S:()=>N});var n=t(7462),s=t(7294),o=t(8538),i=t(7748),d=t(381),r=t.n(d);const f={days:()=>({start:new Date(Date.now()-864e5).toISOString().split("T")[0],end:(new Date).toISOString().split("T")[0]}),polkadot(){const e=r()("2022-10-26","YYYY-MM-DD"),a=r()().diff(e,"days")+1,t=876+Math.ceil(1*a);return{start:t-30,end:t}},solana(){const e=Math.ceil(10.5),a=r()("2022-10-25","YYYY-MM-DD"),t=r()().diff(a,"days")+1,n=363+Math.ceil(.35*t);return{start:n-e,end:n}},near(){const e=4593.6*25,a=Math.ceil(7*e),t=r()("2022-10-25","YYYY-MM-DD"),n=r()().diff(t,"days")+1,s=76953090+Math.ceil(n*e);return{start:s-a-Math.ceil(100*e),end:s+Math.ceil(100*e)}}};var c=t(460),l=t.n(c),b=t(3746),u=t(6412);const m={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function h(e){let{children:a="",header:t,actions:o,disabled:i=!1,status:d,onValueChange:r}=e;const f=(0,u.p)(),c=(0,s.useRef)(null);(0,s.useEffect)((()=>{const e=c.current?.querySelector("textarea"),a=e=>{const a=e.target;a.style.width=a.scrollWidth+"px"};return e.addEventListener("input",a),()=>e.removeEventListener("input",a)}),[]);return s.createElement("div",{ref:c},s.createElement(p,{actions:o,status:d},t),s.createElement("div",{className:m.Container},s.createElement(l(),{value:a,onValueChange:r,highlight:function(e){return void 0===e&&(e=""),s.createElement(b.ZP,(0,n.Z)({},b.lG,{theme:f,code:e,language:"json"}),(e=>{let{className:a,style:t,tokens:o,getLineProps:i,getTokenProps:d}=e;return s.createElement("div",{className:m.Code},o.map(((e,a)=>s.createElement("div",(0,n.Z)({key:a},i({line:e,key:a}),{className:m.Line}),s.createElement("span",{className:m.LineContent},e.map(((e,a)=>s.createElement("span",(0,n.Z)({key:a},d({token:e,key:a}))))))))))}))},disabled:i,ignoreTabKey:!0,padding:10,style:{...f.plain,overflow:"auto"},className:m.Editor})))}function p(e){let{children:a,actions:t=[],status:n}=e;return s.createElement("div",{className:m.Header,"data-status":n},s.createElement("span",null,a),s.createElement("span",{className:m.Actions},t.map(((e,a)=>{let{title:t,onClick:n,Component:o=t}=e;return s.createElement("button",{className:m.HeaderButton,key:`${a}:${t}`,title:t,onClick:n},o)}))))}var g=t(195);const _="overlayHeaderButton_IGf5";const y=function(e,a){const t=(0,s.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[o,i]=(0,s.useReducer)(((e,a)=>{switch(a.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:a.payload,loading:!1};case"error":return{...n,error:a.payload,loading:!1};default:return e}}),n);return{...o,fetchData:async function(n,s){void 0===s&&(s={}),i({type:"loading"});try{const o=await fetch(e+(n?`/${n}`:""),{...a,...s});if(!o.ok){let e,a,t;try{t=JSON.parse(await o.text()),e=await o.json(),a=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(a,null,2)||JSON.stringify(t,null,2)||o.statusText)}const d=await o.json();if(t.current)return;return i({type:"fetched",payload:d}),d}catch(o){if(t.current)return;return i({type:"error",payload:o.message}),null}}}};var w,x=t(7643),v=t(4672);function T(){return T=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},T.apply(this,arguments)}const k=e=>{let{title:a,titleId:t,...n}=e;return s.createElement("svg",T({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?s.createElement("title",{id:t},a):null,w||(w=s.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var j;function C(){return C=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},C.apply(this,arguments)}const S=e=>{let{title:a,titleId:t,...n}=e;return s.createElement("svg",C({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?s.createElement("title",{id:t},a):null,j||(j=s.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function E(e){let{req:a,res:t,interactive:n,endpoint:o}=e;const[i,d]=(0,s.useState)(P(a.body)),[r,f]=(0,s.useState)(a.query),[c,l]=(0,s.useState)(A(t.body)),b="string"==typeof a.body&&0==a.body.indexOf("query"),{data:u,error:m,loading:p,fetchData:w}=y(o,{method:a.method,headers:{...a.headers,"Content-Type":b?"application/graphql":"application/json"},body:P(a.body)}),[T,j]=(0,s.useState)(null);(0,s.useEffect)((()=>{p?j("LOADING"):m||u?.error?j("ERROR"):u&&j("SUCCESS")}),[u,m,p]);const C=[n?{title:"Run request",onClick:async()=>{const e=await w(r,{body:i});e&&l(A(e))},Component:s.createElement(s.Fragment,null,s.createElement(k,null)," Run")}:null,{title:"Copy",onClick:()=>(0,g.Z)(i),Component:s.createElement(v.Z,{code:"",className:_})},n?{title:"Reset",onClick:()=>{j(null),f(a.query),d(P(a.body)),l(A(t.body))},Component:s.createElement(S,null)}:null].filter((e=>!!e));return s.createElement(s.Fragment,null,s.createElement(h,{header:"GET"===a.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:C,disabled:!n,onValueChange:e=>{n&&("GET"===a.method?f(e):"POST"===a.method&&d(e))}},"GET"===a.method?r:i),s.createElement(x.Z,{title:T?"Response":"Example Response",language:"json"},m?`${m}`:c))}function A(e){return JSON.stringify(e,null,2)}function P(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const I="heading_REER";var q=t(9960),D=t(3905);const F={toc:[]};function Z(e){let{components:a,...t}=e;return(0,D.kt)("wrapper",(0,n.Z)({},F,t,{components:a,mdxType:"MDXLayout"}),(0,D.kt)("details",{open:t.accordionOpen?"open":void 0},(0,D.kt)("summary",null,(0,D.kt)("span",{className:"open"},"Specification"),(0,D.kt)("span",{className:"closed"},"View Specification")),(0,D.kt)(o.D,{mdxType:"ReactMarkdown"},t.details)))}function B(e){let{name:a,content:t="",interactive:n,network:i,request:d,accordionOpen:r=!1,response:c,endpoint:l}=e;const b=l.includes("rewards-api"),u=["by day","account","address"].find((e=>a.includes(e))),m=["by epoch","by era"].find((e=>a.includes(e)))||a.startsWith("SOL");if(b&&m){const{start:e,end:a}=f[i]();d.body={...d.body,start:e,end:a}}else if(b&&u){const{start:e,end:a}=f.days();d.body={...d.body,start:e,end:a}}const[h,...p]=t.trim().split(/\n+/),g=p.join("\n");return s.createElement(s.Fragment,null,s.createElement("h2",{id:a.toLowerCase(),className:I,"data-method":d.method},s.createElement(q.Z,{to:`#${a.toLowerCase()}`},a)),s.createElement(o.D,null,h),s.createElement(E,{req:d,res:c,interactive:n,endpoint:l}),s.createElement(Z,{details:g,accordionOpen:r}),s.createElement("hr",null))}function N(e){let{network:a,methods:t,service:o,proxy:d}=e;return s.createElement(s.Fragment,null,s.createElement("h3",null,"Available Methods"),t.map(((e,t)=>s.createElement(B,(0,n.Z)({key:a+t},e,{network:a,endpoint:`${d}/${o}/${a}`,accordionOpen:"node-api"!==o})))),s.createElement(i.Z,null))}Z.isMDXComponent=!0},9338:(e,a,t)=>{"use strict";t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>f,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>b});var n=t(7462),s=(t(7294),t(3905)),o=t(9638),i=t(3976),d=(t(7297),t(2750));const r={title:"Polygon",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Polygon",image:"img/logo.svg",keywords:["Staking API","Polygon"]},f="Staking API - Polygon",c={unversionedId:"api-reference/staking-api/polygon",id:"api-reference/staking-api/polygon",title:"Polygon",description:"Staking API - Polygon",source:"@site/docs/api-reference/staking-api/polygon.mdx",sourceDirName:"api-reference/staking-api",slug:"/api-reference/staking-api/polygon",permalink:"/api-reference/staking-api/polygon",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Polygon",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Polygon",image:"img/logo.svg",keywords:["Staking API","Polygon"]},sidebar:"docsSidebar"},l={},b=[],u={toc:b};function m(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"staking-api---polygon"},"Staking API - Polygon"),(0,s.kt)(i.Z,{service:"staking-api",methods:[{name:"Create New Delegation Flow"},{name:"Submit Staking Data"},{name:"Submit Staking Allowance Data"},{name:"Submit a Signed Allowance Transaction for Broadcast"},{name:"Submit Delegate Transaction Data"},{name:"Submit a Signed Delegate Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Create New Undelegation Flow"},{name:"Submit Unbonding Data"},{name:"Submit a Signed Unbonding Transaction for Broadcast"},{name:"Submit Claim Transaction Data"},{name:"Submit Signed Claim Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Create New Claim Rewards Flow"},{name:"Submit Claim Rewards Data"},{name:"Submit a Signed Claim Rewards Transaction for Broadcast"},{name:"Get Flow Status"}],networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"polygon",mdxType:"ApiReferenceNav"}),(0,s.kt)(d.ZP,{url:"https://polygon-slate.datahub.figment.io",network:"Polygon",service:"Staking API",route:"/api/v1/flows",mdxType:"MakingCalls"}),(0,s.kt)(o.S,{methods:[{name:"Create New Delegation Flow",content:"To initiate the delegation process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network on which this flow operates (ex. `polygon`) (required).\n  - `chain_code` &mdash; `string` Chain on which this flow operates (ex. `mainnet` , `testnet`) (required).\n  - `operation` `string` The operation to perform (ex. `staking`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `assign_staking_data` &mdash; provide the funding address, validator contract address, and amount of tokens to be staked. The Staking API will check on-chain to determine if an allowance transaction is needed.\n   - `delegator_address` &mdash; The main wallet from which MATIC will originate.\n   - `validator_address` &mdash; The validator smart contract address for delegation.\n   - `amount` &mdash; The number of MATIC tokens to be delegated.\n   - `minimum_shares_to_mint` &mdash; The minimum number of shares of the delegation pool to be minted. If the exchange rate results in fewer shares being minted, the transaction will fail.\n   - `max_slippage_percentage` &mdash; The maximum slippage you are willing to accept.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"polygon",chain_code:"testnet",operation:"staking",version:"v1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Delegation Flow",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"initialized",actions:[{name:"assign_staking_data",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"precision",options:{max:18}}]},{name:"minimum_shares_to_mint",display:"Minimum Shares To Mint",description:"",type:"integer",validations:[{type:"numericality",options:{allow_nil:!0,greater_than_or_equal_to:0}}]},{name:"max_slippage_percentage",display:"Max Slippage Percentage",description:"",type:"integer",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,less_than_or_equal_to:100,greater_than_or_equal_to:0}}]}]}],data:{delegator_address:null,validator_address:null,amount:null,minimum_shares_to_mint:null,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:null,delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-06T22:57:14.491Z"}}},{name:"Submit Staking Data",content:"After creating a new staking flow, submit the staking account data. Collect the required inputs. Send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The delegating address (required).\n  - `validator_address` &mdash; `string` The address of the validator smart contract to which you want to delegate your tokens (required).\n  - `amount` &mdash; `number` &mdash; The amount of MATIC to be delegated (required).\n  - `minimum_shares_to_mint` &mdash; `string` The minimum number of shares of the delegation pool to be minted. If the exchange rate results in fewer shares being minted, the transaction will fail (optional).\n  - `max_slippage_percentage` &mdash; `number` The maximum slippage you are willing to accept (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `create_allowance_tx` &mdash; If an allowance transaction is needed.\n - `create_delegate_tx` &mdash; If no further allowance is needed.\n- `data` &mdash; `object` Delegation flow & transaction data.\n - `gas_limit` &mdash; The gas limit for the transaction.\n - `gas_price` &mdash; The highest gas price you will pay for the transaction.",request:{method:"PUT",header:[],body:{name:"assign_staking_data",inputs:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Staking Data",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"create_allowance_tx",actions:[{name:"create_allowance_tx",inputs:[{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:null,delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:11:03.674Z"}}},{name:"Submit Staking Allowance Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `gas_limit` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n  - `gas_price` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_allowance_tx` &mdash; If you need to get a fresh version of the transaction payload.\n - `sign_allowance_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_allowance_tx"},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Staking Allowance Data",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"allowance_tx_signature",actions:[{name:"refresh_allowance_tx",inputs:[]},{name:"sign_allowance_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:13:12.832Z"}}},{name:"Submit a Signed Allowance Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `allowance_tx_broadcasting` &mdash; the transaction has been broadcast but not confirmed.\n - `create_delegate_tx` &mdash; the transaction has been confirmed, ready for the next step in the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_allowance_tx",inputs:{transaction_payload:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Allowance Transaction for Broadcast",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"allowance_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:16:44.809Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:15:43.981Z"}}},{name:"Submit Delegate Transaction Data",content:"Now that the smart contract allowance is in place, submit a delegation transaction to delegate the MATIC.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `gas_limit` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n  - `gas_price` &mdash; `string` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_delegate_tx` &mdash; If you need to get a fresh version of the transaction payload.\n - `sign_delegate_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_delegate_tx"},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Delegate Transaction Data",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"delegate_tx_signature",actions:[{name:"refresh_delegate_tx",inputs:[]},{name:"sign_delegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:{raw:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:17:36.976Z"}}},{name:"Submit a Signed Delegate Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `delegate_tx_broadcasting` &mdash; The transaction has been broadcast but not confirmed.\n - `completed` &mdash; The transaction has been confirmed.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_delegate_tx",inputs:{transaction_payload:"0x02f8b005018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c001a0424cfeb222e8dda2207cfa4e3958e252c9d5b79af6ca9e356a9f736a1de31483a03d0d9acc2cec2dca7569bdfaaf29e598a61faf7ce488de658e9af354c0d21c1b"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Delegate Transaction for Broadcast",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"delegate_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:19:52.481Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:{raw:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null,signed:"0x02f8b005018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c001a0424cfeb222e8dda2207cfa4e3958e252c9d5b79af6ca9e356a9f736a1de31483a03d0d9acc2cec2dca7569bdfaaf29e598a61faf7ce488de658e9af354c0d21c1b",hash:"0x04e8b654b128adda5a8bd648637ed5b8da157a152c2fe6fb12c99c8aa0811820",status:null,error:null,signatures:[],gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:18:52.129Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `delegate_tx_broadcasting` &mdash; The transaction has been broadcast but not confirmed.\n - `completed` &mdash; The transaction has been confirmed.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Delegation flow & transaction data.",request:{method:"GET",header:[],url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonStakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"completed",actions:[],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:{raw:"0x02f86d05018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c0",signing_payload:null,signed:"0x02f8b005018459682f0084598840d28303d2e19415ed57ca28cbebb58d9c6c62f570046bc089bc6680b8446ab150710000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000c001a0424cfeb222e8dda2207cfa4e3958e252c9d5b79af6ca9e356a9f736a1de31483a03d0d9acc2cec2dca7569bdfaaf29e598a61faf7ce488de658e9af354c0d21c1b",hash:"0x04e8b654b128adda5a8bd648637ed5b8da157a152c2fe6fb12c99c8aa0811820",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:19:22.345Z"}}},{name:"Create New Undelegation Flow",content:"To initiate the undelegation process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network on which this flow operates (ex. `polygon`) (required).\n  - `chain_code` &mdash; `string` Chain on which this flow operates (ex. `testnet`) (required).\n  - `operation` `string` The operation to perform (ex. `unstaking`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `create_unbond_tx` &mdash; Use this action to unstake MATIC.\n   - `delegator_address` &mdash; The delegator address.\n   - `validator_address` &mdash; The validator contract address from which MATIC will be undelegated.\n   - `amount` &mdash; The amount of MATIC to be undelegated.\n   - `max_shares_to_burn` &mdash; The maximum number of shares of the delegation to be burned. If the exchange rate results in more shares being burned, the transaction will fail.\n   - `max_slippage_percentage` &mdash; The maximum slippage you are willing to accept.\n   - `gas_limit` &mdash; Adjust gas limit for the transaction.\n   - `gas_price` &mdash; Adjust gas price for the transaction.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"polygon",chain_code:"testnet",operation:"unstaking",version:"v1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Undelegation Flow",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"initialized",actions:[{name:"create_unbond_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"is_validator",options:{on:"with_on_chain_validations"}}]},{name:"amount",display:"Amount",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"max_shares_to_burn",display:"Max Shares To Burn",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than_or_equal_to:0}}]},{name:"max_slippage_percentage",display:"Max Slippage Percentage",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than_or_equal_to:0,less_than_or_equal_to:100}}]},{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{delegator_address:null,validator_address:null,amount:null,max_shares_to_burn:null,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,unbond_transaction:null,claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-06T23:40:33.826Z"}}},{name:"Submit Unbonding Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `validator_address` &mdash; `string` The validator smart contract address from which MATIC will be undelegated (required).\n  - `delegator_address` &mdash; `string` The delegator address (required).\n  - `amount` &mdash; `number` The amount of MATIC to be undelegated (required).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_unbond_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., if the nonce needs to be updated).\n - `sign_unbond_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_unbond_tx",inputs:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Unbonding Data",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"unbond_tx_signature",actions:[{name:"refresh_unbond_tx",inputs:[]},{name:"sign_unbond_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-07T17:22:05.511Z"}}},{name:"Submit a Signed Unbonding Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, you will `PUT /api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `unbond_tx_broadcasting` &mdash; The transaction has been broadcast and is waiting for confirmation.\n - `unbonding` &mdash; The transaction has been confirmed and the delegation is unbonding.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_unbond_tx",inputs:{transaction_payload:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Unbonding Transaction for Broadcast",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"unbond_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:25:17.899Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-07T17:24:17.339Z"}}},{name:"Submit Claim Transaction Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `gas_limit` &mdash; `number` Adjust if you wish to limit the possible transaction fee (optional).\n  - `gas_price` &mdash; `number` Adjust if you wish to limit the possible transaction fee (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_claim_tx` &mdash; If you need to get a fresh version of the transaction payload (for example, if the nonce needs to be updated).\n - `sign_claim_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_claim_tx"},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Claim Transaction Data",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"claim_tx_signature",actions:[{name:"refresh_claim_tx",inputs:[]},{name:"sign_claim_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:{raw:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},estimated_unbonded_at:"2022-10-09T09:25:17.514Z",unbond_checkpoint:78566,unbond_nonce:1},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-11T18:11:23.081Z"}}},{name:"Submit Signed Claim Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `claim_tx_broadcasting` &mdash; The transaction has been broadcast but not confirmed.\n - `done` &mdash; The transaction has been confirmed and the rewards have been claimed.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_claim_tx",inputs:{transaction_payload:"0x02f88f05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c001a0818e02361da6e36a7d0093d385d1f13b0c5e539126023f8a4175ab1a375d0723a0571fabd4f32c978e1b17585f4df52d667ca9bd824204f43db0805a291c635c46"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Claim Transaction for Broadcast",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"claim_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-11T18:14:51.766Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:{raw:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null,signed:"0x02f88f05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c001a0818e02361da6e36a7d0093d385d1f13b0c5e539126023f8a4175ab1a375d0723a0571fabd4f32c978e1b17585f4df52d667ca9bd824204f43db0805a291c635c46",hash:"0x5a565cc0002c73655cbf976fa3a04d9b9d20bc196e88f414cbdbdaed70ab7af6",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},estimated_unbonded_at:"2022-10-09T09:25:17.514Z",unbond_checkpoint:78566,unbond_nonce:1},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-11T18:13:51.472Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `claim_tx_broadcasting` &mdash; The transaction has been broadcast but not confirmed.\n - `done` &mdash; The transaction has been confirmed and the rewards have been claimed.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Undelegation flow & transaction data.",request:{method:"GET",header:[],url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonUnstakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"done",actions:[],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:"0x02f8b005028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c001a0f8462149f25c9942852611ea06820bf0b3f588f63aead9702225010b2e80a096a0765feade968806e16f36cadf533d779ceb071f54ca6cf4935f6464302c0873da",hash:"0x36c57e119ef341fb23f261a7a44d10d7fe4044ccbcd1b39d509730ee0b75797c",status:"confirmed",error:null,signatures:[],gas_limit:null,gas_price:null},claim_transaction:{raw:"0x02f84c05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c0",signing_payload:null,signed:"0x02f88f05038459682f00849b6d87fe830278519415ed57ca28cbebb58d9c6c62f570046bc089bc6680a4e97fddc20000000000000000000000000000000000000000000000000000000000000001c001a0818e02361da6e36a7d0093d385d1f13b0c5e539126023f8a4175ab1a375d0723a0571fabd4f32c978e1b17585f4df52d667ca9bd824204f43db0805a291c635c46",hash:"0x5a565cc0002c73655cbf976fa3a04d9b9d20bc196e88f414cbdbdaed70ab7af6",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},estimated_unbonded_at:"2022-10-09T09:25:17.514Z",unbond_checkpoint:78566,unbond_nonce:1},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-11T18:13:51.472Z"}}},{name:"Create New Claim Rewards Flow",content:"To claim the staking rewards with Staking API firstly we need to create a new Flow with `POST /api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `polygon`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `mainnet`, `testnet`) (required).\n  - `operation` `string` The operation to perform (ex. `claim_rewards`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `create_claim_rewards_tx` &mdash; Use this action to claim staking rewards.\n   - `delegator_address` &mdash; The address delegating MATIC.\n   - `validator_address` &mdash; The Validator contract address to which MATIC is delegated.\n   - `gas_limit` &mdash; Adjust the gas limit for the claim transaction.\n   - `gas_price` &mdash; Adjust gas price for the claim transaction.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"polygon",chain_code:"testnet",operation:"claim_rewards",version:"v1"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create New Claim Rewards Flow",body:{id:"21ec6775-720c-4c58-bfd2-73275200e1d0",state:"initialized",actions:[{name:"create_claim_rewards_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{delegator_address:null,validator_address:null,claim_rewards_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-07T17:52:50.865Z",updated_at:"2022-10-07T17:52:50.865Z"}}},{name:"Submit Claim Rewards Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The address delegating MATIC (required).\n  - `validator_address` &mdash; `string` The Validator contract address to which MATIC are delegated (required).\n  - `gas_limit` &mdash; `number` Adjust gas limit for the claim transaction (optional).\n  - `gas_price` &mdash; `number` Adjust gas limit for the claim transaction (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_claim_rewards_tx` &mdash; If you need to get a fresh version of the transaction payload (for example, if the nonce needs to be updated).\n - `sign_claim_rewards_tx ` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_claim_rewards_tx",inputs:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonClaimRewardsFlowId}}/next"},interactive:!1,response:{name:"Submit Claim Rewards Data",body:{id:"07d6752c-c412-4cfa-a12c-65feab06acd6",state:"claim_rewards_tx_signature",actions:[{name:"refresh_claim_rewards_tx",inputs:[]},{name:"sign_claim_rewards_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf"],transaction_payload:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null}]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",max_shares_to_burn:1e18,max_slippage_percentage:0,exchange_rate:"100000000000000000000000000000.0",exchange_rate_precision:"100000000000000000000000000000.0",unbond_transaction:{raw:"0x02f86d05028459682f0084597a1b168304cf969415ed57ca28cbebb58d9c6c62f570046bc089bc6680b844c83ec04d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000c0",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null,gas_limit:null,gas_price:null},claim_transaction:null,estimated_unbonded_at:null,unbond_checkpoint:null,unbond_nonce:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T23:40:33.826Z",updated_at:"2022-10-07T17:22:05.511Z"}}},{name:"Submit a Signed Claim Rewards Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, you will `PUT /api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the Polygon network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n  - `claim_rewards_tx_broadcasting` &mdash; the transaction has been broadcast but not confirmed.\n - `done` &mdash; the transaction has been confirmed and the rewards are claimed.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_claim_rewards_tx",inputs:{transaction_payload:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7"}},url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonClaimRewardsFlowId}}/next"},interactive:!1,response:{name:"Submit a Signed Claim Rewards Transaction for Broadcast",body:{id:"e6dc662e-f77c-4235-9b28-7141d90c8ab8",state:"claim_rewards_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-07T17:16:44.809Z",inputs:[]}],data:{delegator_address:"0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",validator_address:"0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",amount:"1.0",minimum_shares_to_mint:0,max_slippage_percentage:null,exchange_rate:null,exchange_rate_precision:null,allowance_transaction:{raw:"0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",signing_payload:null,signed:"0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",hash:"0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",status:null,error:null,signatures:[],gas_limit:null,gas_price:null},delegate_transaction:null},network_code:"polygon",chain_code:"testnet",created_at:"2022-10-06T22:57:14.491Z",updated_at:"2022-10-07T17:15:43.981Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n  - `claim_rewards_tx_broadcasting` &mdash; the transaction has been broadcast but not confirmed.\n - `done` &mdash; the transaction has been confirmed and the rewards are claimed.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"GET",header:[],url:"https://polygon-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{polygonClaimRewardsFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"72a981d4-419b-43c2-92eb-56497f9a23f6",state:"done",actions:[],data:{delegator_address:"0xD0D77667f64CAd06a4789497065F2aaF1636Ee31",validator_address:"0x0b764b080a67f9019677Ae2c9279F52485Fd4525",claim_rewards_transaction:{raw:"0x02ec05328459682f008459693e3283024d18940b764b080a67f9019677ae2c9279f52485fd45258084c7b8981cc0",signing_payload:null,signed:"0x02f86f05328459682f008459693e3283024d18940b764b080a67f9019677ae2c9279f52485fd45258084c7b8981cc080a033ac92a662cfb3c80721dd0d1481511d492da9a608821bee6ef7c0bfa58582ffa06f4015f4f36a7f5874273ea19f6fd81f1c0d8ab952cae2720f5bce1b6f6ac05c",hash:"0x0599175dd9e839111c46aaf766fbb8f1821273e53e269a451282e2a12e3b5689",status:null,error:null,signatures:[{account_address:"0xD0D77667f64CAd06a4789497065F2aaF1636Ee31",signature:""}],gas_limit:null,gas_price:null}},network_code:"polygon",chain_code:"testnet",created_at:"2022-09-15T13:00:32.982Z",updated_at:"2022-09-15T13:10:45.368Z"}}}],service:"staking-api",networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"polygon",proxy:"https://api-service-proxy.figment-secops.workers.dev",mdxType:"APIMethods"}))}m.isMDXComponent=!0},6700:(e,a,t)=>{var n={"./af":2786,"./af.js":2786,"./ar":867,"./ar-dz":4130,"./ar-dz.js":4130,"./ar-kw":6135,"./ar-kw.js":6135,"./ar-ly":6440,"./ar-ly.js":6440,"./ar-ma":7702,"./ar-ma.js":7702,"./ar-sa":6040,"./ar-sa.js":6040,"./ar-tn":7100,"./ar-tn.js":7100,"./ar.js":867,"./az":1083,"./az.js":1083,"./be":9808,"./be.js":9808,"./bg":8338,"./bg.js":8338,"./bm":7438,"./bm.js":7438,"./bn":8905,"./bn-bd":6225,"./bn-bd.js":6225,"./bn.js":8905,"./bo":1560,"./bo.js":1560,"./br":1278,"./br.js":1278,"./bs":622,"./bs.js":622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":877,"./cv.js":877,"./cy":7373,"./cy.js":7373,"./da":4780,"./da.js":4780,"./de":9740,"./de-at":217,"./de-at.js":217,"./de-ch":894,"./de-ch.js":894,"./de.js":9740,"./dv":5300,"./dv.js":5300,"./el":837,"./el.js":837,"./en-au":8348,"./en-au.js":8348,"./en-ca":7925,"./en-ca.js":7925,"./en-gb":2243,"./en-gb.js":2243,"./en-ie":6436,"./en-ie.js":6436,"./en-il":7207,"./en-il.js":7207,"./en-in":4175,"./en-in.js":4175,"./en-nz":6319,"./en-nz.js":6319,"./en-sg":1662,"./en-sg.js":1662,"./eo":2915,"./eo.js":2915,"./es":5655,"./es-do":5251,"./es-do.js":5251,"./es-mx":6112,"./es-mx.js":6112,"./es-us":1146,"./es-us.js":1146,"./es.js":5655,"./et":5603,"./et.js":5603,"./eu":7763,"./eu.js":7763,"./fa":6959,"./fa.js":6959,"./fi":1897,"./fi.js":1897,"./fil":2549,"./fil.js":2549,"./fo":4694,"./fo.js":4694,"./fr":4470,"./fr-ca":3049,"./fr-ca.js":3049,"./fr-ch":2330,"./fr-ch.js":2330,"./fr.js":4470,"./fy":5044,"./fy.js":5044,"./ga":9295,"./ga.js":9295,"./gd":2101,"./gd.js":2101,"./gl":8794,"./gl.js":8794,"./gom-deva":7884,"./gom-deva.js":7884,"./gom-latn":3168,"./gom-latn.js":3168,"./gu":5349,"./gu.js":5349,"./he":4206,"./he.js":4206,"./hi":94,"./hi.js":94,"./hr":316,"./hr.js":316,"./hu":2138,"./hu.js":2138,"./hy-am":1423,"./hy-am.js":1423,"./id":9218,"./id.js":9218,"./is":135,"./is.js":135,"./it":626,"./it-ch":150,"./it-ch.js":150,"./it.js":626,"./ja":9183,"./ja.js":9183,"./jv":4286,"./jv.js":4286,"./ka":2105,"./ka.js":2105,"./kk":7772,"./kk.js":7772,"./km":8758,"./km.js":8758,"./kn":9282,"./kn.js":9282,"./ko":3730,"./ko.js":3730,"./ku":1408,"./ku.js":1408,"./ky":3291,"./ky.js":3291,"./lb":6841,"./lb.js":6841,"./lo":5466,"./lo.js":5466,"./lt":7010,"./lt.js":7010,"./lv":7595,"./lv.js":7595,"./me":9861,"./me.js":9861,"./mi":5493,"./mi.js":5493,"./mk":5966,"./mk.js":5966,"./ml":7341,"./ml.js":7341,"./mn":5115,"./mn.js":5115,"./mr":370,"./mr.js":370,"./ms":9847,"./ms-my":1237,"./ms-my.js":1237,"./ms.js":9847,"./mt":2126,"./mt.js":2126,"./my":6165,"./my.js":6165,"./nb":4924,"./nb.js":4924,"./ne":6744,"./ne.js":6744,"./nl":3901,"./nl-be":9814,"./nl-be.js":9814,"./nl.js":3901,"./nn":3877,"./nn.js":3877,"./oc-lnc":2135,"./oc-lnc.js":2135,"./pa-in":5858,"./pa-in.js":5858,"./pl":4495,"./pl.js":4495,"./pt":9520,"./pt-br":7971,"./pt-br.js":7971,"./pt.js":9520,"./ro":6459,"./ro.js":6459,"./ru":1793,"./ru.js":1793,"./sd":950,"./sd.js":950,"./se":490,"./se.js":490,"./si":124,"./si.js":124,"./sk":4249,"./sk.js":4249,"./sl":4985,"./sl.js":4985,"./sq":1104,"./sq.js":1104,"./sr":9131,"./sr-cyrl":9915,"./sr-cyrl.js":9915,"./sr.js":9131,"./ss":5893,"./ss.js":5893,"./sv":8760,"./sv.js":8760,"./sw":1172,"./sw.js":1172,"./ta":7333,"./ta.js":7333,"./te":3110,"./te.js":3110,"./tet":2095,"./tet.js":2095,"./tg":7321,"./tg.js":7321,"./th":9041,"./th.js":9041,"./tk":9005,"./tk.js":9005,"./tl-ph":5768,"./tl-ph.js":5768,"./tlh":9444,"./tlh.js":9444,"./tr":2397,"./tr.js":2397,"./tzl":8254,"./tzl.js":8254,"./tzm":1106,"./tzm-latn":699,"./tzm-latn.js":699,"./tzm.js":1106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":7691,"./uk.js":7691,"./ur":3795,"./ur.js":3795,"./uz":6791,"./uz-latn":588,"./uz-latn.js":588,"./uz.js":6791,"./vi":5666,"./vi.js":5666,"./x-pseudo":4378,"./x-pseudo.js":4378,"./yo":5805,"./yo.js":5805,"./zh-cn":3839,"./zh-cn.js":3839,"./zh-hk":5726,"./zh-hk.js":5726,"./zh-mo":9807,"./zh-mo.js":9807,"./zh-tw":4152,"./zh-tw.js":4152};function s(e){var a=o(e);return t(a)}function o(e){if(!t.o(n,e)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=o,e.exports=s,s.id=6700}}]);