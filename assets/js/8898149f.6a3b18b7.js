"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[7543],{2750:(e,a,t)=>{t.d(a,{ZP:()=>c});var n=t(7462),o=(t(7294),t(3905)),s=t(5488),r=t(5162),d=t(7643);const i={toc:[{value:"Authentication",id:"authentication",level:3}]};function c(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"authentication"},"Authentication"),(0,o.kt)("div",null,"API calls require authentication with API key via ",(0,o.kt)("code",null,"Authorization")," ","request header or ",(0,o.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,o.kt)("strong",null,t.network," ",t.service)," ","endpoint, hosted at ",(0,o.kt)("code",null,t.url),(0,o.kt)("br",null),(0,o.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,o.kt)(s.Z,{mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(r.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(r.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,o.kt)(r.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,o.kt)(d.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`))))}c.isMDXComponent=!0},3976:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(7294),o=t(6550);function s(e){let{network:a,networks:t,methods:s,service:r}=e;const d=(0,o.TH)(),i=(0,o.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:a,onChange:e=>{i.push(d.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},t.map((e=>n.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:d.hash.replace("#","")||"",onChange:e=>{i.push(`#${e.target.value}`)}},s.map((e=>n.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},7297:(e,a,t)=>{t.d(a,{Z:()=>o});var n=t(7294);function o(e){let{network:a,service:t}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=a;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=t.label,n.querySelector(".breadcrumbs__link").href=t.link,e.insertAdjacentElement("beforebegin",n)}),[a]),n.createElement(n.Fragment,null)}},3213:(e,a,t)=>{t.d(a,{S:()=>Z});var n=t(7462),o=t(7294),s=t(8538),r=t(7748),d=t(460),i=t.n(d),c=t(3746),l=t(6412);const u={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function f(e){let{children:a="",header:t,actions:s,disabled:r=!1,status:d,onValueChange:f}=e;const p=(0,l.p)(),h=(0,o.useRef)(null);(0,o.useEffect)((()=>{var e;const a=null==(e=h.current)?void 0:e.querySelector("textarea"),t=e=>{const a=e.target;a.style.width=a.scrollWidth+"px"};return a.addEventListener("input",t),()=>a.removeEventListener("input",t)}),[]);return o.createElement("div",{ref:h},o.createElement(m,{actions:s,status:d},t),o.createElement("div",{className:u.Container},o.createElement(i(),{value:a,onValueChange:f,highlight:function(e){return void 0===e&&(e=""),o.createElement(c.ZP,(0,n.Z)({},c.lG,{theme:p,code:e,language:"json"}),(e=>{let{className:a,style:t,tokens:s,getLineProps:r,getTokenProps:d}=e;return o.createElement("div",{className:u.Code},s.map(((e,a)=>o.createElement("div",(0,n.Z)({key:a},r({line:e,key:a}),{className:u.Line}),o.createElement("span",{className:u.LineContent},e.map(((e,a)=>o.createElement("span",(0,n.Z)({key:a},d({token:e,key:a}))))))))))}))},disabled:r,ignoreTabKey:!0,padding:10,style:{...p.plain,overflow:"auto"},className:u.Editor})))}function m(e){let{children:a,actions:t=[],status:n}=e;return o.createElement("div",{className:u.Header,"data-status":n},o.createElement("span",null,a),o.createElement("span",{className:u.Actions},t.map(((e,a)=>{let{title:t,onClick:n,Component:s=t}=e;return o.createElement("button",{className:u.HeaderButton,key:`${a}:${t}`,title:t,onClick:n},s)}))))}var p=t(195);const h="overlayHeaderButton_IGf5";const b=function(e,a){const t=(0,o.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[s,r]=(0,o.useReducer)(((e,a)=>{switch(a.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:a.payload,loading:!1};case"error":return{...n,error:a.payload,loading:!1};default:return e}}),n);return{...s,fetchData:async function(n,o){void 0===o&&(o={}),r({type:"loading"});try{const s=await fetch(e+(n?`/${n}`:""),{...a,...o});if(!s.ok){let e,a,t;try{t=JSON.parse(await s.text()),e=await s.json(),a=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(a,null,2)||JSON.stringify(t,null,2)||s.statusText)}const d=await s.json();if(t.current)return;return r({type:"fetched",payload:d}),d}catch(s){if(t.current)return;return r({type:"error",payload:s.message}),null}}}};var g,y=t(7643),_=t(4672);function w(){return w=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},w.apply(this,arguments)}const k=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",w({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,g||(g=o.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var v;function T(){return T=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},T.apply(this,arguments)}const C=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",T({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,v||(v=o.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function E(e){let{req:a,res:t,interactive:n,endpoint:s}=e;const[r,d]=(0,o.useState)(S(a.body)),[i,c]=(0,o.useState)(a.query),[l,u]=(0,o.useState)(x(t.body)),m="string"==typeof a.body&&0==a.body.indexOf("query"),{data:g,error:w,loading:v,fetchData:T}=b(s,{method:a.method,headers:{...a.headers,"Content-Type":m?"application/graphql":"application/json"},body:S(a.body)}),[E,A]=(0,o.useState)(null);(0,o.useEffect)((()=>{v?A("LOADING"):w||null!=g&&g.error?A("ERROR"):g&&A("SUCCESS")}),[g,w,v]);const P=[n?{title:"Run request",onClick:async()=>{const e=await T(i,{body:r});e&&u(x(e))},Component:o.createElement(o.Fragment,null,o.createElement(k,null)," Run")}:null,{title:"Copy",onClick:()=>(0,p.Z)(r),Component:o.createElement(_.Z,{code:"",className:h})},n?{title:"Reset",onClick:()=>{A(null),c(a.query),d(S(a.body)),u(x(t.body))},Component:o.createElement(C,null)}:null].filter((e=>!!e));return o.createElement(o.Fragment,null,o.createElement(f,{header:"GET"===a.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:P,disabled:!n,onValueChange:e=>{n&&("GET"===a.method?c(e):"POST"===a.method&&d(e))}},"GET"===a.method?i:r),o.createElement(y.Z,{title:E?"Response":"Example Response",language:"json"},w?`${w}`:l))}function x(e){return JSON.stringify(e,null,2)}function S(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const A="heading_REER";var P=t(9960),j=t(3905);const q={toc:[]};function O(e){let{components:a,...t}=e;return(0,j.kt)("wrapper",(0,n.Z)({},q,t,{components:a,mdxType:"MDXLayout"}),(0,j.kt)("details",{open:t.accordionOpen?"open":void 0},(0,j.kt)("summary",null,(0,j.kt)("span",{className:"open"},"Specification"),(0,j.kt)("span",{className:"closed"},"View Specification")),(0,j.kt)(s.D,{mdxType:"ReactMarkdown"},t.details)))}function N(e){let{name:a,content:t="",interactive:n,request:r,accordionOpen:d=!1,response:i,endpoint:c}=e;["Rewards (by epoch)","Rewards (daily)"].includes(a)&&(r.body={...r.body,start_time:new Date(Date.now()-("Rewards (by epoch)"===a?1728e5:864e5)).toISOString().split("T")[0],end_time:(new Date).toISOString().split("T")[0]});const[l,...u]=t.trim().split(/\n+/),f=u.join("\n");return o.createElement(o.Fragment,null,o.createElement("h2",{id:a.toLowerCase(),className:A,"data-method":r.method},o.createElement(P.Z,{to:`#${a.toLowerCase()}`},a)),o.createElement(s.D,null,l),o.createElement(E,{req:r,res:i,interactive:n,endpoint:c}),o.createElement(O,{details:f,accordionOpen:d}),o.createElement("hr",null))}function Z(e){let{network:a,methods:t,service:s,proxy:d}=e;return o.createElement(o.Fragment,null,o.createElement("h3",null,"Available Methods"),t.map(((e,t)=>o.createElement(N,(0,n.Z)({key:a+t},e,{endpoint:`${d}/${s}/${a}`,accordionOpen:"node-api"!==s})))),o.createElement(r.Z,null))}O.isMDXComponent=!0},3417:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>f});var n=t(7462),o=(t(7294),t(3905)),s=t(3213),r=t(3976),d=(t(7297),t(2750));const i={title:"Cosmos",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Cosmos",image:"img/logo.svg",keywords:["Staking API","Cosmos"]},c="Staking API - Cosmos",l={unversionedId:"api-reference/staking-api/cosmos",id:"api-reference/staking-api/cosmos",title:"Cosmos",description:"Staking API - Cosmos",source:"@site/docs/api-reference/staking-api/cosmos.mdx",sourceDirName:"api-reference/staking-api",slug:"/api-reference/staking-api/cosmos",permalink:"/api-reference/staking-api/cosmos",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Cosmos",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Cosmos",image:"img/logo.svg",keywords:["Staking API","Cosmos"]},sidebar:"docsSidebar"},u={},f=[],m={toc:f};function p(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"staking-api---cosmos"},"Staking API - Cosmos"),(0,o.kt)(r.Z,{service:"staking-api",methods:[{name:"Create a New Transfer Flow"},{name:"Submit Transfer Data"},{name:"Submit Signed Transfer Transaction for Broadcast"},{name:"Get Flow Status"}],networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"cosmos",mdxType:"ApiReferenceNav"}),(0,o.kt)(d.ZP,{url:"https://cosmos-slate.datahub.figment.io",network:"Cosmos",service:"Staking API",mdxType:"MakingCalls"}),(0,o.kt)(s.S,{methods:[{name:"Create a New Transfer Flow",content:"To initiate the transfer process with Staking API, create a new flow with `POST /api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `cosmos`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `testnet`) (required).\n  - `operation` &mdash; `string` The operation to perform (ex. `transfer`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\nThe response indicates one possible action:\n\n- `create_transfer_tx`\n\nThe `create_transfer_tx` action indicates six possible fields for data collection:\n\n- `from_account_address` (required) &mdash; The address from which ATOM will be transferred.\n- `to_account_address` (required) &mdash; The address to which ATOM will be transferred.\n- `amount` (required) &mdash; The amount of ATOM to be transferred.\n- `memo` &mdash; an optional message to record on-chain with your transfer.\n- `gas_limit` &mdash; the total amount of gas you're willing to let this transaction consume.\n  - If you do not include this, we'll use a Cosmos library to select a good default for you.\n- `gas_price` &mdash; how many ATOM you're willing to pay per unit of gas consumed by this transaction.\n  - If you do not include this, we'll use a Cosmos library to select a good default for you.",request:{method:"POST",header:[],body:{flow:{network_code:"cosmos",chain_code:"testnet",operation:"transfer",version:"v1"}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create a New Transfer Flow",body:{id:"c1fae578-2519-4efc-9bde-c5a98451fc17",state:"initialized",actions:[{name:"create_transfer_tx",inputs:[{name:"from_account_address",display:"From Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"to_account_address",display:"To Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"memo",display:"Memo",description:"",type:"string",validations:[]},{name:"gas_price",display:"Gas Price",description:"",type:"decimal",validations:[]},{name:"gas_limit",display:"Gas Limit",description:"",type:"decimal",validations:[]}]}],data:{from_account_address:null,to_account_address:null,amount:null,gas_price:null,gas_limit:null,memo:null,transfer_transaction:null},network_code:"cosmos",chain_code:"testnet",created_at:"2022-10-25T18:45:17.470Z",updated_at:"2022-10-25T18:45:17.470Z"}}},{name:"Submit Transfer Data",content:"After creating the new transfer flow, we need to submit the transfer data.\n\nAfter collecting the required inputs as mentioned below, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute - `create_transfer_tx`.\n- `inputs` &mdash; `object`\n  - `from_account_address` &mdash; `string` The address from which ATOM will be transferred (required).\n  - `to_account_address` &mdash; `string` The address to which ATOM will be transferred (required).\n  - `amount` &mdash; `number` The amount of ATOM to be transferred (required).\n  - `memo` &mdash; `string` A message to record on-chain with your transfer (optional).\n  - `gas_limit` &mdash; `number` The total amount of gas you're willing to let this transaction consume (optional).\n  - `gas_price` &mdash; `number` How many ATOM you're willing to pay per unit of gas consumed by this transaction (optional).\n\n### Response\n\nNote that in this step, the Staking API will check that your account balance is greater than or equal to the amount you've submitted for transfer.\nExpect an error response if that is not the case.\n\nWe see two possible `actions`:\n\n- `refresh_transfer_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., the nonce has increased).\n- `sign_transfer_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n\nWe will choose `sign_transfer_tx`, which indicates one input to collect:\n\n- `transaction_payload` (required) &mdash; The signed transaction payload ready to be broadcast to the network.\n\nMake sure to save the `transaction_payload` from this response, which is what needs to be signed in the next step.",request:{method:"PUT",header:[],body:{name:"create_transfer_tx",inputs:{from_account_address:"cosmos1q73f398z4egpsj0fg2u55w34qxxkjzmf37fje7",to_account_address:"cosmos1hjyde2kfgtl78twvhs53u5j2gcsxrt649nn8j5",amount:"10"}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosTransferFlowId}}/next"},interactive:!1,response:{name:"Submit Transfer Data",body:{id:"c1fae578-2519-4efc-9bde-c5a98451fc17",state:"transfer_tx_signature",actions:[{name:"refresh_transfer_tx",inputs:[]},{name:"sign_transfer_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["cosmos1786jjkh5xk43vcmrc490zn48fh8nl02tcur0ce"],transaction_payload:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365222c22746f41646472657373223a22636f736d6f73316c67677076306b7964633777397071616b78716468393332613676653474366d386561376a30222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a223130303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383332222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323633227d2c226d656d6f223a22227d"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["cosmos1786jjkh5xk43vcmrc490zn48fh8nl02tcur0ce"],transaction_payload:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365222c22746f41646472657373223a22636f736d6f73316c67677076306b7964633777397071616b78716468393332613676653474366d386561376a30222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a223130303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383332222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323633227d2c226d656d6f223a22227d",signing_payload:null}]}],data:{from_account_address:"cosmos1786jjkh5xk43vcmrc490zn48fh8nl02tcur0ce",to_account_address:"cosmos1lggpv0kydc7w9pqakxqdh932a6ve4t6m8ea7j0",amount:"0.01",gas_price:null,gas_limit:null,memo:null,transfer_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365222c22746f41646472657373223a22636f736d6f73316c67677076306b7964633777397071616b78716468393332613676653474366d386561376a30222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a223130303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383332222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323633227d2c226d656d6f223a22227d",signing_payload:null,signed:null,hash:null,status:null,error:null,signatures:null}},network_code:"cosmos",chain_code:"testnet",created_at:"2022-10-25T18:06:03.248Z",updated_at:"2022-10-25T18:08:36.628Z"}}},{name:"Submit Signed Transfer Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\nWith the signed transaction provided, the Staking API will broadcast it to the network. As the transaction progresses towards confirmation, the returned state will be either:\n\n- `transfer_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n- `completed` &mdash; Transaction has been confirmed and the transfer is complete.",request:{method:"PUT",header:[],body:{name:"sign_transfer_tx",inputs:{transaction_payload:"0aa4010a8f010a1c2f636f736d6f732e62616e6b2e763162657461312e4d736753656e64126f0a2d636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365122d636f736d6f73313561707464716d6d376464677463726a7663356873393838726c726b7a6534306c34713068651a0f0a057561746f6d1206313030303030121054657374696e67206175746f2d67617312670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a210269bc2f2b61cdddb0bb2cf169d5fad0afc19326aa13d2bf967ee3092f7ade88f712040a020801181d12130a0d0a057561746f6d12043138343310d1bf041a40a987ccc429bbeca8f8e3295f3ccb800a35400944ca17801ee888cfb28f1ec6b40d654a45aedfc46f3e1f825951ace283f911258131a989d925827bd322b2b0fb"}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosTransferFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Transfer Transaction for Broadcast",body:{id:"c1fae578-2519-4efc-9bde-c5a98451fc17",state:"transfer_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-10-25T18:15:13.074Z",inputs:[]}],data:{from_account_address:"cosmos1786jjkh5xk43vcmrc490zn48fh8nl02tcur0ce",to_account_address:"cosmos1lggpv0kydc7w9pqakxqdh932a6ve4t6m8ea7j0",amount:"0.01",gas_price:null,gas_limit:null,memo:null,transfer_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365222c22746f41646472657373223a22636f736d6f73316c67677076306b7964633777397071616b78716468393332613676653474366d386561376a30222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a223130303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383332222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323633227d2c226d656d6f223a22227d",signing_payload:null,signed:"0a91010a8e010a1c2f636f736d6f732e62616e6b2e763162657461312e4d736753656e64126e0a2d636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365122d636f736d6f73316c67677076306b7964633777397071616b78716468393332613676653474366d386561376a301a0e0a057561746f6d1205313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a210269bc2f2b61cdddb0bb2cf169d5fad0afc19326aa13d2bf967ee3092f7ade88f712040a020801182912130a0d0a057561746f6d12043138333210afbc041a40f1278b4c8dfe9282dac0134818dde62ed4ec75fe779b84946ff0b8190c10a6366987d6b4397b9a5e38ece9c4d740d0351ad359a0716616c6d7d8ee8679e2d576",hash:"F2EFCF0F3D5D6C34E87F82AC03C24118D79278F64C1B1B7DAE9A43CE1CB703F2",status:null,error:null,signatures:[{account_address:"cosmos1786jjkh5xk43vcmrc490zn48fh8nl02tcur0ce",signature:""}]}},network_code:"cosmos",chain_code:"testnet",created_at:"2022-10-25T18:06:03.248Z",updated_at:"2022-10-25T18:14:12.426Z"}}},{name:"Get Flow Status",content:"To refresh the transaction state and get the latest status of the existing flow, use the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `state` &mdash; `string` The current state of the flow.\n\nThe `state` field will update from `transfer_tx_broadcasting` to `completed`.",request:{method:"GET",header:[],body:"",url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosTransferFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"c1fae578-2519-4efc-9bde-c5a98451fc17",state:"completed",actions:[],data:{from_account_address:"cosmos1786jjkh5xk43vcmrc490zn48fh8nl02tcur0ce",to_account_address:"cosmos1lggpv0kydc7w9pqakxqdh932a6ve4t6m8ea7j0",amount:"0.01",gas_price:null,gas_limit:null,memo:null,transfer_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365222c22746f41646472657373223a22636f736d6f73316c67677076306b7964633777397071616b78716468393332613676653474366d386561376a30222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a223130303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383332222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323633227d2c226d656d6f223a22227d",signing_payload:null,signed:"0a91010a8e010a1c2f636f736d6f732e62616e6b2e763162657461312e4d736753656e64126e0a2d636f736d6f73313738366a6a6b6835786b343376636d72633439307a6e34386668386e6c303274637572306365122d636f736d6f73316c67677076306b7964633777397071616b78716468393332613676653474366d386561376a301a0e0a057561746f6d1205313030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a210269bc2f2b61cdddb0bb2cf169d5fad0afc19326aa13d2bf967ee3092f7ade88f712040a020801182912130a0d0a057561746f6d12043138333210afbc041a40f1278b4c8dfe9282dac0134818dde62ed4ec75fe779b84946ff0b8190c10a6366987d6b4397b9a5e38ece9c4d740d0351ad359a0716616c6d7d8ee8679e2d576",hash:"F2EFCF0F3D5D6C34E87F82AC03C24118D79278F64C1B1B7DAE9A43CE1CB703F2",status:"confirmed",error:null,signatures:[{account_address:"cosmos1786jjkh5xk43vcmrc490zn48fh8nl02tcur0ce",signature:""}]}},network_code:"cosmos",chain_code:"testnet",created_at:"2022-10-25T18:06:03.248Z",updated_at:"2022-10-25T18:14:32.532Z"}}}],service:"staking-api",networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"cosmos",proxy:"https://api-service-proxy.paulpomerleau.workers.dev",mdxType:"APIMethods"}))}p.isMDXComponent=!0}}]);