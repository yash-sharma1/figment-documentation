"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[8568],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||r;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7127:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={title:"Submit Staking Data",slug:"/guides/staking-api/polygon/delegate/submit-staking-data"},l=void 0,o={unversionedId:"guides/staking-api/Polygon/delegate/submit-staking-data",id:"guides/staking-api/Polygon/delegate/submit-staking-data",title:"Submit Staking Data",description:"After creating a new staking flow, submit the staking account data. Collect the required inputs. Send a PUT request to /api/v1/flows/[:flow_id]/next to proceed to the next step.",source:"@site/docs/guides/staking-api/Polygon/delegate/2_submit-staking-data.mdx",sourceDirName:"guides/staking-api/Polygon/delegate",slug:"/guides/staking-api/polygon/delegate/submit-staking-data",permalink:"/guides/staking-api/polygon/delegate/submit-staking-data",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Submit Staking Data",slug:"/guides/staking-api/polygon/delegate/submit-staking-data"},sidebar:"docsSidebar",previous:{title:"Create New Delegation Flow",permalink:"/guides/staking-api/polygon/delegate/create-new-flow"},next:{title:"Submit Staking Allowance Data",permalink:"/guides/staking-api/polygon/delegate/submit-staking-allowance-data"}},s={},p=[{value:"Parameters",id:"parameters",level:3},{value:"Sample cURL Request",id:"sample-curl-request",level:3},{value:"Response",id:"response",level:3},{value:"Sample Response",id:"sample-response",level:4}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"After creating a new staking flow, submit the staking account data. Collect the required inputs. Send a ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT")," request to ",(0,i.kt)("inlineCode",{parentName:"p"},"/api/v1/flows/[:flow_id]/next")," to proceed to the next step."),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," Name of the action to execute (required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"inputs")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"delegator_address")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," The delegating address (required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validator_address")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," The address of the validator smart contract to which you want to delegate your tokens (required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"amount")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," ","\u2014"," The amount of MATIC to be delegated (required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minimum_shares_to_mint")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," The minimum number of shares of the delegation pool to be minted. If the exchange rate results in fewer shares being minted, the transaction will fail (optional)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"max_slippage_percentage")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," The maximum slippage you are willing to accept (optional).")))),(0,i.kt)("h3",{id:"sample-curl-request"},"Sample cURL Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{5-10}","{5-10}":!0},'curl -X PUT \'https://polygon-slate.datahub.figment.io/api/v1/flows/e6dc662e-f77c-4235-9b28-7141d90c8ab8/next\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: <api_key>\' \\\n-d \'{\n  "name": "assign_staking_data",\n  "inputs": {\n    "delegator_address": "0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",\n    "validator_address": "0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",\n    "amount": "1"\n  }\n}\'\n')),(0,i.kt)("h3",{id:"response"},"Response"),(0,i.kt)("p",null,"In the response received from the Staking API we see one possible ",(0,i.kt)("inlineCode",{parentName:"p"},"action"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"create_allowance_tx")," ","\u2014"," If an allowance transaction is needed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"create_delegate_tx")," ","\u2014"," If no further allowance is needed.")),(0,i.kt)("p",null,"Assuming an allowance is needed, we will proceed with ",(0,i.kt)("inlineCode",{parentName:"p"},"create_allowance_transaction")," which indicates two optional inputs to collect:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gas_limit")," ","\u2014"," The gas limit for the transaction."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gas_price")," ","\u2014"," The highest gas price you will pay for the transaction.")),(0,i.kt)("h4",{id:"sample-response"},"Sample Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{6,9,25}","{6,9,25}":!0},'{\n  "id": "e6dc662e-f77c-4235-9b28-7141d90c8ab8",\n  "state": "create_allowance_tx",\n  "actions": [\n    {\n      "name": "create_allowance_tx",\n      "inputs": [\n        {\n          "name": "gas_limit",\n          "display": "Gas Limit",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "numericality",\n              "options": {\n                "allow_nil": true,\n                "only_integer": true,\n                "greater_than": 0\n              }\n            }\n          ]\n        },\n        {\n          "name": "gas_price",\n          "display": "Gas Price",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "numericality",\n              "options": {\n                "allow_nil": true,\n                "greater_than": 0\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  "data": {\n    "delegator_address": "0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",\n    "validator_address": "0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",\n    "amount": "1.0",\n    "minimum_shares_to_mint": 0,\n    "max_slippage_percentage": null,\n    "exchange_rate": null,\n    "exchange_rate_precision": null,\n    "allowance_transaction": null,\n    "delegate_transaction": null\n  },\n  "network_code": "polygon",\n  "chain_code": "testnet",\n  "created_at": "2022-10-06T22:57:14.491Z",\n  "updated_at": "2022-10-07T17:11:03.674Z"\n}\n')))}u.isMDXComponent=!0}}]);