"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[2324],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>m});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),d=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=r,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return t?n.createElement(f,o(o({ref:a},c),{},{components:t})):n.createElement(f,o({ref:a},c))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>o});var n=t(7294),r=t(6010);const i="tabItem_Ymn6";function o(e){let{children:a,hidden:t,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:t},a)}},5488:(e,a,t)=>{t.d(a,{Z:()=>m});var n=t(7462),r=t(7294),i=t(6010),o=t(2389),l=t(7392),s=t(7094),d=t(2466);const c="tabList__CuJ",u="tabItem_LNqP";function p(e){var a;const{lazy:t,block:o,defaultValue:p,values:m,groupId:f,className:b}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??h.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),g=(0,l.l)(y,((e,a)=>e.value===a.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===p?p:p??(null==(a=h.find((e=>e.props.default)))?void 0:a.props.value)??h[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:v}=(0,s.U)(),[E,x]=(0,r.useState)(k),N=[],{blockElementScrollPositionUntilNextRender:T}=(0,d.o5)();if(null!=f){const e=w[f];null!=e&&e!==E&&y.some((a=>a.value===e))&&x(e)}const P=e=>{const a=e.currentTarget,t=N.indexOf(a),n=y[t].value;n!==E&&(T(a),x(n),null!=f&&v(f,String(n)))},I=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{const a=N.indexOf(e.currentTarget)+1;t=N[a]??N[0];break}case"ArrowLeft":{const a=N.indexOf(e.currentTarget)-1;t=N[a]??N[N.length-1];break}}null==(a=t)||a.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},b)},y.map((e=>{let{value:a,label:t,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===a?0:-1,"aria-selected":E===a,key:a,ref:e=>N.push(e),onKeyDown:I,onFocus:P,onClick:P},o,{className:(0,i.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":E===a})}),t??a)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==E})))))}function m(e){const a=(0,o.Z)();return r.createElement(p,(0,n.Z)({key:String(a)},e))}},3811:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var n=t(7462),r=(t(7294),t(3905)),i=t(5488),o=t(5162);const l={title:"Using the Rewards API",sidebar_position:7},s=void 0,d={unversionedId:"quickstart/rewards-api",id:"quickstart/rewards-api",title:"Using the Rewards API",description:"The Rewards API queries staking rewards data. By staking on a validator, a user earns rewards while securing the network. Indexing and querying this data is challenging and very time-consuming on your own; the Rewards API is your gateway to succinct rewards data on a daily basis or by epoch.",source:"@site/docs/quickstart/rewards-api.mdx",sourceDirName:"quickstart",slug:"/quickstart/rewards-api",permalink:"/quickstart/rewards-api",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Using the Rewards API",sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Using the Transaction Search API",permalink:"/quickstart/transaction-search-api"},next:{title:"Using the Staking API",permalink:"/quickstart/staking-api"}},c={},u=[{value:"Authentication",id:"authentication",level:2},{value:"Requests",id:"requests",level:2},{value:"Example Requests",id:"example-requests",level:4},{value:"API Reference",id:"api-reference",level:2}],p={toc:u};function m(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The Rewards API queries staking rewards data. By staking on a validator, a user earns rewards while securing the network. Indexing and querying this data is challenging and very time-consuming on your own; the Rewards API is your gateway to succinct rewards data on a daily basis or by epoch.")),(0,r.kt)("h2",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"Read about the authentication ",(0,r.kt)("a",{parentName:"p",href:"/quickstart/api-authentication"},"HERE")),(0,r.kt)("h2",{id:"requests"},"Requests"),(0,r.kt)("p",null,"You can send an HTTP ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request to the endpoint to fetch rewards data."),(0,r.kt)("p",null,"The JSON payload must include the following parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accounts"),": An array containing one or more accounts addresses"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"start"),": The start of epcoh/time for collecting rewards data, epoch should be in integer format (Rewards by Epoch) and timestamp in YYYY-MM-DD format (Rewards by Day)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"end"),": The end of epoch/time for collecting rewards data, epoch should in integer format (Rewards by Epoch) and timestamp in YYYY-MM-DD format (Rewards by Day)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"aggregation"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"daily")," (only for Reward by Day)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example JSON for a Rewards API query"',title:'"Example',JSON:!0,for:!0,a:!0,Rewards:!0,API:!0,'query"':!0},'{\n  "accounts": [\n    "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0"\n  ],\n  "start": "2022-11-06",\n  "end": "2022-11-07",\n  "aggregation": "daily"\n}\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you want to fetch rewards by ",(0,r.kt)("inlineCode",{parentName:"p"},"epoch"),", make sure that ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end")," align with that epoch","\u2014","otherwise you may get an empty response."),(0,r.kt)("p",{parentName:"admonition"},"If you want to fetch rewards by ",(0,r.kt)("inlineCode",{parentName:"p"},"day"),", keep the ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end")," reasonably close together (within five days). Large ranges will cause latency in the response.")),(0,r.kt)("h4",{id:"example-requests"},"Example Requests"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In example requests, the text ",(0,r.kt)("inlineCode",{parentName:"p"},"API-KEY")," must be replaced with your actual credentials for it to function. Similarly, you would need to replace the ",(0,r.kt)("em",{parentName:"p"},"value")," of the constant ",(0,r.kt)("inlineCode",{parentName:"p"},"API_KEY")," in any code examples.")),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",label:"curl",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Example curl request to Rewards API for Ethereum Mainnet"',title:'"Example',curl:!0,request:!0,to:!0,Rewards:!0,API:!0,for:!0,Ethereum:!0,'Mainnet"':!0},'curl -X GET https://eth-rewards.datahub.figment.io/rewards \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: API-KEY\' \\\n-d \'{\n  // highlight-start\n  "accounts": [\n    "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0"\n  ],\n  "start": "2022-11-06",\n  "end": "2022-11-07",\n  "aggregation": "daily"\n  // highlight-end\n}\'\n'))),(0,r.kt)(o.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example JavaScript Fetch request to Rewards API for Ethereum Mainnet"',title:'"Example',JavaScript:!0,Fetch:!0,request:!0,to:!0,Rewards:!0,API:!0,for:!0,Ethereum:!0,'Mainnet"':!0},'const API_KEY = "YOUR API KEY";\n\nvar myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Authorization", API_KEY);\n\nvar raw = JSON.stringify({\n  // highlight-start\n  accounts: [\n    "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0",\n  ],\n  start_time: "2022-11-06",\n  end_time: "2022-11-07",\n  aggregation: "daily",\n  // highlight-end\n});\n\nvar requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow",\n};\n\nfetch(`https://eth-rewards.datahub.figment.io/rewards`, requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.log("error", error));\n')))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click to view example response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example Rewards API JSON response"',title:'"Example',Rewards:!0,API:!0,JSON:!0,'response"':!0},'{\n  "data": [\n    {\n      "accounts": [\n        "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0"\n      ],\n      "chain_id": "mainnet",\n      "rewards": [\n        {\n          "text": "0.003154426 ETH",\n          "currency": "ETH",\n          "numeric": 3154426000000000,\n          "exp": 18,\n          "type": "staking",\n          "recipient": "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0"\n        }\n      ],\n      "validator": "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0",\n      "timestamp": "2022-11-06T00:00:00Z"\n    },\n    {\n      "accounts": [\n        "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0"\n      ],\n      "chain_id": "mainnet",\n      "rewards": [\n        {\n          "text": "0.033305945 ETH",\n          "currency": "ETH",\n          "numeric": 33305945000000000,\n          "exp": 18,\n          "type": "staking",\n          "recipient": "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0"\n        },\n        {\n          "text": "0.182060023767382816 ETH",\n          "currency": "ETH",\n          "numeric": 182060023767382820,\n          "exp": 18,\n          "type": "tips",\n          "recipient": "0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074",\n          "sender": "0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5",\n          "slot": 5083891,\n          "block": 15918695,\n          "is_mev": true,\n          "mev_service": "Flashbots"\n        }\n      ],\n      "validator": "0x968c329ed829636a0bbbb57a25d9634ffd0d17bc1ff33adf93fd6a98920a82a83de930b9f2dddaebc4104ac90581ada0",\n      "timestamp": "2022-11-07T00:00:00Z"\n    }\n  ],\n  "meta": {\n    "network": "ethereum",\n    "period_unit": "daily"\n  }\n}\n'))),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,"View the full Rewards API reference ",(0,r.kt)("a",{parentName:"p",href:"/api-reference/rewards-api/"},"HERE")),(0,r.kt)("hr",null))}m.isMDXComponent=!0}}]);