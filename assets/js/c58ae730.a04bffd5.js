"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[2307],{2750:(e,t,a)=>{a.d(t,{ZP:()=>s});var n=a(7462),i=(a(7294),a(3905)),r=a(5488),d=a(5162),o=a(7643);const c={toc:[{value:"Authentication",id:"authentication",level:3}]};function s(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"authentication"},"Authentication"),(0,i.kt)("div",null,"API calls require authentication with API key via ",(0,i.kt)("code",null,"Authorization")," ","request header or ",(0,i.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,i.kt)("strong",null,a.network," ",a.service)," ","endpoint, hosted at ",(0,i.kt)("code",null,a.url),(0,i.kt)("br",null),(0,i.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(d.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},'fetch("'+a.url+'", {\n    method: \'POST\', // can also be \'GET\', \'PUT\' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is \'POST\'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})')),(0,i.kt)(d.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},'fetch("'+a.url+"\", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        \"Content-Type\": \"application/json\" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})")),(0,i.kt)(d.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},"curl -X POST '"+a.url+"' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'")),(0,i.kt)(d.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},"curl -X POST '"+a.url+"' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'"))))}s.isMDXComponent=!0},3976:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294),i=a(6775);function r(e){let{network:t,networks:a,methods:r,service:d}=e;const o=(0,i.TH)(),c=(0,i.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:t,onChange:e=>{c.push(o.pathname.replace(/\/[^\/]+$/,"/"+e.target.value))}},a.map((e=>n.createElement("option",{key:e.value+"--n-option",value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:o.hash.replace("#","")||"",onChange:e=>{c.push("#"+e.target.value)}},r.map((e=>n.createElement("option",{key:e.name+"--m-hash",value:e.name.toLowerCase()},e.name)))))}},7297:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);function i(e){let{network:t,service:a}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=t;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=a.label,n.querySelector(".breadcrumbs__link").href=a.link,e.insertAdjacentElement("beforebegin",n)}),[t]),n.createElement(n.Fragment,null)}},3213:(e,t,a)=>{a.d(t,{S:()=>R});var n=a(7462),i=a(7294),r=a(1099),d=a(7748),o=a(460),c=a.n(o),s=a(3746),l=a(6412);const p={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function f(e){let{children:t="",header:a,actions:r,disabled:d=!1,status:o,onValueChange:f}=e;const b=(0,l.p)(),h=(0,i.useRef)(null);(0,i.useEffect)((()=>{var e;const t=null==(e=h.current)?void 0:e.querySelector("textarea"),a=e=>{const t=e.target;t.style.width=t.scrollWidth+"px"};return t.addEventListener("input",a),()=>t.removeEventListener("input",a)}),[]);return i.createElement("div",{ref:h},i.createElement(u,{actions:r,status:o},a),i.createElement("div",{className:p.Container},i.createElement(c(),{value:t,onValueChange:f,highlight:function(e){return void 0===e&&(e=""),i.createElement(s.ZP,(0,n.Z)({},s.lG,{theme:b,code:e,language:"json"}),(e=>{let{className:t,style:a,tokens:r,getLineProps:d,getTokenProps:o}=e;return i.createElement("div",{className:p.Code},r.map(((e,t)=>i.createElement("div",(0,n.Z)({key:t},d({line:e,key:t}),{className:p.Line}),i.createElement("span",{className:p.LineContent},e.map(((e,t)=>i.createElement("span",(0,n.Z)({key:t},o({token:e,key:t}))))))))))}))},disabled:d,ignoreTabKey:!0,padding:10,style:{...b.plain,overflow:"auto"},className:p.Editor})))}function u(e){let{children:t,actions:a=[],status:n}=e;return i.createElement("div",{className:p.Header,"data-status":n},i.createElement("span",null,t),i.createElement("span",{className:p.Actions},a.map(((e,t)=>{let{title:a,onClick:n,Component:r=a}=e;return i.createElement("button",{className:p.HeaderButton,key:t+":"+a,title:a,onClick:n},r)}))))}var b=a(195);const h="overlayHeaderButton_IGf5";const m=function(e,t){const a=(0,i.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[r,d]=(0,i.useReducer)(((e,t)=>{switch(t.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:t.payload,loading:!1};case"error":return{...n,error:t.payload,loading:!1};default:return e}}),n);return{...r,fetchData:async function(n,i){void 0===i&&(i={}),d({type:"loading"});try{const r=await fetch(e+(n?"/"+n:""),{...t,...i});if(!r.ok){let e,t,a;try{a=JSON.parse(await r.text()),e=await r.json(),t=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(t,null,2)||JSON.stringify(a,null,2)||r.statusText)}const o=await r.json();if(a.current)return;return d({type:"fetched",payload:o}),o}catch(r){if(a.current)return;return d({type:"error",payload:r.message}),null}}}};var g,y=a(7643),_=a(4672);function w(){return w=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},w.apply(this,arguments)}const v=e=>{let{title:t,titleId:a,...n}=e;return i.createElement("svg",w({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":a},n),t?i.createElement("title",{id:a},t):null,g||(g=i.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var k;function x(){return x=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},x.apply(this,arguments)}const E=e=>{let{title:t,titleId:a,...n}=e;return i.createElement("svg",x({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":a},n),t?i.createElement("title",{id:a},t):null,k||(k=i.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function T(e){let{req:t,res:a,interactive:n,endpoint:r}=e;const[d,o]=(0,i.useState)(C(t.body)),[c,s]=(0,i.useState)(t.query),[l,p]=(0,i.useState)(S(a.body)),u="string"==typeof t.body&&0==t.body.indexOf("query"),{data:g,error:w,loading:k,fetchData:x}=m(r,{method:t.method,headers:{...t.headers,"Content-Type":u?"application/graphql":"application/json"},body:C(t.body)}),[T,P]=(0,i.useState)(null);(0,i.useEffect)((()=>{k?P("LOADING"):w||null!=g&&g.error?P("ERROR"):g&&P("SUCCESS")}),[g,w,k]);const q=[n?{title:"Run request",onClick:async()=>{const e=await x(c,{body:d});e&&p(S(e))},Component:i.createElement(i.Fragment,null,i.createElement(v,null)," Run")}:null,{title:"Copy",onClick:()=>(0,b.Z)(d),Component:i.createElement(_.Z,{code:"",className:h})},n?{title:"Reset",onClick:()=>{P(null),s(t.query),o(C(t.body)),p(S(a.body))},Component:i.createElement(E,null)}:null].filter((e=>!!e));return i.createElement(i.Fragment,null,i.createElement(f,{header:"GET"===t.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:q,disabled:!n,onValueChange:e=>{n&&("GET"===t.method?s(e):"POST"===t.method&&o(e))}},"GET"===t.method?c:d),i.createElement(y.Z,{title:T?"Response":"Example Response",language:"json"},w?""+w:l))}function S(e){return JSON.stringify(e,null,2)}function C(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const P="heading_REER";var q=a(9960),A=a(3905);const N={toc:[]};function O(e){let{components:t,...a}=e;return(0,A.kt)("wrapper",(0,n.Z)({},N,a,{components:t,mdxType:"MDXLayout"}),(0,A.kt)("details",{open:a.accordionOpen?"open":void 0},(0,A.kt)("summary",null,(0,A.kt)("span",{className:"open"},"Specification"),(0,A.kt)("span",{className:"closed"},"View Specification")),(0,A.kt)(r.D,{mdxType:"ReactMarkdown"},a.details)))}function Z(e){let{name:t,content:a="",interactive:n,request:d,accordionOpen:o=!1,response:c,endpoint:s}=e;["Rewards (by epoch)","Rewards (daily)"].includes(t)&&(d.body={...d.body,start_time:new Date(Date.now()-("Rewards (by epoch)"===t?1728e5:864e5)).toISOString().split("T")[0],end_time:(new Date).toISOString().split("T")[0]});const[l,...p]=a.trim().split(/\n+/),f=p.join("\n");return i.createElement(i.Fragment,null,i.createElement("h2",{id:t.toLowerCase(),className:P,"data-method":d.method},i.createElement(q.Z,{to:"#"+t.toLowerCase()},t)),i.createElement(r.D,null,l),i.createElement(T,{req:d,res:c,interactive:n,endpoint:s}),i.createElement(O,{details:f,accordionOpen:o}),i.createElement("hr",null))}function R(e){let{network:t,methods:a,service:r,proxy:o}=e;return i.createElement(i.Fragment,null,i.createElement("h3",null,"Available Methods"),a.map(((e,a)=>i.createElement(Z,(0,n.Z)({key:t+a},e,{endpoint:o+"/"+r+"/"+t,accordionOpen:"node-api"!==r})))),i.createElement(d.Z,null))}O.isMDXComponent=!0},305:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>b,frontMatter:()=>c,metadata:()=>l,toc:()=>f});var n=a(7462),i=(a(7294),a(3905)),r=a(3213),d=a(3976),o=(a(7297),a(2750));const c={title:"Ethereum",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Ethereum",image:"img/logo.svg",keywords:["Staking API","Ethereum"]},s="Staking API - Ethereum",l={unversionedId:"api-reference/staking-api/ethereum",id:"api-reference/staking-api/ethereum",title:"Ethereum",description:"Staking API - Ethereum",source:"@site/docs/api-reference/staking-api/ethereum.mdx",sourceDirName:"api-reference/staking-api",slug:"/api-reference/staking-api/ethereum",permalink:"/api-reference/staking-api/ethereum",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Ethereum",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Ethereum",image:"img/logo.svg",keywords:["Staking API","Ethereum"]},sidebar:"docsSidebar"},p={},f=[],u={toc:f};function b(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"staking-api---ethereum"},"Staking API - Ethereum"),(0,i.kt)(d.Z,{service:"staking-api",methods:[{name:"New Staking Flow"},{name:"Get Staking Flow Status"},{name:"Create Deposit Transaction"},{name:"Refresh Deposit Transaction"},{name:"Sign Deposit Transaction"}],networks:[{label:"Avalanche",value:"avalanche"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Solana",value:"solana"}],network:"ethereum",mdxType:"ApiReferenceNav"}),(0,i.kt)(o.ZP,{url:"https://eth-slate.datahub.figment.io",network:"Ethereum",service:"Staking API",mdxType:"MakingCalls"}),(0,i.kt)(r.S,{methods:[{name:"New Staking Flow",content:"Create a new flow with a `POST` request to `/api/v1/flows` to initiate the staking process.\n\n### Parameters\n\n*   `flow` - `object`\n    *   `network_code` - `string` Network this flow operates on (ex. ethereum) (required)\n    *   `chain_code` - `string` Chain this flow operates on (ex. goerli-prater) (required)\n    *   `operation` `string` The operation to -perform (ex. staking) (required)\n    *   `version` - `string` API version to use (ex. v1) (optional)\n\n### Response\n\n*   `id` - `string` Id of the newly created flow.\n*   `state` - `string` The current state of the flow i.e., `initialized`.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{auth:{type:"noauth"},method:"POST",header:[{key:"Authorization",value:"{{STAGING_API_KEY}}",type:"text"}],body:{flow:{network_code:"ethereum",chain_code:"goerli-prater",operation:"staking",version:"v1"}},url:"https://eth-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"New Staking Flow",status:"OK",code:200,body:{id:"610eb358-d219-47f1-9d8c-6bbd7ee32e15",state:"initialized",actions:[{name:"create_deposit_tx",inputs:[{name:"funding_account_address",display:"Funding Account Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"validator_pub_key",display:"Validator Pub Key",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"withdrawal_credentials",display:"Withdrawal Credentials",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"signature",display:"Signature",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"deposit_data_root",display:"Deposit Data Root",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{funding_account_address:null,validator_pub_key:null,withdrawal_credentials:null,signature:null,deposit_data_root:null,amount:"32.0",gas_price:null,gas_limit:null,deposit_transaction:null},network_code:"ethereum",chain_code:"goerli-prater",created_at:"2022-08-15T18:02:49.820Z",updated_at:"2022-08-15T18:02:49.820Z"}}},{name:"Get Staking Flow Status",content:"Get the status of the existing flow using the `flow_id` from the previous step.\n\n### Parameters\n\n*   `flow_id` - `string` Pass the Flow ID you received in the response when creating the flow in the GET request URL, ex. `/flows/69d02e2c-bbde-4b09-bbe9-2be287a9a6de`.\n    \n\n### Response\n\n*   `id` - `string` ID of the flow.\n*   `state` - `string` The current state of the flow, i.e., `initialized`.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{method:"GET",header:[],url:"https://eth-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{ethStakingFlowId}}"},interactive:!1,response:{name:"Get Staking Flow Status",status:"OK",code:200,body:{id:"610eb358-d219-47f1-9d8c-6bbd7ee32e15",state:"initialized",actions:[{name:"create_deposit_tx",inputs:[{name:"funding_account_address",display:"Funding Account Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"validator_pub_key",display:"Validator Pub Key",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"withdrawal_credentials",display:"Withdrawal Credentials",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"signature",display:"Signature",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"deposit_data_root",display:"Deposit Data Root",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"hex",options:{}}]},{name:"gas_limit",display:"Gas Limit",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,only_integer:!0,greater_than:0}}]},{name:"gas_price",display:"Gas Price",description:"",type:"string",validations:[{type:"numericality",options:{allow_nil:!0,greater_than:0}}]}]}],data:{funding_account_address:null,validator_pub_key:null,withdrawal_credentials:null,signature:null,deposit_data_root:null,amount:"32.0",gas_price:null,gas_limit:null,deposit_transaction:null},network_code:"ethereum",chain_code:"goerli-prater",created_at:"2022-08-15T18:02:49.820Z",updated_at:"2022-08-15T18:02:49.820Z"}}},{name:"Create Deposit Transaction",content:"After collecting the required inputs, send a`PUT` request to `/api/v1/flows/[:flow_id]/next` to move on to the next step in the flow.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array` (required).\n    *   `funding_account_address` - `string` The wallet ETH will be originating from (required).\n    *   `validator_pub_key` - `string` The public key of the validator that the ETH is to be deposited to. (required).\n    *   `withdrawal_credentials` - `string` The withdrawal address for the given validator. (required).\n    *   `signature` - `string` A BLS proof of possession i.e., a proof that the private key corresponding to the `validator_pub_key` is known by the signer (required).\n    *   `deposit_data_root` - `string` Uniquely identifies the set of deposits made so far (required).\n    *   `amount` - `number` Number of tokens you want to delegate (required).\n    *   `gas_price` - `string` Adjust the gas price (optional).\n    *   `gas_limit` - `string` Adjust the gas limit (optional).\n\n### Response\n\n*   `id` - `string` ID of the newly created flow.\n*   `state` - `string` Current state of the flow.\n*   `actions` - `array` The actions array contains the name of the next action in the flow and details of the expected inputs in the data field.\n    \n\n* * *",request:{method:"PUT",header:[],body:"",url:"https://eth-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{ethStakingFlowId}}/next"},interactive:!1,response:{name:"200 - deposit_tx_signature",body:{id:"8307b0d1-fc17-45b1-b540-2d9c31578d99",state:"deposit_tx_signature",actions:[{name:"refresh_deposit_tx",inputs:[]},{name:"sign_deposit_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594"],transaction_payload:"0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594"],transaction_payload:"0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0",signing_payload:"0xfa2fde357ca51a2f2c2b9aab0b00451d0b7ba8772837b2c6fab7a5371d9a509e"}]}],data:{funding_account_address:"0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594",validator_pub_key:"0xa7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549",withdrawal_credentials:"0x010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca",signature:"0x876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65b",deposit_data_root:"0xd446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f91",amount:"32.0",gas_price:null,gas_limit:null,deposit_transaction:{raw:"0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0",signing_payload:"0xfa2fde357ca51a2f2c2b9aab0b00451d0b7ba8772837b2c6fab7a5371d9a509e",signed:null,hash:null,status:null,error:null,signatures:null}},network_code:"ethereum",chain_code:"goerli-prater",created_at:"2022-08-04T03:56:12.111Z",updated_at:"2022-08-04T04:11:54.830Z"}}},{name:"Refresh Deposit Transaction",content:"Use `refresh_deposit_tx` if you need to get a fresh version of the transaction Payload (for example, if the nonce needs to be updated).\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array` There are no inputs for this action (optional).\n    \n\n### Response\n\nThe transaction payload is refreshed.\n\n* * *",request:{method:"PUT",header:[],body:{name:"refresh_deposit_tx",inputs:null},url:"https://eth-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{ethStakingFlowId}}/next"},interactive:!1,response:{name:"refresh_deposit_tx",body:{id:"8307b0d1-fc17-45b1-b540-2d9c31578d99",state:"deposit_tx_signature",actions:[{name:"refresh_deposit_tx",inputs:[]},{name:"sign_deposit_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[],signers:["0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594"],transaction_payload:"0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594"],transaction_payload:"0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0",signing_payload:"0xfa2fde357ca51a2f2c2b9aab0b00451d0b7ba8772837b2c6fab7a5371d9a509e"}]}],data:{funding_account_address:"0x7362cC429Fd2e2abB3F1217c660967E6Ed52B594",validator_pub_key:"0xa7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549",withdrawal_credentials:"0x010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca",signature:"0x876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65b",deposit_data_root:"0xd446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f91",amount:"32.0",gas_price:null,gas_limit:null,deposit_transaction:{raw:"0x02f901d605018459682f008459682f1882e83394ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120d446d3cfa7e6783d3963d66e37003e394d53282226489ec8ac62ce0560063f910000000000000000000000000000000000000000000000000000000000000030a7d2f0af53247c58acbbaf272e538aff10cdaa61490550882bb2095e3410cd9db46c86905c0d8df50fda3e62670a1549000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000287ab3d1da953b1a53b19f859dd902b5bbff79ca0000000000000000000000000000000000000000000000000000000000000060876409ab394841bbb8ab7f6f04641443f0ecc0f9c9800484f90c5c2795962b6426c66577853158d626a273ccc554e7341016fc094791d106f0880ccbdcdcf68017bc861286b0d5b03eaa04d65f5e834efdb4ec72114497ad61c50e5254d9e65bc0",signing_payload:"0xfa2fde357ca51a2f2c2b9aab0b00451d0b7ba8772837b2c6fab7a5371d9a509e",signed:null,hash:null,status:null,error:null,signatures:null}},network_code:"ethereum",chain_code:"goerli-prater",created_at:"2022-08-04T03:56:12.111Z",updated_at:"2022-08-04T04:11:54.830Z"}}},{name:"Sign Deposit Transaction",content:"Submit a signed transaction payload ready to be broadcast to the network.\n\n### Parameters\n\n*   `name` - `string` Name of the action to execute (required).\n*   `inputs` - `array`\n    *   `transaction_payload` - `string` Transaction payload can be found in the response after creating the transaction. (required). **OR**\n    *   `signatures` - `array` An array of signatures. Staking API will sign the payload if this is provided (optional).\n\n### Response\n\nThe transaction is broadcast to the network. Once it is confirmed, the staking flow is completed.\n\n* * *",request:{method:"PUT",header:[],body:{name:"sign_deposit_tx",inputs:{transaction_payload:"0x02f901d605808459682f008459682f1c82dc9e94ff50ed3d0ec03ac01d4c79aad74928bff48a7b2b8901bc16d674ec800000b901a422895118000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120021db2ee51da4e420dac8310928e2c3c25b7f8b5056dc792a206e680a48308230000000000000000000000000000000000000000000000000000000000000030a0b60b10bdae3bdc526586163bc83a928f14c9bcb8244816f23395692a7cd613e0f3ea23aa295ae0467dc65002c95640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020010000000000000000000000dc94dbfac39af945c8186a6b3fc738c5ce97b010000000000000000000000000000000000000000000000000000000000000006088cce9fcadc43c58db4d5c0e7101cb27537be0a37b1e2fb2c096e72aee14b3bce20fca87ff11f92744abc71a221a9ceb11f52e1cfae59af00e7e42f83d482901223a100f88b532e19bc776786cd4baaddb6ec4290fdedfc3ebefcbf44fe7e413c0",signatures:[]}},url:"https://eth-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{ethStakingFlowId}}/next"},interactive:!1,response:{name:"200 - deposited",body:""}}],service:"staking-api",networks:[{label:"Avalanche",value:"avalanche"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Solana",value:"solana"}],network:"ethereum",proxy:"https://api-service-proxy.paulpomerleau.workers.dev",mdxType:"APIMethods"}))}b.isMDXComponent=!0}}]);