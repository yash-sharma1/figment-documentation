(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[686],{72750:(e,a,t)=>{"use strict";t.d(a,{ZP:()=>i});var n=t(87462),o=(t(67294),t(3905)),s=t(65488),r=t(85162),c=t(57643);const d={toc:[]};function i(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("br",null),(0,o.kt)("details",null,(0,o.kt)("summary",null,(0,o.kt)("span",{className:"open"},"API Authentication"),(0,o.kt)("span",{className:"closed"},"Click to view API Authentication details")),(0,o.kt)("div",null,"API calls require authentication with API key via ",(0,o.kt)("code",null,"Authorization")," ","request header or ",(0,o.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,o.kt)("strong",null,t.network," ",t.service)," ","endpoint, hosted at ",(0,o.kt)("code",null,t.url),(0,o.kt)("br",null),(0,o.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,o.kt)(s.Z,{mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,o.kt)(c.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}${t.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(r.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,o.kt)(c.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}/apikey/{{apikey}}${t.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(r.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,o.kt)(c.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}${t.route}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,o.kt)(r.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,o.kt)(c.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}/apikey/{{apikey}}${t.route}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`)))))}i.isMDXComponent=!0},33976:(e,a,t)=>{"use strict";t.d(a,{Z:()=>s});var n=t(67294),o=t(16550);function s(e){let{network:a,networks:t,methods:s,service:r}=e;const c=(0,o.TH)(),d=(0,o.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:a,onChange:e=>{d.push(c.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},t.map((e=>n.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:c.hash.replace("#","")||"",onChange:e=>{d.push(`#${e.target.value}`)}},s.map((e=>n.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},27297:(e,a,t)=>{"use strict";t.d(a,{Z:()=>o});var n=t(67294);function o(e){let{network:a,service:t}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=a;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=t.label,n.querySelector(".breadcrumbs__link").href=t.link,e.insertAdjacentElement("beforebegin",n)}),[a]),n.createElement(n.Fragment,null)}},89638:(e,a,t)=>{"use strict";t.d(a,{S:()=>q});var n=t(87462),o=t(67294),s=t(58538),r=t(67748),c=t(30381),d=t.n(c);const i={days:()=>({start:new Date(Date.now()-864e5).toISOString().split("T")[0],end:(new Date).toISOString().split("T")[0]}),polkadot(){const e=d()("2022-10-26","YYYY-MM-DD"),a=d()().diff(e,"days")+1,t=876+Math.ceil(1*a);return{start:t-30,end:t}},solana(){const e=Math.ceil(10.5),a=d()("2022-10-25","YYYY-MM-DD"),t=d()().diff(a,"days")+1,n=363+Math.ceil(.35*t);return{start:n-e,end:n}},near(){const e=4593.6*25,a=Math.ceil(7*e),t=d()("2022-10-25","YYYY-MM-DD"),n=d()().diff(t,"days")+1,o=76953090+Math.ceil(n*e);return{start:o-a-Math.ceil(100*e),end:o+Math.ceil(100*e)}}};var l=t(40460),b=t.n(l),h=t(23746),f=t(66412);const u={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function m(e){let{children:a="",header:t,actions:s,disabled:r=!1,status:c,onValueChange:d}=e;const i=(0,f.p)(),l=(0,o.useRef)(null);(0,o.useEffect)((()=>{const e=l.current?.querySelector("textarea"),a=e=>{const a=e.target;a.style.width=a.scrollWidth+"px"};return e.addEventListener("input",a),()=>e.removeEventListener("input",a)}),[]);return o.createElement("div",{ref:l},o.createElement(p,{actions:s,status:c},t),o.createElement("div",{className:u.Container},o.createElement(b(),{value:a,onValueChange:d,highlight:function(e){return void 0===e&&(e=""),o.createElement(h.ZP,(0,n.Z)({},h.lG,{theme:i,code:e,language:"json"}),(e=>{let{className:a,style:t,tokens:s,getLineProps:r,getTokenProps:c}=e;return o.createElement("div",{className:u.Code},s.map(((e,a)=>o.createElement("div",(0,n.Z)({key:a},r({line:e,key:a}),{className:u.Line}),o.createElement("span",{className:u.LineContent},e.map(((e,a)=>o.createElement("span",(0,n.Z)({key:a},c({token:e,key:a}))))))))))}))},disabled:r,ignoreTabKey:!0,padding:10,style:{...i.plain,overflow:"auto"},className:u.Editor})))}function p(e){let{children:a,actions:t=[],status:n}=e;return o.createElement("div",{className:u.Header,"data-status":n},o.createElement("span",null,a),o.createElement("span",{className:u.Actions},t.map(((e,a)=>{let{title:t,onClick:n,Component:s=t}=e;return o.createElement("button",{className:u.HeaderButton,key:`${a}:${t}`,title:t,onClick:n},s)}))))}var g=t(10195);const y="overlayHeaderButton_IGf5";const A=function(e,a){const t=(0,o.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[s,r]=(0,o.useReducer)(((e,a)=>{switch(a.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:a.payload,loading:!1};case"error":return{...n,error:a.payload,loading:!1};default:return e}}),n);return{...s,fetchData:async function(n,o){void 0===o&&(o={}),r({type:"loading"});try{const s=await fetch(e+(n?`/${n}`:""),{...a,...o});if(!s.ok){let e,a,t;try{t=JSON.parse(await s.text()),e=await s.json(),a=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(a,null,2)||JSON.stringify(t,null,2)||s.statusText)}const c=await s.json();if(t.current)return;return r({type:"fetched",payload:c}),c}catch(s){if(t.current)return;return r({type:"error",payload:s.message}),null}}}};var T,x=t(57643),k=t(44672);function w(){return w=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},w.apply(this,arguments)}const v=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",w({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,T||(T=o.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var j;function B(){return B=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},B.apply(this,arguments)}const _=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",B({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,j||(j=o.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function N(e){let{req:a,res:t,interactive:n,endpoint:s}=e;const[r,c]=(0,o.useState)(P(a.body)),[d,i]=(0,o.useState)(a.query),[l,b]=(0,o.useState)(D(t.body)),h="string"==typeof a.body&&0==a.body.indexOf("query"),{data:f,error:u,loading:p,fetchData:T}=A(s,{method:a.method,headers:{...a.headers,"Content-Type":h?"application/graphql":"application/json"},body:P(a.body)}),[w,j]=(0,o.useState)(null);(0,o.useEffect)((()=>{p?j("LOADING"):u||f?.error?j("ERROR"):f&&j("SUCCESS")}),[f,u,p]);const B=[n?{title:"Run request",onClick:async()=>{const e=await T(d,{body:r});e&&b(D(e))},Component:o.createElement(o.Fragment,null,o.createElement(v,null)," Run")}:null,{title:"Copy",onClick:()=>(0,g.Z)(r),Component:o.createElement(k.Z,{code:"",className:y})},n?{title:"Reset",onClick:()=>{j(null),i(a.query),c(P(a.body)),b(D(t.body))},Component:o.createElement(_,null)}:null].filter((e=>!!e));return o.createElement(o.Fragment,null,o.createElement(m,{header:"GET"===a.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:B,disabled:!n,onValueChange:e=>{n&&("GET"===a.method?i(e):"POST"===a.method&&c(e))}},"GET"===a.method?d:r),o.createElement(x.Z,{title:w?"Response":"Example Response",language:"json"},u?`${u}`:l))}function D(e){return JSON.stringify(e,null,2)}function P(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const I="heading_REER";var R=t(39960),C=t(3905);const O={toc:[]};function U(e){let{components:a,...t}=e;return(0,C.kt)("wrapper",(0,n.Z)({},O,t,{components:a,mdxType:"MDXLayout"}),(0,C.kt)("details",{open:t.accordionOpen?"open":void 0},(0,C.kt)("summary",null,(0,C.kt)("span",{className:"open"},"Specification"),(0,C.kt)("span",{className:"closed"},"View Specification")),(0,C.kt)(s.D,{mdxType:"ReactMarkdown"},t.details)))}function S(e){let{name:a,content:t="",interactive:n,network:r,request:c,accordionOpen:d=!1,response:l,endpoint:b}=e;const h=b.includes("rewards-api"),f=["by day","account","address"].find((e=>a.includes(e))),u=["by epoch","by era"].find((e=>a.includes(e)))||a.startsWith("SOL");if(h&&u){const{start:e,end:a}=i[r]();c.body={...c.body,start:e,end:a}}else if(h&&f){const{start:e,end:a}=i.days();c.body={...c.body,start:e,end:a}}const[m,...p]=t.trim().split(/\n+/),g=p.join("\n");return o.createElement(o.Fragment,null,o.createElement("h2",{id:a.toLowerCase(),className:I,"data-method":c.method},o.createElement(R.Z,{to:`#${a.toLowerCase()}`},a)),o.createElement(s.D,null,m),o.createElement(N,{req:c,res:l,interactive:n,endpoint:b}),o.createElement(U,{details:g,accordionOpen:d}),o.createElement("hr",null))}function q(e){let{network:a,methods:t,service:s,proxy:c}=e;return o.createElement(o.Fragment,null,o.createElement("h3",null,"Available Methods"),t.map(((e,t)=>o.createElement(S,(0,n.Z)({key:a+t},e,{network:a,endpoint:`${c}/${s}/${a}`,accordionOpen:"node-api"!==s})))),o.createElement(r.Z,null))}U.isMDXComponent=!0},32710:(e,a,t)=>{"use strict";t.r(a),t.d(a,{assets:()=>b,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>h});var n=t(87462),o=(t(67294),t(3905)),s=t(89638),r=t(33976),c=(t(27297),t(72750));const d={title:"Polygon",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Node API - Polygon",image:"img/logo.svg",keywords:["Node API","Polygon"]},i="Node API - Polygon",l={unversionedId:"api-reference/node-api/polygon",id:"api-reference/node-api/polygon",title:"Polygon",description:"Node API - Polygon",source:"@site/docs/api-reference/node-api/polygon.mdx",sourceDirName:"api-reference/node-api",slug:"/api-reference/node-api/polygon",permalink:"/api-reference/node-api/polygon",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Polygon",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Node API - Polygon",image:"img/logo.svg",keywords:["Node API","Polygon"]},sidebar:"docsSidebar"},b={},h=[],f={toc:h};function u(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},f,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"node-api---polygon"},"Node API - Polygon"),(0,o.kt)(r.Z,{service:"node-api",methods:[{name:"eth_getBlockByHash"},{name:"eth_getBlockByNumber"},{name:"eth_getBlockTransactionCountByHash"},{name:"eth_getBlockTransactionCountByNumber"},{name:"eth_getUncleCountByBlockHash"},{name:"eth_getUncleCountByBlockNumber"},{name:"eth_getUncleByBlockHashAndIndex"},{name:"eth_getUncleByBlockNumberAndIndex"},{name:"eth_getProof"},{name:"eth_chainId"},{name:"eth_syncing"},{name:"eth_blockNumber"},{name:"eth_call"},{name:"eth_estimateGas"},{name:"eth_gasPrice"},{name:"eth_feeHistory"},{name:"eth_newFilter"},{name:"eth_newBlockFilter"},{name:"eth_newPendingTransactionFilter"},{name:"eth_uninstallFilter"},{name:"eth_getFilterChanges"},{name:"eth_getFilterLogs"},{name:"eth_getLogs"},{name:"eth_getBalance"},{name:"eth_getStorageAt"},{name:"eth_getTransactionCount"},{name:"eth_getCode"},{name:"eth_sendRawTransaction"},{name:"eth_getTransactionByHash"},{name:"eth_getTransactionByBlockHashAndIndex"},{name:"eth_getTransactionByBlockNumberAndIndex"},{name:"eth_getTransactionReceipt"},{name:"web3_clientVersion"},{name:"web3_sha3"},{name:"net_version"},{name:"net_listening"},{name:"net_peerCount"},{name:"debug_traceBlockByHash"},{name:"debug_traceBlockByNumber"},{name:"debug_traceCall"},{name:"debug_traceTransaction"},{name:"txpool_content"},{name:"txpool_inspect"},{name:"txpool_status"},{name:"bor_getAuthor"},{name:"bor_getRootHash"},{name:"bor_getSignersAtHash"},{name:"bor_getCurrentProposer"},{name:"bor_getCurrentValidators"}],networks:[{label:"Arbitrum",value:"arbitrum"},{label:"Avalanche C-Chain",value:"avalanche-c-chain"},{label:"Avalanche P-Chain",value:"avalanche-p-chain"},{label:"Avalanche X-Chain",value:"avalanche-x-chain"},{label:"BNB",value:"bnb"},{label:"Celo",value:"celo"},{label:"Cosmos LCD",value:"cosmos-lcd"},{label:"Cosmos Tendermint RPC",value:"cosmos-tendermint-rpc"},{label:"Ethereum",value:"ethereum"},{label:"Fantom",value:"fantom"},{label:"Kusama Sidecar",value:"kusama-sidecar"},{label:"Mina GraphQL",value:"mina-graphql"},{label:"NEAR",value:"near"},{label:"Optimism",value:"optimism"},{label:"Osmosis LCD",value:"osmosis-lcd"},{label:"Osmosis Tendermint RPC",value:"osmosis-tendermint-rpc"},{label:"Polkadot Sidecar",value:"polkadot-sidecar"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"polygon",mdxType:"ApiReferenceNav"}),(0,o.kt)(c.ZP,{url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",network:"Polygon",service:"Node API",route:"",mdxType:"MakingCalls"}),(0,o.kt)(s.S,{methods:[{name:"eth_getBlockByHash",content:'Returns information about a block by hash.\n\n### Parameters\n\n1. `DATA`, 32 Bytes - Hash of a block.\n2. `Boolean` - If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.\n\n### Response\n\n`Object` - A block object, or `null` when no block was found:\n\n- `number`: `QUANTITY` - the block number. `null` when its pending block.\n- `hash`: `DATA`, 32 Bytes - hash of the block. `null` when its pending block.\n- `parentHash`: `DATA`, 32 Bytes - hash of the parent block.\n- `nonce`: `DATA`, 8 Bytes - hash of the generated proof-of-work. `null` when its pending block.\n- `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n- `logsBloom`: `DATA`, 256 Bytes - the bloom filter for the logs of the block. `null` when its pending block.\n- `transactionsRoot`: `DATA`, 32 Bytes - the root of the transaction trie of the block.\n- `stateRoot`: `DATA`, 32 Bytes - the root of the final state trie of the block.\n- `receiptsRoot`: `DATA`, 32 Bytes - the root of the receipts trie of the block.\n- `miner`: `DATA`, 20 Bytes - the address of the beneficiary to whom the mining rewards were given.\n- `difficulty`: `QUANTITY` - integer of the difficulty for this block.\n- `totalDifficulty`: `QUANTITY` - integer of the total difficulty of the chain until this block.\n- `extraData`: `DATA` - the "extra data" field of this block.\n- `size`: `QUANTITY` - integer the size of this block in bytes.\n- `gasLimit`: `QUANTITY` - the maximum gas allowed in this block.\n- `gasUsed`: `QUANTITY` - the total used gas by all transactions in this block.\n- `timestamp`: `QUANTITY` - the unix timestamp for when the block was collated.\n- `transactions`: `Array` - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.\n- `uncles`: `Array` - Array of uncle hashes.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getBlockByHash",params:["0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91",!0],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getBlockByHash",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{baseFeePerGas:"0xe",difficulty:"0x16",extraData:"0xd682030083626f7288676f312e31382e31856c696e757800000000000000000042f6b6f8d8b8c858ba70e831f950e658af06cb2a86999121310aa29a65b7a0cf67a0d8a6609b0e902b16e71b3763bab77fd87c16d96c04614d87bcaa9744678601",gasLimit:"0x1c9c380",gasUsed:"0x98fbc4",hash:"0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91",logsBloom:"0x0bb8083310510991264c28808e70721a382c01900230420c28084f71456ad99210851501000540a2605d61130071812110b0a200e89ee288a08424a221283894c89d810681c46828202100c984a808fb334c6c700d84209031c5d513a20902d20210a201c2009a212701300945928850200d8425b4068125a104a1f229a8a0ab28313104b0086c080d94f1e013d060c40d13249d0003104a874a20d1c4800064a312450634371e000a0a8840ad6026884440581191a0844088c084420501284d8070ce4fb0520d20030584028f252cc872424a43c95aa2d95030800434ae7001819400e84f10d860606c810a1b21708ca306a02550200453861439a50936081a",miner:"0x0000000000000000000000000000000000000000",mixHash:"0x0000000000000000000000000000000000000000000000000000000000000000",nonce:"0x0000000000000000",number:"0x1d0ee71",parentHash:"0xb3e82b645d6ccc123df2a919e1c93ce1cc0ad7547bef72f23413054831b3ccf2",receiptsRoot:"0x8d0184310c36813f108bf4a983605dbf8ecced8317cf91276dd00cf2914e76b4",sha3Uncles:"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",size:"0x99b6",stateRoot:"0xf3be2674dd9df2ec38a3eda6c39ba1a52b180de35cc26f70dd9730378f2cd036",timestamp:"0x62c7b23d",totalDifficulty:"0x1a35061b",transactions:[{blockHash:"0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91",blockNumber:"0x1d0ee71",from:"0x94060ed99db2b0f5a59e19e2622a16a9ce6ca5cc",gas:"0x4c4b40",gasPrice:"0x2794ca2400e",maxFeePerGas:"0x70573db9000",maxPriorityFeePerGas:"0x2794ca24000",hash:"0xccaa67d8a2849c3cb9caa7844ba02aaec31f3320149c0606fbe31dbb2a6a9be7",input:"0xbc5cc6c0000000000000000000000000000000000000000000000000000000000709cc320000000000000000000000000000000000000000000000000000000062c7b2450000000000000000000000000000000000000000000000000dde4d6f71959da100000000000000000000000000000000000000000000000000000000000f3ca6",nonce:"0x97e9",to:"0xf44a801b86cfb7f203f612f94ee97ba8ccf45452",transactionIndex:"0x0",value:"0x0",type:"0x2",accessList:[],chainId:"0x89",v:"0x0",r:"0x46bbf35f292af955b793ad51a4c777b60b3a662cd3bc3e9c8ba9b70c165c2171",s:"0x5294841235369627a458a5586bcc98e02121186f943ad866ff80b32a7184934f"}],transactionsRoot:"0x4ccc4247f561362e565ab995cf17081265683d49f540be802477f6f446ed8d65",uncles:[]}}}},{name:"eth_getBlockByNumber",content:'Returns information about a block by block number.\n\n### Parameters\n\n1. `QUANTITY|TAG` - integer of a block number, or the string `"earliest"`, `"latest"` or `"pending"`, as in the default block parameter\n2. `Boolean` - If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.\n\n### Response\n\n`Object` - A block object, or `null` when no block was found:\n\n- `number`: `QUANTITY` - the block number. `null` when its pending block.\n- `hash`: `DATA`, 32 Bytes - hash of the block. `null` when its pending block.\n- `parentHash`: `DATA`, 32 Bytes - hash of the parent block.\n- `nonce`: `DATA`, 8 Bytes - hash of the generated proof-of-work. `null` when its pending block.\n- `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n- `logsBloom`: `DATA`, 256 Bytes - the bloom filter for the logs of the block. `null` when its pending block.\n- `transactionsRoot`: `DATA`, 32 Bytes - the root of the transaction trie of the block.\n- `stateRoot`: `DATA`, 32 Bytes - the root of the final state trie of the block.\n- `receiptsRoot`: `DATA`, 32 Bytes - the root of the receipts trie of the block.\n- `miner`: `DATA`, 20 Bytes - the address of the beneficiary to whom the mining rewards were given.\n- `difficulty`: `QUANTITY` - integer of the difficulty for this block.\n- `totalDifficulty`: `QUANTITY` - integer of the total difficulty of the chain until this block.\n- `extraData`: `DATA` - the "extra data" field of this block.\n- `size`: `QUANTITY` - integer the size of this block in bytes.\n- `gasLimit`: `QUANTITY` - the maximum gas allowed in this block.\n- `gasUsed`: `QUANTITY` - the total used gas by all transactions in this block.\n- `timestamp`: `QUANTITY` - the unix timestamp for when the block was collated.\n- `transactions`: `Array` - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.\n- `uncles`: `Array` - Array of uncle hashes.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getBlockByNumber",params:["0x1D0EE71",!0],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getBlockByNumber",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{baseFeePerGas:"0xe",difficulty:"0x16",extraData:"0xd682030083626f7288676f312e31382e31856c696e757800000000000000000042f6b6f8d8b8c858ba70e831f950e658af06cb2a86999121310aa29a65b7a0cf67a0d8a6609b0e902b16e71b3763bab77fd87c16d96c04614d87bcaa9744678601",gasLimit:"0x1c9c380",gasUsed:"0x98fbc4",hash:"0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91",logsBloom:"0x0bb8083310510991264c28808e70721a382c01900230420c28084f71456ad99210851501000540a2605d61130071812110b0a200e89ee288a08424a221283894c89d810681c46828202100c984a808fb334c6c700d84209031c5d513a20902d20210a201c2009a212701300945928850200d8425b4068125a104a1f229a8a0ab28313104b0086c080d94f1e013d060c40d13249d0003104a874a20d1c4800064a312450634371e000a0a8840ad6026884440581191a0844088c084420501284d8070ce4fb0520d20030584028f252cc872424a43c95aa2d95030800434ae7001819400e84f10d860606c810a1b21708ca306a02550200453861439a50936081a",miner:"0x0000000000000000000000000000000000000000",mixHash:"0x0000000000000000000000000000000000000000000000000000000000000000",nonce:"0x0000000000000000",number:"0x1d0ee71",parentHash:"0xb3e82b645d6ccc123df2a919e1c93ce1cc0ad7547bef72f23413054831b3ccf2",receiptsRoot:"0x8d0184310c36813f108bf4a983605dbf8ecced8317cf91276dd00cf2914e76b4",sha3Uncles:"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",size:"0x99b6",stateRoot:"0xf3be2674dd9df2ec38a3eda6c39ba1a52b180de35cc26f70dd9730378f2cd036",timestamp:"0x62c7b23d",totalDifficulty:"0x1a35061b",transactions:[{blockHash:"0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91",blockNumber:"0x1d0ee71",from:"0x94060ed99db2b0f5a59e19e2622a16a9ce6ca5cc",gas:"0x4c4b40",gasPrice:"0x2794ca2400e",maxFeePerGas:"0x70573db9000",maxPriorityFeePerGas:"0x2794ca24000",hash:"0xccaa67d8a2849c3cb9caa7844ba02aaec31f3320149c0606fbe31dbb2a6a9be7",input:"0xbc5cc6c0000000000000000000000000000000000000000000000000000000000709cc320000000000000000000000000000000000000000000000000000000062c7b2450000000000000000000000000000000000000000000000000dde4d6f71959da100000000000000000000000000000000000000000000000000000000000f3ca6",nonce:"0x97e9",to:"0xf44a801b86cfb7f203f612f94ee97ba8ccf45452",transactionIndex:"0x0",value:"0x0",type:"0x2",accessList:[],chainId:"0x89",v:"0x0",r:"0x46bbf35f292af955b793ad51a4c777b60b3a662cd3bc3e9c8ba9b70c165c2171",s:"0x5294841235369627a458a5586bcc98e02121186f943ad866ff80b32a7184934f"}],transactionsRoot:"0x4ccc4247f561362e565ab995cf17081265683d49f540be802477f6f446ed8d65",uncles:[]}}}},{name:"eth_getBlockTransactionCountByHash",content:"Returns the number of transactions in a block from a block matching the given block hash.\n\n### Parameters\n\n1. `DATA`, 32 Bytes - hash of a block\n\n### Response\n\n`QUANTITY` - integer of the number of transactions in this block.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getBlockTransactionCountByHash",params:["0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getBlockTransactionCountByHash",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x32"}}},{name:"eth_getBlockTransactionCountByNumber",content:'Returns the number of transactions in a block matching the given block number.\n\n### Parameters\n\n1. `QUANTITY|TAG` - integer of a block number, or the string `"earliest"`, `"latest"` or `"pending"`, as in the default block parameter\n\n### Response\n\n`QUANTITY` - integer of the number of transactions in this block.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getBlockTransactionCountByNumber",params:["0x1D0EE71"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getBlockTransactionCountByNumber",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x32"}}},{name:"eth_getUncleCountByBlockHash",content:"Returns the number of uncles in a block from a block matching the given block hash.\n\n### Parameters\n\n`DATA`, 32 Bytes - hash of a block\n\n### Response\n\n`QUANTITY` - integer of the number of uncles in this block.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getUncleCountByBlockHash",params:["0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getUncleCountByBlockHash",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x0"}}},{name:"eth_getUncleCountByBlockNumber",content:'Returns the number of uncles in a block from a block matching the given block number.\n\n### Parameters\n\n1. `QUANTITY|TAG` - integer of a block number, or the string "latest", "earliest" or "pending", see the default block parameter\n\n### Response\n\n`QUANTITY` - integer of the number of uncles in this block.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getUncleCountByBlockNumber",params:["0x1D0EE71"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getUncleCountByBlockNumber",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x0"}}},{name:"eth_getUncleByBlockHashAndIndex",content:"Returns information about an uncle of a block by hash and uncle index position.\n\n### Parameters\n\n1. `DATA`, 32 Bytes - The hash of a block.\n2. `QUANTITY` - The uncle's index position.\n\n### Response\n\n`Object` - A block object, or `null` when no block was found:\n\n- `number`: `QUANTITY` - the block number. `null` when its pending block.\n- `hash`: `DATA`, 32 Bytes - hash of the block. `null` when its pending block.\n- `parentHash`: `DATA`, 32 Bytes - hash of the parent block.\n- `nonce`: `DATA`, 8 Bytes - hash of the generated proof-of-work. `null` when its pending block.\n- `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n- `logsBloom`: `DATA`, 256 Bytes - the bloom filter for the logs of the block. `null` when its pending block.\n- `transactionsRoot`: `DATA`, 32 Bytes - the root of the transaction trie of the block.\n- `stateRoot`: `DATA`, 32 Bytes - the root of the final state trie of the block.\n- `receiptsRoot`: `DATA`, 32 Bytes - the root of the receipts trie of the block.\n- `miner`: `DATA`, 20 Bytes - the address of the beneficiary to whom the mining rewards were given.\n- `difficulty`: `QUANTITY` - integer of the difficulty for this block.\n- `totalDifficulty`: `QUANTITY` - integer of the total difficulty of the chain until this block.\n- `extraData`: `DATA` - the \"extra data\" field of this block.\n- `size`: `QUANTITY` - integer the size of this block in bytes.\n- `gasLimit`: `QUANTITY` - the maximum gas allowed in this block.\n- `gasUsed`: `QUANTITY` - the total used gas by all transactions in this block.\n- `timestamp`: `QUANTITY` - the unix timestamp for when the block was collated.\n- `transactions`: `Array` - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.\n- `uncles`: `Array` - Array of uncle hashes.Returns information about a block by hash.\n\n**Note**: An uncle doesn't contain individual transactions.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getUncleByBlockHashAndIndex",params:["0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91","0x0"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getUncleByBlockHashAndIndex",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:null}}},{name:"eth_getUncleByBlockNumberAndIndex",content:'Returns information about an uncle of a block by number and uncle index position.\n\n### Parameters\n\n1. `QUANTITY|TAG` - a block number, or the string `"earliest"`, `"latest"` or `"pending"`, as in the default block parameter\n2. `QUANTITY` - the uncle\'s index position.\n\n### Response\n\n`Object` - A block object, or `null` when no block was found:\n\n- `number`: `QUANTITY` - the block number. `null` when its pending block.\n- `hash`: `DATA`, 32 Bytes - hash of the block. `null` when its pending block.\n- `parentHash`: `DATA`, 32 Bytes - hash of the parent block.\n- `nonce`: `DATA`, 8 Bytes - hash of the generated proof-of-work. `null` when its pending block.\n- `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n- `logsBloom`: `DATA`, 256 Bytes - the bloom filter for the logs of the block. `null` when its pending block.\n- `transactionsRoot`: `DATA`, 32 Bytes - the root of the transaction trie of the block.\n- `stateRoot`: `DATA`, 32 Bytes - the root of the final state trie of the block.\n- `receiptsRoot`: `DATA`, 32 Bytes - the root of the receipts trie of the block.\n- `miner`: `DATA`, 20 Bytes - the address of the beneficiary to whom the mining rewards were given.\n- `difficulty`: `QUANTITY` - integer of the difficulty for this block.\n- `totalDifficulty`: `QUANTITY` - integer of the total difficulty of the chain until this block.\n- `extraData`: `DATA` - the "extra data" field of this block.\n- `size`: `QUANTITY` - integer the size of this block in bytes.\n- `gasLimit`: `QUANTITY` - the maximum gas allowed in this block.\n- `gasUsed`: `QUANTITY` - the total used gas by all transactions in this block.\n- `timestamp`: `QUANTITY` - the unix timestamp for when the block was collated.\n- `transactions`: `Array` - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.\n- `uncles`: `Array` - Array of uncle hashes.Returns information about a block by hash.\n\n**Note**: An uncle doesn\'t contain individual transactions.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getUncleByBlockNumberAndIndex",params:["0x1D0EE71","0x0"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getUncleByBlockNumberAndIndex",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:null}}},{name:"eth_getProof",content:'Returns the account- and storage-values of the specified account including the Merkle-proof.\n\n### Parameters\n\n`DATA`, 20 Bytes - address of the account.\n`ARRAY`, 32 Bytes - array of storage-keys which should be proofed and included. See eth_getStorageAt\n`QUANTITY`|`TAG` - integer block number, or the string "latest" or "earliest", see the default block parameter\n\n### Response\n\n- `balance`: `QUANTITY` - the balance of the account. See eth_getBalance\n- `codeHash`: `DATA`, 32 Bytes - hash of the code of the account. For a simple Account without code it will return "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"\n- `nonce`: `QUANTITY`, - nonce of the account. See eth_getTransactionCount\n- `storageHash`: `DATA`, 32 Bytes - SHA3 of the StorageRoot. All storage will deliver a MerkleProof starting with this rootHash.\n- `accountProof`: `ARRAY` - Array of rlp-serialized MerkleTree-Nodes, starting with the stateRoot-Node, following the path of the SHA3 (address) as key.\n- `storageProof`: ARRAY - Array of storage-entries as requested. Each entry is a object with these properties:\n - `key`: `QUANTITY` - the requested storage key\n - `value`: `QUANTITY` - the storage value\n - `proof`: `ARRAY` - Array of rlp-serialized MerkleTree-Nodes, starting with the storageHash-Node, following the path of the SHA3 (key) as path.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getProof",params:["0xC0788A3aD43d79aa53B09c2EaCc313A787d1d607",["0xa1fbc9f91a212e6162a97f125f498bd6422b3b7f694f2d42fe18f13414d6f195"],"latest"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getProof",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{address:"0xc0788a3ad43d79aa53b09c2eacc313a787d1d607",accountProof:["0xf90211a05c9df257f21ae474ab1a310cae570fef29b805fa78294c1d2a34320e83e5c8afa0fb0d55afa0b51402b22381719324a9834ef00a75b8b966a3f3a52f982dbbd5caa08510f2b6fab21b2e8473fe7b32332e74251cc519f9d9178078f11fc168deaabea08df84fa33c3bdd35fd17107ed17df753f8d33bb28549af07722e64ba3566e2f9a0602ad5bcefb94d3f83ad05eb3bd0a4e79206641c21e49a1f5fd3469e29bef140a03c838b62c70b74f3855162f5e30d40544f3469aadf37db37445687a94fb44f2da01fee262d7cf28341ab09042c286edba59399f4dc54e915289bedc8f0f9dbfb53a0dc1f431a6e3f02266284b36e1404754064780d12bd9008e3145874e8fb8843ffa04cfdc9ffba37fade979dbdf11ee3be03d3d9c9a580edce2d725cea6c54ba22baa04268b3bafec683c21d0095b1a56a8ed6edf5ade41f113b54d0901b1e55577dc9a07227e04aaa96046d0165f2bff9455a52b5d3c5580549cb79574c76024099173da091972da6011f428f3dead135df1c42f86657289ec813b95d57bf183fed9fbc2fa0a11d2697d9e1f6c08c54269134087278a1273981cc0d5995efafb2a29f9a84c8a08b3bfd6038bbdc449e80b88da68f8fd86e0ba25d952143106d5c410b9b3d8894a08e3f74eef6923e8790c0e6164a7a26da37d0efb8b74eefa044991d0818fae214a0258c0fceee7b05390820f9f67023330905a15a4349176fb78f6db8f66dbd5a7f80","0xf90211a06eaa52fb2a8e3954013400a8fd38740325ad1a8b2817b135a818f58e6547b0fda0b8f074310ae5d8e94c70953027b4bd0726e191464528c9f90f0494aa2142fa05a0e3960d1208893b50480d62a4c4ccb96d75d4ee6cb1a6345c93032b5ce6190ee8a086a2b68716111918a8f23adf742706518458ebb85616ec027f3e21bcbaebde6da0f282e24c3cb46ad78f3178fd47eb944af2c6bdee525f13ee081eb218108fa103a0b7fec8c0213cd27181f1110077c3cfe9a6e87e3d01ca37d8facb06af9626c0a4a022252c415ebb021430c877d7384adaa84662159eb79b49648ba145f9dfa21134a0cc1c711950fc43d58ddc709b51ecd7edcb6fc83def47c5a7beab757b10e9f682a08033d162af20300edde022138760da958482daab6a8c0cba1aad18fb99a4129ca007ff9efc31fa74a2646a82e0b587c8998decd781288d4c042a9637da34cb0e22a0e5f5e5e7ff8693955a52bf4fd6625512eb81dbf71e4adbe2102613a7e33286cfa03ecdca882156a5fbe947d802cdf8b9bd7c34153d07dd649fa6a1e9f016efd29fa050c44bb814a6bf4443af8f047364d356465f31d7e874f0570048ea36de6af7bda02162ecc171ab22ed33c05c8a01496ca60515009c31f15e3e28bd4fd610466b11a06b0911224bf7a39a31f98cd0c70fa2330cf237a093d6f1df28b12e5fefb64421a0409c9ea3eb4cbbad39c38b0d3eccd2f0fa43de76267b3a95699a364e5233227580","0xf90211a00454ec7b5f7501e715ce0cc600440dbc9d52171b7d66b0d72eb18339eb41016aa0b93db99351f1cd55b4aa3d7971350e8d058b287518c9833088c117d1840ef08ca059a916c71daf22b591962809b920237642200e0ec96661d11a0d8d729223282fa0a37da7ce863ca3b922429e036063b23caf7aef0111b9d25189227653d860a81fa000492651d55c3da8bfe6984408a06f5549493465fa10d8aea748a67e0cac823ba07ed8224dc0e169a8234ea8741ebe3ab760ba3c392585d11fb4182c934d1b9778a0d982b49f09b191cf6eefcf2050c8fecc5b98f4e46f66e8d1284665d9e43e8029a0fd1343ffc909cdd4b8d19927cd27ec06d8698db646cac479e3f1cfe5b56d4a3fa068eed213b1ee885542023bc897d0a973bd14a4987a325b41dc18f7df184f7812a082c4b31b0ccf0c28fbf62902d134fb0c5d8a2f2f9272c03443710537b5936adaa099d33f93feba523358ad6877a50cfb8959a529f8ca757bda075b38167394315fa09c33b73a9892b427cdea176e94c61f063ab473f1d460418f5caeb8dfdddc2adea02904cd719400a0724bc76613493d2e529210cb73a9153a0e8fe97d488d56b5d5a073ab1eaa66eee048e611f6ce47869aa29a19099b39ec3ec5a11df480fa780420a0f7ae010f236516824106a2d1644ba586efb50792dae137bdfae9ff9650023bb8a088cce6623ee4e5e183d4bd6b1d2ef02418abaeb66f30c22972760413fcf346c980","0xf90211a0f90b348ba42318090313ba03ea704a587eb39721c00195dd71a1903a78145218a036a39852c6b0147587d0f9ce47af4afe872078c9dd633cdb793740c1fdc42a61a05d6dbbd27330d9f82e598651ba5bab2948a5defdc6c7ed7f5b87b9cc30c980f7a06303db7e057a3cbef4d4241f67b3c1439e3a39208613046b692cec0d14c0e692a04d2f11a4b29d916e87e12d4fdbcfcd6ca28e86cfeba33da39cd157b9ed3ff0a3a023f3b3b27b4b0fbe340fab190faa92afb33a4ede473a25ac61090b03272fe037a0352b405562106c1df25697b267b16efa89481e6dcbb912bf439b673ea29a53aca08ef001de856d69697186e67f0dfc0aa2d6cf87671bba8da332b11bb02110722ba07e6138075be847eb7d36af434601e2b7222523df1eb907d2ef3f96bf10a4cae1a0eb940935d79894789c8281269307bf3453093db6df7bea264bb7f2d42626a415a0ad01c41ca785f3c6338f490137ece5edefe0d8ddbebd7fc03dc8487f8dba33e3a08ec4dced5616054b6e949e510d3a35646b692d96f195f4a9110a230fb03e606da079701cbae52c582d599295da2e6203d2de65c5a3c1935df9604984fab29199a7a04b2f90d23e95f09e7d21bb9dc220242ed1425739957833fbb44fbf89e8782d80a078dbc2dabdaab2df8a008a3ec3dfbec5e8e698d8bb93ba2880b641f37b367d4fa01356b44111024f8bd578b922d4b90c0094d1df27ea4b0fd283562df20c65b0ba80","0xf90211a08721b65a9750c74ced93f1cd31f4c743b8abe5c644ffc8fa51c0a39d2e40bf2ea0e5f9c3c22a343cba31d0894e0aa50ad9e96617cc0696be34a7bc281fba6ee21fa06e94e77f477b92afa23e054722234670264b66c82924479e3139351e141975eba052d195c8f14d27f73303aa8925cba2c2cc11b3d78514f622888dda58dc5e263ba0c64d6d2a6665db3611e65d223e8ecc04b6cff54bf6f16e433f3a30cfef0ffd95a029b88adde990610b39c63ab149fd6f843e216b78a2bc359d8953b83887818efaa0251e7abf3b94613b26511c46a0386732ab3ee4514f3b4cd7e02eb25b2dd8392aa0b137b503eb8cb9cad14f27137d8efcc586e72834b14288aecad5da421e9a54cda038d77e97098ebb7b014beec1a2ebbf454c91b745472342782ffea3e3bc88c855a0523a9793aaf8ab80a8bd225701a2f3d65a5eb0e5c46ff51af88216ed366a1917a09a6ed97d2426a03ac5dd47b10718ac697cf791bce5cf155b020bd3185dd87fffa0120a4ce5b3211b457dd368246067f60112ce2e246635dd32f067ad16075e9c02a07baac91674ed165b152624e0f7d5fe4cce690a2bc25ffcfd6fa62d32a9b614f9a035c19ce8b8306a503a725d25fc7d61dcf6777cda654584be2d6ec686f0934b87a00d553ec4bbfc5d1a97d2beaa1a1ac579741afef51b4638452567d89c38820cafa0d4b9ad58431121703e79ac88f0412afed103f9cb2e7df6c902a4c7c1e6c396af80","0xf901f1a0e18e1e04b23284b342fbff4a4671ddb4e63d95399a55af0faddc41cd65a4499c80a0bb69ec77663d61c628113386c2ac216a76d21b3f990263c3449d1a39790c5b4fa0305cd1e0f577dadb342da6c35de11b67a4485d112136e3cd8ca3f73a7bf25e3ca065d2db0143f267fd61a79f22187cbf7e678983af61fc2c7873655a1012e4996aa08362e44d85b4bf88894a6feb15d9af8823a61630a7c6e53f097e45a766d2bb7fa0dae88c06abb4fb96f592bb84c2ba04094e5110c4e98cccb1fb172e0c2ecfa54ca054b1d3e19e267200ba7828a0850a272375d760df3701421cba2823942135f554a0effd1712d704db7de44cf3be857e94af57f2571c0346bec3d940fa0aa912369da012c4578161d3874395bb88058cc70e40d68f93bbacdbcf6bea489cfdae187ec7a0ade4adeceb903ce97a12fc7a0c79c32dbc6f477dc05f1a39eab9b9c254ade3d2a0569aec1b409859145ab8a78841492e1267af1b3f03f276750cc84f4dd799243aa06509c2902df604f754264e73d5f2d12f2f884c237f4bdf81977ffe2153792675a0db33347492badabca61d2d46ee820499768cd7f105fa1a3b2754dd7ff0aba505a0939401b40dadd0bdb6aa6de6fdbb442e9cdd2df5cc3bca568a4801eed74ff2bea049175002abd36df5efaab5e42e0276ee5faa0872a4b49a7360bd6be528b2cf0a80","0xf851808080808080808080a0f6d3c09b884e3f6dd5abe815c374022f66e07657d1256ee0e56d1d5bda3618f68080a02661b2260f5f5828a4790c25d75a99d10b90885ae133565cfd3ba68bbbad430f80808080","0xf8669d3dda90c2b6390da1e97ef61bb4ee63ff71b543197525da5e3f0aa39208b846f8440180a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a00844f5aff78d4b2e89bbbea8e6dbb3ec2164ce7554e91111edc6e35de0ac3633"],balance:"0x0",codeHash:"0x0844f5aff78d4b2e89bbbea8e6dbb3ec2164ce7554e91111edc6e35de0ac3633",nonce:"0x1",storageHash:"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",storageProof:[{key:"0xa1fbc9f91a212e6162a97f125f498bd6422b3b7f694f2d42fe18f13414d6f195",value:"0x0",proof:[]}]}}}},{name:"eth_chainId",content:"Returns the chain ID of the current network.\n\n### Parameters\n\nnone\n\n### Response\n\n`quantity` - EIP155 Chain ID.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_chainId",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_chainId",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x89"}}},{name:"eth_syncing",content:"Returns an object with data about the sync status or `false`.\n\n### Parameters\n\nNone\n\n### Response\n\n`Object|Boolean`, An object with sync status data or `FALSE`, when not syncing:\n\n- `startingBlock`: `QUANTITY` - The block at which the import started (will only be reset, after the sync reached his head)\n- `currentBlock`: `QUANTITY` - The current block, same as eth_blockNumber\n- `highestBlock`: `QUANTITY` - The estimated highest block",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_syncing",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_syncing",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:!1}}},{name:"eth_blockNumber",content:"Returns the number of most recent block.\n\n### Parameters\n\nNone\n\n### Response\n\n`QUANTITY` - integer of the current block number the client is on.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_blockNumber",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_blockNumber",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x1d43bd1"}}},{name:"eth_call",content:'Executes a new message call immediately without creating a transaction on the block chain.\n\n### Parameters\n\n1. `Object` - The transaction call object\n\n- `from`: `DATA`, 20 Bytes - (optional) The address the transaction is sent from.\n- `to`: `DATA`, 20 Bytes - The address the transaction is directed to.\n- `gas`: `QUANTITY` - (optional) Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions.\n- `gasPrice`: `QUANTITY` - (optional) Integer of the gasPrice used for each paid gas\n- `value`: `QUANTITY` - (optional) Integer of the value sent with this transaction\n- `data`: `DATA` - (optional) Hash of the method signature and encoded parameters. For details see [Ethereum Contract ABI in the Solidity documentation](https://docs.soliditylang.org/en/latest/abi-spec.html)\n\n2. `QUANTITY|TAG` - integer block number, or the string `"latest"`, `"earliest"` or `"pending"`, see the default block parameter\n\n### Response\n\n`DATA` - the return value of executed contract.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_call",params:[{from:"0x82e69652a3beae1fa372567abf8dd368b7c002cd",to:"0xd7764961793c991a683b7d95caeded6414668bac"},"latest"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_call",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x"}}},{name:"eth_estimateGas",content:"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.\n\n### Parameters\n\nSee [eth_call](#eth_call) parameters, expect that all properties are optional. If no gas limit is specified geth uses the block gas limit from the pending block as an upper bound. As a result the returned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending block gas limit.\n\n### Response\n\n`QUANTITY` - the amount of gas used.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_estimateGas",params:[{from:"0xFa743d3F94f3b15B96c988392Ac85d5632695b3A",to:"0xb41653024c39dc2bd14dee34e7e52577194ff65d",value:"0x186a0"}],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_estimateGas",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x5208"}}},{name:"eth_gasPrice",content:"Returns the current price per gas in wei.\n\n### Parameters\n\nNone\n\n### Response\n\n`QUANTITY` - integer of the current gas price in wei.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_gasPrice",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_gasPrice",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x7084e0073"}}},{name:"eth_feeHistory",content:"Returns the transaction fee history.\n\n### Parameters\n\n`BLOCKCOUNT` - Number of blocks in the requested range. 1 ~ 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n`NEWESTBLOCK` - Highest number of blocks in the requested range.\n`REWARDPERCENTILES` - (optional) Percentage values between 0 and 100, sampled in ascending order.\n\n### Response\n\n`OLDESTBLOCK` - Smallest number block of the returned range.\n`BASEFEEPERGAS` - An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.\n`GASUSEDRATIO` - An array of gas usage. Which is calculated as the ratio of gasUsed and gasLimit.\n`REWARD` - (Optional) An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_feeHistory",params:[4,"latest",[20,80]],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_feeHistory",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{oldestBlock:"0x1d43c0d",reward:[["0x754ea2419","0xcc31dc6a1"],["0x7aef40a00","0xe65b4f18d"],["0x814c4a3a3","0xe65c72553"],["0x7697b906c","0xcc19ba6e2"]],baseFeePerGas:["0xb239f5f","0xc2a5473","0xc1820ad","0xca5bf1e","0xce2bfc2"],gasUsedRatio:[.8685022666666666,.4766213,.6829626333333333,.5753641666666667]}}}},{name:"eth_newFilter",content:'Creates a filter object, based on filter options, to notify when the state changes (logs).\nTo check if the state has changed, call [eth_getFilterChanges](#eth_getfilterchanges).\n\n**A note on specifying topic filters:**\nTopics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic filters:\n\n- `[]` "anything"\n- `[A]` "A in first position (and anything after)"\n- `[null, B]` "anything in first position AND B in second position (and anything after)"\n- `[A, B]` "A in first position AND B in second position (and anything after)"\n- `[[A, B], [A, B]]` "(A OR B) in first position AND (A OR B) in second position (and anything after)"\n- ### Parameters\n\n1. `Object` - The filter options:\n\n- `fromBlock`: `QUANTITY|TAG` - (optional, default: `"latest"`) Integer block number, or `"latest"` for the last mined block or `"pending"`, `"earliest"` for not yet mined transactions.\n- `toBlock`: `QUANTITY|TAG` - (optional, default: `"latest"`) Integer block number, or `"latest"` for the last mined block or `"pending"`, `"earliest"` for not yet mined transactions.\n- `address`: `DATA|Array`, 20 Bytes - (optional) Contract address or a list of addresses from which logs should originate.\n- `topics`: `Array of DATA`, - (optional) Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also be an array of DATA with "or" options.\n\n### Response\n\n`QUANTITY` - A filter id.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_newFilter",params:[{fromBlock:"0x1",toBlock:"0x2",address:"0x8888f1f195afa192cfee860698584c030f4c9db1",topics:["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b",null,["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b","0x0000000000000000000000000aff3454fce5edbc8cca8697c15331677e6ebccc"]]}],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_newFilter",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0xafd2c65c8608ff97eddfccc33194f938"}}},{name:"eth_newBlockFilter",content:"Creates a filter in the node, to notify when a new block arrives.\nTo check if the state has changed, call [eth_getFilterChanges](#eth_getfilterchanges).\n\n### Parameters\n\nNone\n\n### Response\n\n`QUANTITY` - A filter id.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_newBlockFilter",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_newBlockFilter",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x6594197c70fa4ae0bfc210ca21b37209"}}},{name:"eth_newPendingTransactionFilter",content:"Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call [eth_getFilterChanges](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n\n### Parameters\nNone\n\n### Response\n\n`QUANTITY` - A filter id.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_newPendingTransactionFilter",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_newPendingTransactionFilter",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0xc29af24b2b25b1f5134dfc0937316b79"}}},{name:"eth_uninstallFilter",content:"Uninstalls a filter with the given id. Should always be called when a watch is no longer needed. Additionally Filters timeout when they aren't requested with [eth_getFilterChanges](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges) for a period of time.\n\n### Parameters\n\n1. `QUANTITY` - The filter id.\n\n### Response\n\n`Boolean` - `true` if the filter was successfully uninstalled, otherwise `false`.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_uninstallFilter",params:["0xafd2c65c8608ff97eddfccc33194f938"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_uninstallFilter",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:!0}}},{name:"eth_getFilterChanges",content:'Polling method for a filter, which returns an array of logs which occurred since last poll.\n\n### Parameters\n\n1. `QUANTITY` - the filter id.\n\n### Response\n\n`Array` - Array of log objects, or an empty array if nothing has changed since last poll.\n\n- For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes), e.g. `["0x3454645634534..."]`.\n- For filters created with `eth_newPendingTransactionFilter ` the return are transaction hashes (`DATA`, 32 Bytes), e.g. `["0x6345343454645..."]`.\n- For filters created with `eth_newFilter` logs are objects with following params:\n  - `removed`: `TAG` - `true` when the log was removed, due to a chain reorganization. `false` if its a valid log.\n  - `logIndex`: `QUANTITY` - integer of the log index position in the block. `null` when its pending log.\n  - `transactionIndex`: `QUANTITY` - integer of the transactions index position log was created from. `null` when its pending log.\n  - `transactionHash`: `DATA`, 32 Bytes - hash of the transactions this log was created from. `null` when its pending log.\n  - `blockHash`: `DATA`, 32 Bytes - hash of the block where this log was in. `null` when its pending. `null` when its pending log.\n  - `blockNumber`: `QUANTITY` - the block number where this log was in. `null` when its pending. `null` when its pending log.\n  - `address`: `DATA`, 20 Bytes - address from which this log originated.\n  - `data`: `DATA` - contains one or more 32 Bytes non-indexed arguments of the log.\n  - `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments. (In _solidity_: The first topic is the _hash_ of the signature of the event (e.g. `Deposit(address,bytes32,uint256)`), except you declared the event with the `anonymous` specifier.)',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getFilterChanges",params:["0x9c9085b0f88c8c74f02a2382cea95787"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getFilterChanges",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:["0xd24bee6c628161f2953684d25c6ccf633f41c7d92e0fe2fb5a0af0811ebcf99a","0xb98c81ac34100323070ace4b1fe93358e557dba91d2e0791fc879078884a900d","0xf979088d5e00bf6226a2dcaffdb0b8a4a87842e9328842b898ccf066f83639b5","0xe1358597954dd9a5161ffd055b01e236b1494a800c2763e5d297622792eb434b","0x9ec564781bf374d79c7d2709e45abf288c4a5c21bb160e53eb4edf1b7d4964ab","0x7faa729d33a2c28055127ea115838b3f8bf7ea718f6948cdea65dc2a6dc02f91","0xca080fb4b0330ea94087560e0fe2bd939a09d8fee7367f3b567829f70bf66dba","0x2ecd83c43f500a60ab5e323b0c205b179918c24e951b37788a488993668e9175","0x4704bd58e86467c8c7883422b0c389a5579747f35a4e483821f4fb5425794eb7"]}}},{name:"eth_getFilterLogs",content:'Returns an array of all logs matching filter with given id.\n\n### Parameters\n\n1. `QUANTITY` - The filter id.`\n\n### Response\n\n`Array` - Array of log objects, or an empty array if nothing has changed since last poll.\n\n- For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes), e.g. `["0x3454645634534..."]`.\n- For filters created with `eth_newPendingTransactionFilter ` the return are transaction hashes (`DATA`, 32 Bytes), e.g. `["0x6345343454645..."]`.\n- For filters created with `eth_newFilter` logs are objects with following params:\n  - `removed`: `TAG` - `true` when the log was removed, due to a chain reorganization. `false` if its a valid log.\n  - `logIndex`: `QUANTITY` - integer of the log index position in the block. `null` when its pending log.\n  - `transactionIndex`: `QUANTITY` - integer of the transactions index position log was created from. `null` when its pending log.\n  - `transactionHash`: `DATA`, 32 Bytes - hash of the transactions this log was created from. `null` when its pending log.\n  - `blockHash`: `DATA`, 32 Bytes - hash of the block where this log was in. `null` when its pending. `null` when its pending log.\n  - `blockNumber`: `QUANTITY` - the block number where this log was in. `null` when its pending. `null` when its pending log.\n  - `address`: `DATA`, 20 Bytes - address from which this log originated.\n  - `data`: `DATA` - contains one or more 32 Bytes non-indexed arguments of the log.\n  - `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments. (In _solidity_: The first topic is the _hash_ of the signature of the event (e.g. `Deposit(address,bytes32,uint256)`), except you declared the event with the `anonymous` specifier.)',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getFilterLogs",params:["0x87f699c1f24e10dc61a35fcb963276c5"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getFilterLogs",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:[]}}},{name:"eth_getLogs",content:'Returns an array of all logs matching a given filter object.\n\n### Parameters\n\n1. `Object` - The filter options:\n\n- `fromBlock`: `QUANTITY|TAG` - (optional, default: `"latest"`) Integer block number, or `"latest"` for the last mined block or `"pending"`, `"earliest"` for not yet mined transactions.\n- `toBlock`: `QUANTITY|TAG` - (optional, default: `"latest"`) Integer block number, or `"latest"` for the last mined block or `"pending"`, `"earliest"` for not yet mined transactions.\n- `address`: `DATA|Array`, 20 Bytes - (optional) Contract address or a list of addresses from which logs should originate.\n- `topics`: `Array of DATA`, - (optional) Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also be an array of DATA with "or" options.\n- `blockhash`: `DATA`, 32 Bytes - (optional, **future**) With the addition of EIP-234, `blockHash` will be a new filter option which restricts the logs returned to the single block with the 32-byte hash `blockHash`. Using `blockHash` is equivalent to `fromBlock` = `toBlock` = the block number with hash `blockHash`. If `blockHash` is present in in the filter criteria, then neither `fromBlock` nor `toBlock` are allowed.\n\n### Response\n\n`Array` - Array of log objects, or an empty array if nothing has changed since last poll.\n\n- For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes), e.g. `["0x3454645634534..."]`.\n- For filters created with `eth_newPendingTransactionFilter ` the return are transaction hashes (`DATA`, 32 Bytes), e.g. `["0x6345343454645..."]`.\n- For filters created with `eth_newFilter` logs are objects with following params:\n  - `removed`: `TAG` - `true` when the log was removed, due to a chain reorganization. `false` if its a valid log.\n  - `logIndex`: `QUANTITY` - integer of the log index position in the block. `null` when its pending log.\n  - `transactionIndex`: `QUANTITY` - integer of the transactions index position log was created from. `null` when its pending log.\n  - `transactionHash`: `DATA`, 32 Bytes - hash of the transactions this log was created from. `null` when its pending log.\n  - `blockHash`: `DATA`, 32 Bytes - hash of the block where this log was in. `null` when its pending. `null` when its pending log.\n  - `blockNumber`: `QUANTITY` - the block number where this log was in. `null` when its pending. `null` when its pending log.\n  - `address`: `DATA`, 20 Bytes - address from which this log originated.\n  - `data`: `DATA` - contains one or more 32 Bytes non-indexed arguments of the log.\n  - `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments. (In _solidity_: The first topic is the _hash_ of the signature of the event (e.g. `Deposit(address,bytes32,uint256)`), except you declared the event with the `anonymous` specifier.)',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getLogs",params:[{blockHash:"0x907b4139f9f919816ab823753f122a7415a6337af58a67000f763918598f6d72"}],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getLogs",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:[{address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",topics:["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000088928ff265a144aef2c5e228d536d9e477a68cfc","0x0000000000000000000000007c303894a165830751f524ebdb6b198affbb7211"],data:"0x000000000000000000000000000000000000000000000000000000003b9dd768",blockNumber:"0x1dd2554",transactionHash:"0x27b26be2e9792a699237fce36b312fcca0a32b6d41b86e233d75e31fedaf2064",transactionIndex:"0x0",blockHash:"0x907b4139f9f919816ab823753f122a7415a6337af58a67000f763918598f6d72",logIndex:"0x0",removed:!1}]}}},{name:"eth_getBalance",content:'Returns the balance of the account of given address.\n\n### Parameters\n\n1. `DATA`, 20 Bytes - address to check for balance.\n2. `QUANTITY|TAG` - integer block number, or the string `"latest"`, `"earliest"` or `"pending"`, see the default block parameter\n\n### Response\n\n`QUANTITY` - integer of the current balance in wei.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getBalance",params:["0x9Ec200cDe2c3b2a5e7834BBe6da35fA3228CD632","latest"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getBalance",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0xead9c72d5afa8255"}}},{name:"eth_getStorageAt",content:'Returns the value from a storage position at a given address.\n\n### Parameters\n\n1. `DATA`, 20 Bytes - address of the storage.\n2. `QUANTITY` - integer of the position in the storage.\n3. `QUANTITY|TAG` - integer block number, or the string `"latest"`, `"earliest"` or `"pending"`\n\n### Response\n\n`DATA` - the value at this storage position.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getStorageAt",params:["0x9Ec200cDe2c3b2a5e7834BBe6da35fA3228CD632","0x0","latest"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getStorageAt",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x0000000000000000000000000000000000000000000000000000000000000000"}}},{name:"eth_getTransactionCount",content:"Returns the number of transactions sent from an address.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getTransactionCount",params:["0x9Ec200cDe2c3b2a5e7834BBe6da35fA3228CD632","latest"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getTransactionCount",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x1d002"}}},{name:"eth_getCode",content:'Returns code at a given address.\n\n### Parameters\n\n1. `DATA`, 20 Bytes - address\n2. `QUANTITY|TAG` - integer block number, or the string `"latest"`, `"earliest"` or `"pending"`\n\n### Response\n\n`DATA` - the code from the given address.',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getCode",params:["0x9Ec200cDe2c3b2a5e7834BBe6da35fA3228CD632","latest"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getCode",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x"}}},{name:"eth_sendRawTransaction",content:"Creates new message call transaction or a contract creation for signed transactions.\n\n### Parameters\n\n1. `DATA`, The signed transaction data.\n\n### Response\n\n`DATA`, 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available.\n\nUse [eth_getTransactionReceipt](#eth_gettransactionreceipt) to get the contract address, after the transaction was mined, when you created a contract.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_sendRawTransaction",params:["0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_sendRawTransaction",body:{id:1,jsonrpc:"2.0",result:"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"}}},{name:"eth_getTransactionByHash",content:"Returns the information about a transaction requested by transaction hash.\n\n### Parameters\n\n1. `DATA`, 32 Bytes - hash of a transaction\n\n### Response\n\n`Object` - A transaction object, or `null` when no transaction was found:\n\n- `blockHash`: `DATA`, 32 Bytes - hash of the block where this transaction was in. `null` when its pending.\n- `blockNumber`: `QUANTITY` - block number where this transaction was in. `null` when its pending.\n- `from`: `DATA`, 20 Bytes - address of the sender.\n- `gas`: `QUANTITY` - gas provided by the sender.\n- `gasPrice`: `QUANTITY` - gas price provided by the sender in Wei.\n- `hash`: `DATA`, 32 Bytes - hash of the transaction.\n- `input`: `DATA` - the data send along with the transaction.\n- `nonce`: `QUANTITY` - the number of transactions made by the sender prior to this one.\n- `to`: `DATA`, 20 Bytes - address of the receiver. `null` when its a contract creation transaction.\n- `transactionIndex`: `QUANTITY` - integer of the transactions index position in the block. `null` when its pending.\n- `value`: `QUANTITY` - value transferred in Wei.\n- `v`: `QUANTITY` - ECDSA recovery id\n- `r`: `QUANTITY` - ECDSA signature r\n- `s`: `QUANTITY` - ECDSA signature s",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getTransactionByHash",params:["0x62004d0731964dd2fffde4d277b2eea67d0d25e2b6b86fa65944999849f948dc"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getTransactionByHash",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{blockHash:"0x1077bc8af6f5eeee7a3d6c1c5a4ac7768c66887d8521d912ad77bd6733c6e36c",blockNumber:"0x1d0f495",from:"0x9ec200cde2c3b2a5e7834bbe6da35fa3228cd632",gas:"0x927c0",gasPrice:"0x6fc23ac0f",hash:"0x62004d0731964dd2fffde4d277b2eea67d0d25e2b6b86fa65944999849f948dc",input:"0xff03000000000000000000000000007e5df59b08288c3be4f62bbf8d1c20ac9c5e6f9467d8b7c2132d05d31c914a87c6611c10748aeb04b58e8f01866e000000000a6c4588b7d8bd22cf120283b1fff953420c45f30d500b1d8e8ef31e21c99d1db9a6444d3adf1270018696000000013f5228d0e7d75467366be7de2c31d0d098ba2c232791bca1f2de4661ed88a30c99a7a9449aa8417401866e00000001",nonce:"0x1bdf1",to:"0xe575b1e4f299e82c6de2f8737181c77f59b829b4",transactionIndex:"0x88",value:"0x0",type:"0x0",v:"0x135",r:"0xed46d0537cf687420becebaa4bf90c9ff927ec4917e8527454db91d80caddb0f",s:"0x56186dc8bed8d7c26ebfd6e53ebe3429fa36f743d3b199d3c47d73841a378f3"}}}},{name:"eth_getTransactionByBlockHashAndIndex",content:"Returns information about a transaction by block hash and transaction index position.\n\n### Parameters\n\n1. `DATA`, 32 Bytes - hash of a block.\n2. `QUANTITY` - integer of the transaction index position.\n\n### Response\n\n`Object` - A transaction object, or `null` when no transaction was found:\n\n- `blockHash`: `DATA`, 32 Bytes - hash of the block where this transaction was in. `null` when its pending.\n- `blockNumber`: `QUANTITY` - block number where this transaction was in. `null` when its pending.\n- `from`: `DATA`, 20 Bytes - address of the sender.\n- `gas`: `QUANTITY` - gas provided by the sender.\n- `gasPrice`: `QUANTITY` - gas price provided by the sender in Wei.\n- `hash`: `DATA`, 32 Bytes - hash of the transaction.\n- `input`: `DATA` - the data send along with the transaction.\n- `nonce`: `QUANTITY` - the number of transactions made by the sender prior to this one.\n- `to`: `DATA`, 20 Bytes - address of the receiver. `null` when its a contract creation transaction.\n- `transactionIndex`: `QUANTITY` - integer of the transactions index position in the block. `null` when its pending.\n- `value`: `QUANTITY` - value transferred in Wei.\n- `v`: `QUANTITY` - ECDSA recovery id\n- `r`: `QUANTITY` - ECDSA signature r\n- `s`: `QUANTITY` - ECDSA signature s",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getTransactionByBlockHashAndIndex",params:["0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91","0x0"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getTransactionByBlockHashAndIndex",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{blockHash:"0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91",blockNumber:"0x1d0ee71",from:"0x94060ed99db2b0f5a59e19e2622a16a9ce6ca5cc",gas:"0x4c4b40",gasPrice:"0x2794ca2400e",maxFeePerGas:"0x70573db9000",maxPriorityFeePerGas:"0x2794ca24000",hash:"0xccaa67d8a2849c3cb9caa7844ba02aaec31f3320149c0606fbe31dbb2a6a9be7",input:"0xbc5cc6c0000000000000000000000000000000000000000000000000000000000709cc320000000000000000000000000000000000000000000000000000000062c7b2450000000000000000000000000000000000000000000000000dde4d6f71959da100000000000000000000000000000000000000000000000000000000000f3ca6",nonce:"0x97e9",to:"0xf44a801b86cfb7f203f612f94ee97ba8ccf45452",transactionIndex:"0x0",value:"0x0",type:"0x2",accessList:[],chainId:"0x89",v:"0x0",r:"0x46bbf35f292af955b793ad51a4c777b60b3a662cd3bc3e9c8ba9b70c165c2171",s:"0x5294841235369627a458a5586bcc98e02121186f943ad866ff80b32a7184934f"}}}},{name:"eth_getTransactionByBlockNumberAndIndex",content:'Returns information about a transaction by block number and transaction index position.\n\n### Parameters\n\n1. `QUANTITY|TAG` - a block number, or the string `"earliest"`, `"latest"` or `"pending"`, as in the default block parameter\n2. `QUANTITY` - the transaction index position.\n\n### Response\n\n`Object` - A transaction object, or `null` when no transaction was found:\n\n- `blockHash`: `DATA`, 32 Bytes - hash of the block where this transaction was in. `null` when its pending.\n- `blockNumber`: `QUANTITY` - block number where this transaction was in. `null` when its pending.\n- `from`: `DATA`, 20 Bytes - address of the sender.\n- `gas`: `QUANTITY` - gas provided by the sender.\n- `gasPrice`: `QUANTITY` - gas price provided by the sender in Wei.\n- `hash`: `DATA`, 32 Bytes - hash of the transaction.\n- `input`: `DATA` - the data send along with the transaction.\n- `nonce`: `QUANTITY` - the number of transactions made by the sender prior to this one.\n- `to`: `DATA`, 20 Bytes - address of the receiver. `null` when its a contract creation transaction.\n- `transactionIndex`: `QUANTITY` - integer of the transactions index position in the block. `null` when its pending.\n- `value`: `QUANTITY` - value transferred in Wei.\n- `v`: `QUANTITY` - ECDSA recovery id\n- `r`: `QUANTITY` - ECDSA signature r\n- `s`: `QUANTITY` - ECDSA signature s',request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getTransactionByBlockNumberAndIndex",params:["0x1D0EE71","0x0"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getTransactionByBlockNumberAndIndex",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{blockHash:"0x39da9a966ecbe42e15c46ed4c70a34f85376bd867830cfc3e73fe0457a032b91",blockNumber:"0x1d0ee71",from:"0x94060ed99db2b0f5a59e19e2622a16a9ce6ca5cc",gas:"0x4c4b40",gasPrice:"0x2794ca2400e",maxFeePerGas:"0x70573db9000",maxPriorityFeePerGas:"0x2794ca24000",hash:"0xccaa67d8a2849c3cb9caa7844ba02aaec31f3320149c0606fbe31dbb2a6a9be7",input:"0xbc5cc6c0000000000000000000000000000000000000000000000000000000000709cc320000000000000000000000000000000000000000000000000000000062c7b2450000000000000000000000000000000000000000000000000dde4d6f71959da100000000000000000000000000000000000000000000000000000000000f3ca6",nonce:"0x97e9",to:"0xf44a801b86cfb7f203f612f94ee97ba8ccf45452",transactionIndex:"0x0",value:"0x0",type:"0x2",accessList:[],chainId:"0x89",v:"0x0",r:"0x46bbf35f292af955b793ad51a4c777b60b3a662cd3bc3e9c8ba9b70c165c2171",s:"0x5294841235369627a458a5586bcc98e02121186f943ad866ff80b32a7184934f"}}}},{name:"eth_getTransactionReceipt",content:"Returns the receipt of a transaction by transaction hash.\n\n**Note** That the receipt is not available for pending transactions.\n\n### Parameters\n\n1. `DATA`, 32 Bytes - hash of a transaction\n\n### Response\n\n`Object` - A transaction receipt object, or `null` when no receipt was found:\n\n- `transactionHash `: `DATA`, 32 Bytes - hash of the transaction.\n- `transactionIndex`: `QUANTITY` - integer of the transactions index position in the block.\n- `blockHash`: `DATA`, 32 Bytes - hash of the block where this transaction was in.\n- `blockNumber`: `QUANTITY` - block number where this transaction was in.\n- `from`: `DATA`, 20 Bytes - address of the sender.\n- `to`: `DATA`, 20 Bytes - address of the receiver. null when its a contract creation transaction.\n- `cumulativeGasUsed `: `QUANTITY ` - The total amount of gas used when this transaction was executed in the block.\n- `gasUsed `: `QUANTITY ` - The amount of gas used by this specific transaction alone.\n- `contractAddress `: `DATA`, 20 Bytes - The contract address created, if the transaction was a contract creation, otherwise `null`.\n- `logs`: `Array` - Array of log objects, which this transaction generated.\n- `logsBloom`: `DATA`, 256 Bytes - Bloom filter for light clients to quickly retrieve related logs.\n  It also returns _either_ :\n- `root` : `DATA` 32 bytes of post-transaction stateroot (pre Byzantium)\n- `status`: `QUANTITY` either `1` (success) or `0` (failure)",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"eth_getTransactionReceipt",params:["0x62004d0731964dd2fffde4d277b2eea67d0d25e2b6b86fa65944999849f948dc"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"eth_getTransactionReceipt",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{blockHash:"0x1077bc8af6f5eeee7a3d6c1c5a4ac7768c66887d8521d912ad77bd6733c6e36c",blockNumber:"0x1d0f495",contractAddress:null,cumulativeGasUsed:"0x19f21cc",effectiveGasPrice:"0x6fc23ac0f",from:"0x9ec200cde2c3b2a5e7834bbe6da35fa3228cd632",gasUsed:"0x4b0ad",logs:[{address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",topics:["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000009b08288c3be4f62bbf8d1c20ac9c5e6f9467d8b7","0x000000000000000000000000e575b1e4f299e82c6de2f8737181c77f59b829b4"],data:"0x000000000000000000000000000000000000000000000000c4a14b4c71928066",blockNumber:"0x1d0f495",transactionHash:"0x62004d0731964dd2fffde4d277b2eea67d0d25e2b6b86fa65944999849f948dc",transactionIndex:"0x88",blockHash:"0x1077bc8af6f5eeee7a3d6c1c5a4ac7768c66887d8521d912ad77bd6733c6e36c",logIndex:"0x20c",removed:!1}]}}}},{name:"web3_clientVersion",content:"Returns the current client version.\n\n### Parameters\n\nNone\n\n### Response\n\n`String` - The current client version",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"web3_clientVersion",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"web3_clientVersion",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"bor/v0.2.16-stable-f083705e/linux-amd64/go1.17.6"}}},{name:"web3_sha3",content:"Returns Keccak-256 (_not_ the standardized SHA3-256) of the given data.\n\n### Parameters\n\n1. `DATA` - the data to convert into a SHA3 hash\n\n### Response\n\n`DATA` - The SHA3 result of the given string.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"web3_sha3",params:["0x68656c6c6f20776f726c64"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"web3_sha3",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad"}}},{name:"net_version",content:"Returns the current network id.\n\n### Parameters\n\nNone\n\n### Response\n\n`String` - The current network id.\n\nThe full list of current network IDs is available at [chainlist.org](https://chainlist.org). Sopme common ones are:\n`1`: Ethereum Mainnet\n`2`: Morden testnet (now deprecated)\n`3`: Ropsten testnet\n`4`: Rinkeby testnet\n`5`: Goerli testnet",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"net_version",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"net_version",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"137"}}},{name:"net_listening",content:"Returns `true` if client is actively listening for network connections.\n\n### Parameters\n\nNone\n\n### Response\n\n`Boolean` - `true` when listening, otherwise `false`.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"net_listening",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"net_listening",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:!0}}},{name:"net_peerCount",content:"Returns number of peers currently connected to the client.\n\n### Parameters\n\nNone\n\n### Response\n\n`QUANTITY` - integer of the number of connected peers.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"net_peerCount",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"net_peerCount",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0xc8"}}},{name:"debug_traceBlockByHash",content:"The `debug_traceBlockByHash` method will return a full stack trace of all invoked opcodes of all transaction that were included in this block.\n\n### Parameters\n\n`hash` - Hash of the block to be traced.\n\n### Response\n\n`array` - Block traces, which have the following object shape (all return types are in hex values):\n`Response` - Trace Object, which has the following fields:\n- `calls` - Array of transactions in the block with the following fields -\n - `from` - Address\n - `gas` - Quantity\n - `gasused` - Quantity\n - `input` - Data\n - `output` - Data\n - `to` - Address\n - `type` - Data\n - `value` - Quantity",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"debug_traceBlockByHash",params:["0x0bed7f55037edcd8f92b068ba650c37b4baefe7405765825aa06a5c826c17061",{tracer:"callTracer"}],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"debug_traceBlockByHash",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:[{result:{type:"CALL",from:"0x75767b4d509319ab226fa04777ce15bc11b6189e",to:"0x34ba5726d6f13147f0f13b0a705d0f3c10a74866",value:"0x0",gas:"0x8992",gasUsed:"0x8992",input:"0x1249c58b",output:"0x"}}]}}},{name:"debug_traceBlockByNumber",content:"The `debug_traceBlockByNumber` method will return a full stack trace of all invoked opcodes of all transaction that were included in this block.\n\n### Parameters\n\n`quantity` - Number of the block to be traced or the string 'latest', 'earliest' or 'pending'.\n\n### Response\n\n`array` - Block traces, which have the following object shape (all return types are in hex values):\n`Response` - Trace Object, which has the following fields:\n- `calls` - Array of transactions in the block with the following fields -\n - `from` - Address\n - `gas` - Quantity\n - `gasused` - Quantity\n - `input` - Data\n - `output` - Data\n - `to` - Address\n - `type` - Data\n - `value` - Quantity",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"debug_traceBlockByNumber",params:["0x1E0D515",{tracer:"callTracer"}],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"debug_traceBlockByNumber",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:[{result:{type:"CALL",from:"0x75767b4d509319ab226fa04777ce15bc11b6189e",to:"0x34ba5726d6f13147f0f13b0a705d0f3c10a74866",value:"0x0",gas:"0x8992",gasUsed:"0x8992",input:"0x1249c58b",output:"0x"}}]}}},{name:"debug_traceCall",content:"The `debug_traceCall` method will return a full stack trace of all invoked opcodes of all transaction that were included in this block.\n\n### Parameters\n\n`from` - (optional) wallet address the transaction is sent from.\n`to` - wallet address the transaction is sent to.\n`gas` - (optional) gas provided for the transaction\n`gasprice` - (optional) gasPrice\n`value` - (optional) Integer of the value sent with the transaction in hexadecimal.\n`data` - (optional) hash of the method signature and encoded parameters\n`quantity` - Number of the block or the string 'latest', 'earliest' or 'pending'.\n\n### Response\n\n`array` - Block traces, which have the following object shape (all return types are in hex values):\n`Response` - Trace Object, which has the following fields:\n - `failed` - Address\n - `gas` - Quantity\n - `returnvalue` - Data\n - `structlogs` - Array\n  - `entries` - Array\n  - `storagesbydepth` - Array",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"debug_traceCall",params:[{from:"0xe7804c37c13166ff0b37f5ae0bb07a3aebb6e245",to:"0x23dfb4c1b418e87cbfc8ee5d3f977ff040092a3b",gas:"0x4DB1C"},"latest",{tracer:"callTracer"}],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"debug_traceCall",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{type:"CALL",from:"0xe7804c37c13166ff0b37f5ae0bb07a3aebb6e245",to:"0x23dfb4c1b418e87cbfc8ee5d3f977ff040092a3b",value:"0x0",gas:"0x48914",gasUsed:"0x0",input:"0x",output:"0x"}}}},{name:"debug_traceTransaction",content:"The `debug_traceTransaction` method will return a full stack trace of all invoked opcodes of all transaction that were included in this block.\n\n### Parameters\n\n`hash` - The hash of the transaction\n\n### Response\n\n`array` - Block traces, which have the following object shape (all return types are in hex values):\n`Response` - Trace Object, which has the following fields:\n - `failed` - Address\n - `gas` - Quantity\n - `returnvalue` - Data\n - `structlogs` - Array\n  - `entries` - Array\n  - `storagesbydepth` - Array",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"debug_traceTransaction",params:["0x45dda4209a629def55c76cff81ee94c7ae7274bebaf2bcc588dabd09546dfb1d"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"debug_traceTransaction",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{gas:174544,failed:!1,returnValue:" ",structLogs:[{pc:0,op:"PUSH1",gas:2978428,gasCost:3,depth:1,stack:[]}]}}}},{name:"txpool_content",content:"Returns tx pool content.\n\n### Parameters\n\nNone\n\n### Response\n\n`blockHash` - block hash where this transaction was in, `null` here.\n`blockNumber` - Block number where this transaction was added encoded as a hexadecimal, `null` here.\n`from` - Sender's address\n`gas` - Gas used in the transaction.\n`gasPrice` - Total amount in wei the sender wants to pay for the transaction.\n`hash` - Transaction hash.\n`input` - Encoded transaction input data.\n`nonce` - Number of transactions by the sender\n`r` - ECDSA signature r.\n`s` - ECDSA signature s.\n`to` - Receiver's address. `null` if it's a contract creation transaction.\n`transactionIndex` - Integer of the transactions index position in the block encoded as a hexadecimal.\n`type` - A number between 0 and 0x7f, for a total of 128 possible transaction types.\n`v` - ECDSA recovery id encoded as a hexadecimal.\n`value` - Value transferred in Wei encoded as a hexadecimal.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"txpool_content",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"txpool_content",body:{jsonrpc:"2.0",id:1,result:{pending:{"0x000000000160d20863bFA58e4CF12d4FB80DC9AC":{0:{blockHash:null,blockNumber:null,from:"0x000000000160d20863bfa58e4cf12d4fb80dc9ac",gas:"0x5208",gasPrice:"0x3b9aca00",hash:"0x0043e0aa606d7fd598cffd235b2a98c47d3c437c0d6ad8e11684a0761bd4bc78",input:"0x",nonce:"0x0",to:"0x000000000160d20863bfa58e4cf12d4fb80dc9ac",transactionIndex:null,value:"0x1b3a5e0d8f000",type:"0x0",v:"0x136",r:"0x82784a4b983469e152928ded49be3b63926a4df9121d7bec7878a34538e38bd9",s:"0x74f8b0850c975ac5cd689b6f66002944a1acdd70b5e2460a7ee36be7eedef8d3"}}}}}}},{name:"txpool_inspect",content:"Returns a detailed info on tx pool transactions.\n\n### Parameters\n\nNone\n\n### Response \n\n- `pending` - Array of transaction objects, with textual data.\n- `queued` - Array of transaction objects, with textual data.",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"txpool_inspect",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"txpool_inspect",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{pending:{"0x000000000160d20863bFA58e4CF12d4FB80DC9AC":{0:"0x000000000160d20863bFA58e4CF12d4FB80DC9AC: 479000000000000 wei + 21000 gas \xd7 1000000000 wei"},"0x0000003b9a0D829e3e4C62838c8609337483e6f3":{59:"0xa9a6A3626993D487d2Dbda3173cf58cA1a9D9e9f: 0 wei + 54551 gas \xd7 30100100146 wei"},"0x0002e89A801BF95A131fBbbDfD3097fa84809d7C":{2424:"0x4230551Da88495d202825F5f03Fa9A351cd093B2: 0 wei + 1500001 gas \xd7 1000000000 wei",2425:"0x4230551Da88495d202825F5f03Fa9A351cd093B2: 0 wei + 1500001 gas \xd7 30070000005 wei",2426:"0x4230551Da88495d202825F5f03Fa9A351cd093B2: 0 wei + 1500000 gas \xd7 29489037879 wei",2427:"0x4230551Da88495d202825F5f03Fa9A351cd093B2: 0 wei + 1500000 gas \xd7 30437555062 wei",2428:"0x4230551Da88495d202825F5f03Fa9A351cd093B2: 0 wei + 1500000 gas \xd7 29205536063 wei",2429:"0x4230551Da88495d202825F5f03Fa9A351cd093B2: 0 wei + 1500000 gas \xd7 30626295006 wei",2430:"0x4230551Da88495d202825F5f03Fa9A351cd093B2: 0 wei + 1500001 gas \xd7 32447750691 wei"}}}}}},{name:"txpool_status",content:"Returns a tx pool status.\n\n### Parameters\n\nNone\n\n### Response \n\n- `pending` - Total number of pending transactions in the txpool (in hex format).\n- `queued` - Total number of queued transactions in the txpool (in hex format).",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"txpool_status",params:[],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"txpool_status",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:{pending:"0x4deb",queued:"0x400"}}}},{name:"bor_getAuthor",content:"Returns the address of the author.\n\n### Parameters\n\n`BlockNumber` - (in hexadecimal format)\n\n### Response\n\n`AUTHOR` - address",request:{method:"POST",header:[],body:{jsonrpc:"2.0",id:1,method:"bor_getAuthor",params:["0x1D6D0AE"]},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"bor_getAuthor",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0xf0245f6251bef9447a08766b9da2b07b28ad80b0"}}},{name:"bor_getRootHash",content:"Returns the root hash of the specified block range.\n\n### Parameters\n\nfrom (block number, in integer format)\nto (block number, in integer format)\n\n### Response\n\n`HASH` - Root hash of the given block range",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"bor_getRootHash",params:[30855242,30855342],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"bor_getRootHash",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"16f3ba27d44a2cc4795514f52981039883deb1ca95f7799414df8784a5e431d0"}}},{name:"bor_getSignersAtHash",content:"Return signers for the given block hash.\n\n### Parameters\n\n`blockhash` - Hash of the block to for check signers\n\n### Response\n\n`HASH` - Signers",request:{method:"POST",header:[],body:{jsonrpc:"2.0",method:"bor_getSignersAtHash",params:["0x167e1540ed98b3f4ec33696915456dd6ca2fd178f4c2d8f6a8c2745945626fa1"],id:1},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"bor_getSignersAtHash",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:["0x02f70172f7f490653665c9bfac0666147c8af1f5","0x67b94473d81d0cd00849d563c94d0432ac988b49","0xf84c74dea96df0ec22e11e7c33996c73fcc2d822"]}}},{name:"bor_getCurrentProposer",content:"Returns the address of the current proposer.\n\n### Parameters\n\nNone\n\n### Response\n\n`AUTHOR` - address",request:{method:"POST",header:[],body:{jsonrpc:"2.0",id:1,method:"bor_getCurrentProposer",params:[]},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"bor_getCurrentProposer",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:"0xf0245f6251bef9447a08766b9da2b07b28ad80b0"}}},{name:"bor_getCurrentValidators",content:"Returns the current validators.\n\n### Parameters\n\nNone\n\n### Response\n\n`AUTHOR` - address",request:{method:"POST",header:[],body:{jsonrpc:"2.0",id:1,method:"bor_getCurrentValidators",params:[]},url:"https://matic-mainnet--jsonrpc-archive-dbgtxn.datahub.figment.io",headers:{},query:""},interactive:!0,response:{name:"bor_getCurrentValidators",status:"OK",code:200,body:{jsonrpc:"2.0",id:1,result:[{ID:0,signer:"0x02f70172f7f490653665c9bfac0666147c8af1f5",power:1,accum:6},{ID:0,signer:"0xf84c74dea96df0ec22e11e7c33996c73fcc2d822",power:1,accum:-22}]}}}],service:"node-api",networks:[{label:"Arbitrum",value:"arbitrum"},{label:"Avalanche C-Chain",value:"avalanche-c-chain"},{label:"Avalanche P-Chain",value:"avalanche-p-chain"},{label:"Avalanche X-Chain",value:"avalanche-x-chain"},{label:"BNB",value:"bnb"},{label:"Celo",value:"celo"},{label:"Cosmos LCD",value:"cosmos-lcd"},{label:"Cosmos Tendermint RPC",value:"cosmos-tendermint-rpc"},{label:"Ethereum",value:"ethereum"},{label:"Fantom",value:"fantom"},{label:"Kusama Sidecar",value:"kusama-sidecar"},{label:"Mina GraphQL",value:"mina-graphql"},{label:"NEAR",value:"near"},{label:"Optimism",value:"optimism"},{label:"Osmosis LCD",value:"osmosis-lcd"},{label:"Osmosis Tendermint RPC",value:"osmosis-tendermint-rpc"},{label:"Polkadot Sidecar",value:"polkadot-sidecar"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"polygon",proxy:"https://api-service-proxy.figment-secops.workers.dev",mdxType:"APIMethods"}))}u.isMDXComponent=!0},46700:(e,a,t)=>{var n={"./af":42786,"./af.js":42786,"./ar":30867,"./ar-dz":14130,"./ar-dz.js":14130,"./ar-kw":96135,"./ar-kw.js":96135,"./ar-ly":56440,"./ar-ly.js":56440,"./ar-ma":47702,"./ar-ma.js":47702,"./ar-sa":16040,"./ar-sa.js":16040,"./ar-tn":37100,"./ar-tn.js":37100,"./ar.js":30867,"./az":31083,"./az.js":31083,"./be":9808,"./be.js":9808,"./bg":68338,"./bg.js":68338,"./bm":67438,"./bm.js":67438,"./bn":8905,"./bn-bd":76225,"./bn-bd.js":76225,"./bn.js":8905,"./bo":11560,"./bo.js":11560,"./br":1278,"./br.js":1278,"./bs":80622,"./bs.js":80622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":50877,"./cv.js":50877,"./cy":47373,"./cy.js":47373,"./da":24780,"./da.js":24780,"./de":59740,"./de-at":60217,"./de-at.js":60217,"./de-ch":60894,"./de-ch.js":60894,"./de.js":59740,"./dv":5300,"./dv.js":5300,"./el":50837,"./el.js":50837,"./en-au":78348,"./en-au.js":78348,"./en-ca":77925,"./en-ca.js":77925,"./en-gb":22243,"./en-gb.js":22243,"./en-ie":46436,"./en-ie.js":46436,"./en-il":47207,"./en-il.js":47207,"./en-in":44175,"./en-in.js":44175,"./en-nz":76319,"./en-nz.js":76319,"./en-sg":31662,"./en-sg.js":31662,"./eo":92915,"./eo.js":92915,"./es":55655,"./es-do":55251,"./es-do.js":55251,"./es-mx":96112,"./es-mx.js":96112,"./es-us":71146,"./es-us.js":71146,"./es.js":55655,"./et":5603,"./et.js":5603,"./eu":77763,"./eu.js":77763,"./fa":76959,"./fa.js":76959,"./fi":11897,"./fi.js":11897,"./fil":42549,"./fil.js":42549,"./fo":94694,"./fo.js":94694,"./fr":94470,"./fr-ca":63049,"./fr-ca.js":63049,"./fr-ch":52330,"./fr-ch.js":52330,"./fr.js":94470,"./fy":5044,"./fy.js":5044,"./ga":29295,"./ga.js":29295,"./gd":2101,"./gd.js":2101,"./gl":38794,"./gl.js":38794,"./gom-deva":27884,"./gom-deva.js":27884,"./gom-latn":23168,"./gom-latn.js":23168,"./gu":95349,"./gu.js":95349,"./he":24206,"./he.js":24206,"./hi":30094,"./hi.js":30094,"./hr":30316,"./hr.js":30316,"./hu":22138,"./hu.js":22138,"./hy-am":11423,"./hy-am.js":11423,"./id":29218,"./id.js":29218,"./is":90135,"./is.js":90135,"./it":90626,"./it-ch":10150,"./it-ch.js":10150,"./it.js":90626,"./ja":39183,"./ja.js":39183,"./jv":24286,"./jv.js":24286,"./ka":12105,"./ka.js":12105,"./kk":47772,"./kk.js":47772,"./km":18758,"./km.js":18758,"./kn":79282,"./kn.js":79282,"./ko":33730,"./ko.js":33730,"./ku":1408,"./ku.js":1408,"./ky":33291,"./ky.js":33291,"./lb":36841,"./lb.js":36841,"./lo":55466,"./lo.js":55466,"./lt":57010,"./lt.js":57010,"./lv":37595,"./lv.js":37595,"./me":39861,"./me.js":39861,"./mi":35493,"./mi.js":35493,"./mk":95966,"./mk.js":95966,"./ml":87341,"./ml.js":87341,"./mn":5115,"./mn.js":5115,"./mr":10370,"./mr.js":10370,"./ms":9847,"./ms-my":41237,"./ms-my.js":41237,"./ms.js":9847,"./mt":72126,"./mt.js":72126,"./my":56165,"./my.js":56165,"./nb":64924,"./nb.js":64924,"./ne":16744,"./ne.js":16744,"./nl":93901,"./nl-be":59814,"./nl-be.js":59814,"./nl.js":93901,"./nn":83877,"./nn.js":83877,"./oc-lnc":92135,"./oc-lnc.js":92135,"./pa-in":15858,"./pa-in.js":15858,"./pl":64495,"./pl.js":64495,"./pt":89520,"./pt-br":57971,"./pt-br.js":57971,"./pt.js":89520,"./ro":96459,"./ro.js":96459,"./ru":21793,"./ru.js":21793,"./sd":40950,"./sd.js":40950,"./se":10490,"./se.js":10490,"./si":90124,"./si.js":90124,"./sk":64249,"./sk.js":64249,"./sl":14985,"./sl.js":14985,"./sq":51104,"./sq.js":51104,"./sr":49131,"./sr-cyrl":79915,"./sr-cyrl.js":79915,"./sr.js":49131,"./ss":85893,"./ss.js":85893,"./sv":98760,"./sv.js":98760,"./sw":91172,"./sw.js":91172,"./ta":27333,"./ta.js":27333,"./te":23110,"./te.js":23110,"./tet":52095,"./tet.js":52095,"./tg":27321,"./tg.js":27321,"./th":9041,"./th.js":9041,"./tk":19005,"./tk.js":19005,"./tl-ph":75768,"./tl-ph.js":75768,"./tlh":89444,"./tlh.js":89444,"./tr":72397,"./tr.js":72397,"./tzl":28254,"./tzl.js":28254,"./tzm":51106,"./tzm-latn":30699,"./tzm-latn.js":30699,"./tzm.js":51106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":67691,"./uk.js":67691,"./ur":13795,"./ur.js":13795,"./uz":6791,"./uz-latn":60588,"./uz-latn.js":60588,"./uz.js":6791,"./vi":65666,"./vi.js":65666,"./x-pseudo":14378,"./x-pseudo.js":14378,"./yo":75805,"./yo.js":75805,"./zh-cn":83839,"./zh-cn.js":83839,"./zh-hk":55726,"./zh-hk.js":55726,"./zh-mo":99807,"./zh-mo.js":99807,"./zh-tw":74152,"./zh-tw.js":74152};function o(e){var a=s(e);return t(a)}function s(e){if(!t.o(n,e)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return n[e]}o.keys=function(){return Object.keys(n)},o.resolve=s,e.exports=o,o.id=46700}}]);