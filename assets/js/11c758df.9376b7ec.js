(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[540],{2750:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>l});var a=n(7462),s=(n(7294),n(3905)),i=n(5488),r=n(5162),o=n(7643);const d={toc:[]};function l(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("br",null),(0,s.kt)("details",null,(0,s.kt)("summary",null,(0,s.kt)("span",{className:"open"},"API Authentication"),(0,s.kt)("span",{className:"closed"},"Click to view API Authentication details")),(0,s.kt)("div",null,"API calls require authentication with API key via ",(0,s.kt)("code",null,"Authorization")," ","request header or ",(0,s.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,s.kt)("strong",null,n.network," ",n.service)," ","endpoint, hosted at ",(0,s.kt)("code",null,n.url),(0,s.kt)("br",null),(0,s.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${n.url}${n.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,s.kt)(r.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${n.url}/apikey/{{apikey}}${n.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,s.kt)(r.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${n.url}${n.route}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,s.kt)(r.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,s.kt)(o.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${n.url}/apikey/{{apikey}}${n.route}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`)))))}l.isMDXComponent=!0},3976:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var a=n(7294),s=n(6550);function i(e){let{network:t,networks:n,methods:i,service:r}=e;const o=(0,s.TH)(),d=(0,s.k6)();return a.createElement("div",null,a.createElement("label",null,"Change Network: "),a.createElement("select",{className:"custom-select",defaultValue:t,onChange:e=>{d.push(o.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},n.map((e=>a.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),a.createElement("label",null," Jump to: "),a.createElement("select",{className:"custom-select",defaultValue:o.hash.replace("#","")||"",onChange:e=>{d.push(`#${e.target.value}`)}},i.map((e=>a.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},7297:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(7294);function s(e){let{network:t,service:n}=e;return(0,a.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=t;let a=e.previousElementSibling;a=a.cloneNode(!0),a.querySelector(".breadcrumbs__link span").innerHTML=n.label,a.querySelector(".breadcrumbs__link").href=n.link,e.insertAdjacentElement("beforebegin",a)}),[t]),a.createElement(a.Fragment,null)}},9638:(e,t,n)=>{"use strict";n.d(t,{S:()=>D});var a=n(7462),s=n(7294),i=n(8538),r=n(7748),o=n(381),d=n.n(o);const l={days:()=>({start:new Date(Date.now()-864e5).toISOString().split("T")[0],end:(new Date).toISOString().split("T")[0]}),polkadot(){const e=d()("2022-10-26","YYYY-MM-DD"),t=d()().diff(e,"days")+1,n=876+Math.ceil(1*t);return{start:n-30,end:n}},solana(){const e=Math.ceil(10.5),t=d()("2022-10-25","YYYY-MM-DD"),n=d()().diff(t,"days")+1,a=363+Math.ceil(.35*n);return{start:a-e,end:a}},near(){const e=4593.6*25,t=Math.ceil(7*e),n=d()("2022-10-25","YYYY-MM-DD"),a=d()().diff(n,"days")+1,s=76953090+Math.ceil(a*e);return{start:s-t-Math.ceil(100*e),end:s+Math.ceil(100*e)}}};var u=n(460),c=n.n(u),p=n(3746),m=n(6412);const g={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function h(e){let{children:t="",header:n,actions:i,disabled:r=!1,status:o,onValueChange:d}=e;const l=(0,m.p)(),u=(0,s.useRef)(null);(0,s.useEffect)((()=>{const e=u.current?.querySelector("textarea"),t=e=>{const t=e.target;t.style.width=t.scrollWidth+"px"};return e.addEventListener("input",t),()=>e.removeEventListener("input",t)}),[]);return s.createElement("div",{ref:u},s.createElement(_,{actions:i,status:o},n),s.createElement("div",{className:g.Container},s.createElement(c(),{value:t,onValueChange:d,highlight:function(e){return void 0===e&&(e=""),s.createElement(p.ZP,(0,a.Z)({},p.lG,{theme:l,code:e,language:"json"}),(e=>{let{className:t,style:n,tokens:i,getLineProps:r,getTokenProps:o}=e;return s.createElement("div",{className:g.Code},i.map(((e,t)=>s.createElement("div",(0,a.Z)({key:t},r({line:e,key:t}),{className:g.Line}),s.createElement("span",{className:g.LineContent},e.map(((e,t)=>s.createElement("span",(0,a.Z)({key:t},o({token:e,key:t}))))))))))}))},disabled:r,ignoreTabKey:!0,padding:10,style:{...l.plain,overflow:"auto"},className:g.Editor})))}function _(e){let{children:t,actions:n=[],status:a}=e;return s.createElement("div",{className:g.Header,"data-status":a},s.createElement("span",null,t),s.createElement("span",{className:g.Actions},n.map(((e,t)=>{let{title:n,onClick:a,Component:i=n}=e;return s.createElement("button",{className:g.HeaderButton,key:`${t}:${n}`,title:n,onClick:a},i)}))))}var b=n(195);const y="overlayHeaderButton_IGf5";const k=function(e,t){const n=(0,s.useRef)(!1),a={error:void 0,data:void 0,loading:!1},[i,r]=(0,s.useReducer)(((e,t)=>{switch(t.type){case"loading":return{...a,loading:!0};case"fetched":return{...a,data:t.payload,loading:!1};case"error":return{...a,error:t.payload,loading:!1};default:return e}}),a);return{...i,fetchData:async function(a,s){void 0===s&&(s={}),r({type:"loading"});try{const i=await fetch(e+(a?`/${a}`:""),{...t,...s});if(!i.ok){let e,t,n;try{n=JSON.parse(await i.text()),e=await i.json(),t=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(t,null,2)||JSON.stringify(n,null,2)||i.statusText)}const o=await i.json();if(n.current)return;return r({type:"fetched",payload:o}),o}catch(i){if(n.current)return;return r({type:"error",payload:i.message}),null}}}};var f,v=n(7643),w=n(4672);function j(){return j=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},j.apply(this,arguments)}const A=e=>{let{title:t,titleId:n,...a}=e;return s.createElement("svg",j({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?s.createElement("title",{id:n},t):null,f||(f=s.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var E;function T(){return T=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},T.apply(this,arguments)}const x=e=>{let{title:t,titleId:n,...a}=e;return s.createElement("svg",T({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?s.createElement("title",{id:n},t):null,E||(E=s.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function C(e){let{req:t,res:n,interactive:a,endpoint:i}=e;const[r,o]=(0,s.useState)(q(t.body)),[d,l]=(0,s.useState)(t.query),[u,c]=(0,s.useState)(P(n.body)),p="string"==typeof t.body&&0==t.body.indexOf("query"),{data:m,error:g,loading:_,fetchData:f}=k(i,{method:t.method,headers:{...t.headers,"Content-Type":p?"application/graphql":"application/json"},body:q(t.body)}),[j,E]=(0,s.useState)(null);(0,s.useEffect)((()=>{_?E("LOADING"):g||m?.error?E("ERROR"):m&&E("SUCCESS")}),[m,g,_]);const T=[a?{title:"Run request",onClick:async()=>{const e=await f(d,{body:r});e&&c(P(e))},Component:s.createElement(s.Fragment,null,s.createElement(A,null)," Run")}:null,{title:"Copy",onClick:()=>(0,b.Z)(r),Component:s.createElement(w.Z,{code:"",className:y})},a?{title:"Reset",onClick:()=>{E(null),l(t.query),o(q(t.body)),c(P(n.body))},Component:s.createElement(x,null)}:null].filter((e=>!!e));return s.createElement(s.Fragment,null,s.createElement(h,{header:"GET"===t.method?"Request Query "+(a?"(try it)":""):"Request Body "+(a?"(try it)":""),actions:T,disabled:!a,onValueChange:e=>{a&&("GET"===t.method?l(e):"POST"===t.method&&o(e))}},"GET"===t.method?d:r),s.createElement(v.Z,{title:j?"Response":"Example Response",language:"json"},g?`${g}`:u))}function P(e){return JSON.stringify(e,null,2)}function q(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const S="heading_REER";var O=n(9960),I=n(3905);const z={toc:[]};function Z(e){let{components:t,...n}=e;return(0,I.kt)("wrapper",(0,a.Z)({},z,n,{components:t,mdxType:"MDXLayout"}),(0,I.kt)("details",{open:n.accordionOpen?"open":void 0},(0,I.kt)("summary",null,(0,I.kt)("span",{className:"open"},"Specification"),(0,I.kt)("span",{className:"closed"},"View Specification")),(0,I.kt)(i.D,{mdxType:"ReactMarkdown"},n.details)))}function N(e){let{name:t,content:n="",interactive:a,network:r,request:o,accordionOpen:d=!1,response:u,endpoint:c}=e;const p=c.includes("rewards-api"),m=["by day","account","address"].find((e=>t.includes(e))),g=["by epoch","by era"].find((e=>t.includes(e)))||t.startsWith("SOL");if(p&&g){const{start:e,end:t}=l[r]();o.body={...o.body,start:e,end:t}}else if(p&&m){const{start:e,end:t}=l.days();o.body={...o.body,start:e,end:t}}const[h,..._]=n.trim().split(/\n+/),b=_.join("\n");return s.createElement(s.Fragment,null,s.createElement("h2",{id:t.toLowerCase(),className:S,"data-method":o.method},s.createElement(O.Z,{to:`#${t.toLowerCase()}`},t)),s.createElement(i.D,null,h),s.createElement(C,{req:o,res:u,interactive:a,endpoint:c}),s.createElement(Z,{details:b,accordionOpen:d}),s.createElement("hr",null))}function D(e){let{network:t,methods:n,service:i,proxy:o}=e;return s.createElement(s.Fragment,null,s.createElement("h3",null,"Available Methods"),n.map(((e,n)=>s.createElement(N,(0,a.Z)({key:t+n},e,{network:t,endpoint:`${o}/${i}/${t}`,accordionOpen:"node-api"!==i})))),s.createElement(r.Z,null))}Z.isMDXComponent=!0},7120:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var a=n(7462),s=(n(7294),n(3905)),i=n(9638),r=n(3976),o=n(7297),d=n(2750);const l={title:"Ethereum",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Validator API - Ethereum",image:"img/logo.svg",keywords:["Validator API","Ethereum"]},u="Validator API - Ethereum",c={unversionedId:"api-reference/validator-api/ethereum",id:"api-reference/validator-api/ethereum",title:"Ethereum",description:"Validator API - Ethereum",source:"@site/docs/api-reference/validator-api/ethereum.mdx",sourceDirName:"api-reference/validator-api",slug:"/api-reference/validator-api/ethereum",permalink:"/api-reference/validator-api/ethereum",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Ethereum",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Validator API - Ethereum",image:"img/logo.svg",keywords:["Validator API","Ethereum"]},sidebar:"docsSidebar"},p={},m=[],g={toc:m};function h(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"validator-api---ethereum"},"Validator API - Ethereum"),(0,s.kt)(o.Z,{network:"Ethereum",service:{link:"/api-reference/validator-api",label:"Validator API"},mdxType:"FixBreadCrumbs"}),(0,s.kt)(r.Z,{service:"validator-api",methods:[{name:"/eth2_staking/positions"},{name:"/eth2_staking/positions"},{name:"/eth2_staking/positions/{position_id}/validators"},{name:"/eth2_staking/provision"},{name:"/eth2_staking/validators"},{name:"/eth2_staking/validators/{id}"}],networks:[{label:"Ethereum",value:"ethereum"},{label:"Polkadot",value:"polkadot"}],network:"ethereum",mdxType:"ApiReferenceNav"}),(0,s.kt)(d.ZP,{url:"https://hubble.figment.io/api/v1/prime",network:"Ethereum",service:"Validator API",route:"/eth2_staking/positions",mdxType:"MakingCalls"}),(0,s.kt)(i.S,{methods:[{name:"/eth2_staking/positions",content:'Request creation of new staking position with the passed attributes.\n\n### Parameters\n\n- `external_user_id` \u2014 `string` \u2014 A customer user ID.\n- `external_user_email` \u2014 `string` \u2014 A customer email address.\n- `withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n- `validators_count` \u2014 `integer` \u2014 A number of validators.\n- `eth2_network_name` \u2014 `string` \u2014 A network name, denoting testnet (`goerli`) or mainnet (`prater`).\n    \n\n### Response\n\n- `success` \u2014 `boolean` \u2014 Returns `true` if the action was successful, otherwise returns `false`.\n    \n\n### Webhook configuration\n\nUsers can be notified via webhook when a new staking position is created. Configure a webhook URL and a webhook API key under "Prime / ETH Staking" in the Prime Dashboard. The configured API key will be sent as an `Authorization` header. \n\n#### Note\n\nValidator API webhooks can only be configured from the Prime dashboard.',request:{method:"POST",header:[],body:{external_user_id:"user_id",external_user_email:"user@company.com",withdrawal_address:"0x01000000000000000000000003777debd25dcdbc4cdb56178906ac0ecac94019",validators_count:1,eth2_network_name:"goerli"},url:"https://hubble.figment.io/api/v1/prime",headers:{},query:"eth2_staking/positions"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/positions",body:{success:!0}}},{name:"/eth2_staking/positions",content:"Returns a list of staking positions.\n\n### Parameters\n\n- `withdrawal_address` \u2014 `string` \u2014 A withdrawal address (required)\n- `page[size]` \u2014 `integer` \u2014 The number of results to display, used for pagination (optional).\n- `page[number]` \u2014 `integer` \u2014 The number of pages to display (optional).\n- `fundable_positions_only` \u2014 `boolean` \u2014 `true` will display only positions which can be funded (optional).\n    \n\n### Response\n\n- `data` - `array`\n    - `object` \u2014 Each response object contains the following fields:\n        - `id` \u2014 A unique identifier.\n        - `type` \u2014 The type of staking position.\n        - `attributes`\n            - `id` \u2014 A unique identifier.\n            - `name` \u2014 A name.\n            - `eth1_withdrawal_address` \u2014 An Ethereum address.\n            - `staked_amount` \u2014 The amount of staked ETH.\n            - `validators_count` \u2014 A number of validators.\n            - `created_at` \u2014 Timestamp.\n            - `updated_at` \u2014 Timestamp.\n        - `links` \u2014 `object` \u2014 Pagination links based on `page[size]` and `page[number]`.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/positions?withdrawal_address=0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf&page[size]=10&page[number]=1&fundable_positions_only=false"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/positions",body:{data:[{id:"18",type:"position",attributes:{id:18,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",staked_amount:320,validators_count:10,created_at:"2021-10-04T14:28:25.497Z",updated_at:"2022-10-17T14:40:10.589Z",name:null}},{id:"20",type:"position",attributes:{id:20,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",staked_amount:320,validators_count:10,created_at:"2021-10-04T14:28:25.700Z",updated_at:"2022-10-17T14:40:10.578Z",name:null}},{id:"77",type:"position",attributes:{id:77,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",staked_amount:128,validators_count:4,created_at:"2022-03-21T13:30:54.214Z",updated_at:"2022-10-17T14:40:10.618Z",name:null}}],links:{self:"https://hubble.figment.io/api/v1/prime/eth2_staking/positions",current:"https://hubble.figment.io/api/v1/prime/eth2_staking/positions?page[number]=1"}}}},{name:"/eth2_staking/positions/{position_id}/validators",content:"Returns a list of validators for a given staking position.\n\n### Parameters\n\n- `position_id` \u2014 `string` \u2014 A valid staking position ID (required).\n- `include` \u2014 `string` \u2014 Accepted value: `position`\n- `status_history` - `string` \u2014 If present, status change history will be included for each validator.\n- `status` - `string` \u2014 Accepted value(s): `funding_requested`, `deposited`, `pending_initialized`, `pending_queued`, `active_ongoing`, `active_exiting`, `active_slashed`, `exited_unslashed`, `exited_slashed`, `withdrawal_possible`, `withdrawal_done`, `provisioned`.\n- `page[size]` \u2014 `integer` \u2014 The number of results to display, used for pagination (optional).\n- `page[number]` \u2014 `integer` \u2014 The page to display (optional).\n    \n\n### Response\n\n- `data` - `array`\n    - `object`\n        - `id` \u2014 `string` - A unique identifier.\n        - `type` \u2014 `string` \u2014 The type of position.\n        - `attributes` \u2014 `object`\n            - `name` \u2014 `string` \u2014 The position name.\n            - `pubkey` \u2014 `string` \u2014 A public key.\n            - `withdrawal_credentials` \u2014 `string` \u2014 Valid withdrawal credentials.\n            - `amount` \u2014 `integer` \u2014 An amount of ETH.\n            - `signature` \u2014 `string` \u2014 A valid signature.\n            - `deposit_data_root` \u2014 `string` \u2014 The deposit data.\n            - `deposit_message_root` \u2014 `string` \u2014 The deposit message.\n            - `fork_version` \u2014 `string` \u2014 A fork version.\n            - `eth2_network_name` \u2014 `string` \u2014 A network name, denoting testnet (`goerli`) or mainnet (`prater`).\n            - `status` - `string` \u2014 The positions current status.\n            - `deposit_cli_version` \u2014 `string` \u2014 The version of the CLI software used when making the deposit.\n            - `status_synced_at` \u2014 `string` \u2014 A timestamp indicating when the status was last synced,\n            - `status_history` \u2014 `array` \u2014 Details of the status history.\n                - `status` \u2014 `string` \u2014 A status.\n                - `changed_at` \u2014 `string` \u2014 A timestamp.\n        - `relationships` \u2014 `object`\n            - `position` \u2014 `object`\n                - `data` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `type` \u2014 `string` \u2014 The position type.\n        - `links` \u2014 `object` \u2014 Pagination links based on `page[size]` and `page[number]`.\n            - `self` \u2014 `string`\n            - `current` \u2014 `string`\n            - `next` \u2014 `string`\n            - `last` \u2014 `string`\n            - `prev` \u2014 `string`\n        - `included` \u2014 `array`\n            - `object`\n                - `id` \u2014 `string` \u2014 A unique identifier.\n                - `type` \u2014 `string` \u2014 The position type.\n                - `attributes` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `name` \u2014 `string` \u2014 A name.\n                    - `eth1_withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n                    - `staked_amount` \u2014 `integer` \u2014 An amount of staked ETH.\n                    - `validators_count` \u2014 `integer -` A number of validators.\n                    - `created_at` \u2014 `string` \u2014 A timestamp.\n                    - `updated_at` \u2014 `string` \u2014 A timestamp.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/positions/{{position_id}}/validators?page[size]=10&page[number]=1&include=position&status_history=true&status=provisioned&position_id=123456"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/positions/{position_id}/validators",body:{data:[{id:"string",type:"string",attributes:{name:"string",pubkey:"string",withdrawal_credentials:"string",amount:0,signature:"string",deposit_data_root:"string",deposit_message_root:"string",fork_version:"string",eth2_network_name:"string",status:"string",deposit_cli_version:"string",status_synced_at:"string",status_history:[{status:"string",changed_at:"string"}]},relationships:{position:{data:{id:"string",type:"string"}}}}],links:{self:"string",current:"string",next:"string",last:"string",prev:"string"},included:[{id:"string",type:"string",attributes:{id:0,name:"string",eth1_withdrawal_address:"string",staked_amount:0,validators_count:0,created_at:"string",updated_at:"string"}}]}}},{name:"/eth2_staking/provision",content:"Provision a new validator with passed attributes.\n\n### Parameters\n\n- `external_user_id` \u2014 `string` \u2014 A customer user ID.\n- `external_user_email` \u2014 `string` \u2014 A customer email address.\n- `withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n- `validators_count` \u2014 `integer` \u2014 A number of validators.\n- `eth2_network_name` \u2014 `string` \u2014 A network name, denoting `testnet`, `mainnet`.\n\n### Response\n\n- `staked_eth_amount` - `integer` \u2014 An amount of staked ETH.\n- `eth1_withdrawal_address` - `string` \u2014 An Ethereum address.\n- `eth2_network_name` - `string` \u2014 A network name, denoting `testnet` or `mainnet`\n\n### Webhook configuration\n\nUser can be notified once a new staking position is created by configuring webhook url and webhook API key under Prime / ETH Staking in Prime Dashboard. Configured API key will be sent in `Authorization` header.\n\n#### Note\n\nValidator API webhooks can only be configured from the Prime dashboard.",request:{method:"POST",header:[],body:{external_user_id:"user_id",external_user_email:"user@company.com",withdrawal_address:"0x01000000000000000000000003777debd25dcdbc4cdb56178906ac0ecac94019",validators_count:1,eth2_network_name:"mainnet"},url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/provision"},interactive:!1,response:{name:"/eth2_staking/provision Copy",body:{staked_eth_amount:32,eth1_withdrawal_address:"0xE40F80618324C814cD444434670a44ba4583aE38",eth2_network_name:"mainnet"}}},{name:"/eth2_staking/validators",content:"Returns a list of validators belonging to a customer.\n\n### Parameters\n\n- `withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n- `page[size]` \u2014 `integer` \u2014 The number of results to display, used for pagination (optional).\n- `page[number]` \u2014 `integer` \u2014 The page number to display (optional).\n- `include` \u2014 `string` \u2014 Accepts the value `position`.\n- `status_history` \u2014 `string` \u2014 If present, status change history will be included for each validator.\n- `status` \u2014 `string` \u2014 Accepted value(s): `funding_requested`, `deposited`, `pending_initialized`, `pending_queued`, `active_ongoing`, `active_exiting`, `active_slashed`, `exited_unslashed`, `exited_slashed`, `withdrawal_possible`, `withdrawal_done`, `provisioned`.\n    \n\n### Response\n\n- `data` \u2014 `array`\n    - `object`\n        - `id` \u2014 `string` \u2014 A unique identifier.\n        - `type` \u2014 `string` \u2014 The type of position.\n        - `attributes` \u2014 `object`\n            - `name` \u2014 `string` \u2014 The position name.\n            - `pubkey` \u2014 `string` \u2014 A public key.\n            - `withdrawal_credentials` \u2014 `string` \u2014 Valid withdrawal credentials.\n            - `amount` \u2014 `integer` \u2014 An amount of ETH.\n            - `signature` \u2014 `string` \u2014 A valid signature.\n            - `deposit_data_root` \u2014 `string` \u2014 The deposit data.\n            - `deposit_message_root` \u2014 `string` \u2014 The deposit message.\n            - `fork_version` \u2014 `string` \u2014 A fork version.\n            - `eth2_network_name` \u2014 `string` \u2014 A network name, `testnet`, `mainnet`\n            - `status` \u2014 `string` \u2014 The positions current status.\n            - `deposit_cli_version` \u2014 `string` \u2014 The version of the CLI software used when making the deposit.\n            - `status_synced_at` \u2014 `string` \u2014 A timestamp indicating when the status was last synced,\n            - `status_history` \u2014 `array` \u2014 Details of the status history.\n                - `status` \u2014 `string` \u2014 A status.\n                - `changed_at` \u2014 `string` \u2014 A timestamp.\n        - `relationships` \u2014 `object`\n            - `position` \u2014 `object`\n                - `data` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `type` \u2014 `string` \u2014 The position type.\n        - `links` \u2014 `object` \u2014 Pagination links based on `page[size]` and `page[number]`.\n            - `self` \u2014 `string`\n            - `current` \u2014 `string`\n            - `next` \u2014 `string`\n            - `last` \u2014 `string`\n            - `prev` \u2014 `string`\n        - `included` \u2014 `array`\n            - `object`\n                - `id` \u2014 `string` \u2014 A unique identifier.\n                - `type` \u2014 `string` \u2014 The position type.\n                - `attributes` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `name` \u2014 `string` \u2014 A name.\n                    - `eth1_withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n                    - `staked_amount` \u2014 `integer` \u2014 An amount of staked ETH.\n                    - `validators_count` \u2014 `integer` \u2014 A number of validators.\n                    - `created_at` \u2014 `string` \u2014 A timestamp.\n                    - `updated_at` \u2014 `string` \u2014 A timestamp.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/validators?withdrawal_address=0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf&page[size]=10&page[number]=1&include=position&status_history=true&status=provisioned"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/validators Copy",body:{data:[{id:"string",type:"string",attributes:{name:"string",pubkey:"string",withdrawal_credentials:"string",amount:0,signature:"string",deposit_data_root:"string",deposit_message_root:"string",fork_version:"string",eth2_network_name:"string",status:"string",deposit_cli_version:"string",status_synced_at:"string",status_history:[{status:"string",changed_at:"string"}]},relationships:{position:{data:{id:"string",type:"string"}}}}],links:{self:"string",current:"string",next:"string",last:"string",prev:"string"},included:[{id:"string",type:"string",attributes:{id:0,name:"string",eth1_withdrawal_address:"string",staked_amount:0,validators_count:0,created_at:"string",updated_at:"string"}}]}}},{name:"/eth2_staking/validators/{id}",content:"Returns information about a single validator.\n\n### Parameters\n\n- `id` \u2014 `string` \u2014 The validator ID.\n- `include` \u2014 `string` \u2014 Accepts the value `position`.\n- `status_history` \u2014 `string` \u2014 If present, the status change history will be included for each validator.\n    \n\n### Response\n\n- `data` \u2014 `array`\n    - `object`\n        - `id` \u2014 `string` - A unique identifier.\n        - `type` \u2014 `string` - The type of position.\n        - `attributes` \u2014 `object`\n            - `name` \u2014 `string` \u2014 The position name.\n            - `pubkey` \u2014 `string` \u2014 A public key.\n            - `withdrawal_credentials` \u2014 `string` \u2014 Valid withdrawal credentials.\n            - `amount` \u2014 `integer` \u2014 An amount of ETH.\n            - `signature` \u2014 `string` \u2014 A valid signature.\n            - `deposit_data_root` \u2014 `string` \u2014 The deposit data.\n            - `deposit_message_root` \u2014 `string` \u2014 The deposit message.\n            - `fork_version` \u2014 `string` \u2014 A fork version.\n            - `eth2_network_name` \u2014 `string` \u2014 A network name, denoting testnet (`goerli`) or mainnet (`prater`).\n            - `status` \u2014 `string` \u2014 The positions current status.\n            - `deposit_cli_version` \u2014 `string` \u2014 The version of the CLI software used when making the deposit.\n            - `status_synced_at` \u2014 `string` \u2014 A timestamp indicating when the status was last synced,\n            - `status_history` \u2014 `array` \u2014 Details of the status history.\n                - `status` \u2014 `string` \u2014 A status.\n                - `changed_at` \u2014 `string` \u2014 A timestamp.\n        - `relationships` \u2014 `object`\n            - `position` \u2014 `object`\n                - `data` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `type` \u2014 `string` \u2014 The position type.\n        - `included` \u2014 `array`\n            - `object`\n                - `id` \u2014 `string` \u2014 A unique identifier.\n                - `type` \u2014 `string` \u2014 The position type.\n                - `attributes` \u2014 `object`\n                    - `id` \u2014 `string` \u2014 A unique identifier.\n                    - `name` \u2014 `string` \u2014 A name.\n                    - `eth1_withdrawal_address` \u2014 `string` \u2014 An Ethereum address.\n                    - `staked_amount` \u2014 `integer` \u2014 An amount of staked ETH.\n                    - `validators_count` \u2014 `integer` \u2014 A number of validators.\n                    - `created_at` \u2014 `string` \u2014 A timestamp.\n                    - `updated_at` \u2014 `string` \u2014 A timestamp.",request:{method:"GET",header:[],url:"https://hubble.figment.io",headers:{},query:"api/v1/prime/eth2_staking/validators/?id=1234&include=position&status_history=true"},interactive:!1,response:{name:"/api/v1/prime/eth2_staking/validators/{id}",body:{data:{id:"string",type:"string",attributes:{name:"string",pubkey:"string",withdrawal_credentials:"string",amount:0,signature:"string",deposit_data_root:"string",deposit_message_root:"string",fork_version:"string",eth2_network_name:"string",status:"string",deposit_cli_version:"string",status_synced_at:"string",status_history:[{status:"string",changed_at:"string"}]},relationships:{position:{data:{id:"string",type:"string"}}}},included:[{id:"string",type:"string",attributes:{id:0,name:"string",eth1_withdrawal_address:"string",staked_amount:0,validators_count:0,created_at:"string",updated_at:"string"}}]}}}],service:"validator-api",networks:[{label:"Ethereum",value:"ethereum"},{label:"Polkadot",value:"polkadot"}],network:"ethereum",proxy:"https://api-service-proxy.figment-secops.workers.dev",mdxType:"APIMethods"}))}h.isMDXComponent=!0},6700:(e,t,n)=>{var a={"./af":2786,"./af.js":2786,"./ar":867,"./ar-dz":4130,"./ar-dz.js":4130,"./ar-kw":6135,"./ar-kw.js":6135,"./ar-ly":6440,"./ar-ly.js":6440,"./ar-ma":7702,"./ar-ma.js":7702,"./ar-sa":6040,"./ar-sa.js":6040,"./ar-tn":7100,"./ar-tn.js":7100,"./ar.js":867,"./az":1083,"./az.js":1083,"./be":9808,"./be.js":9808,"./bg":8338,"./bg.js":8338,"./bm":7438,"./bm.js":7438,"./bn":8905,"./bn-bd":6225,"./bn-bd.js":6225,"./bn.js":8905,"./bo":1560,"./bo.js":1560,"./br":1278,"./br.js":1278,"./bs":622,"./bs.js":622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":877,"./cv.js":877,"./cy":7373,"./cy.js":7373,"./da":4780,"./da.js":4780,"./de":9740,"./de-at":217,"./de-at.js":217,"./de-ch":894,"./de-ch.js":894,"./de.js":9740,"./dv":5300,"./dv.js":5300,"./el":837,"./el.js":837,"./en-au":8348,"./en-au.js":8348,"./en-ca":7925,"./en-ca.js":7925,"./en-gb":2243,"./en-gb.js":2243,"./en-ie":6436,"./en-ie.js":6436,"./en-il":7207,"./en-il.js":7207,"./en-in":4175,"./en-in.js":4175,"./en-nz":6319,"./en-nz.js":6319,"./en-sg":1662,"./en-sg.js":1662,"./eo":2915,"./eo.js":2915,"./es":5655,"./es-do":5251,"./es-do.js":5251,"./es-mx":6112,"./es-mx.js":6112,"./es-us":1146,"./es-us.js":1146,"./es.js":5655,"./et":5603,"./et.js":5603,"./eu":7763,"./eu.js":7763,"./fa":6959,"./fa.js":6959,"./fi":1897,"./fi.js":1897,"./fil":2549,"./fil.js":2549,"./fo":4694,"./fo.js":4694,"./fr":4470,"./fr-ca":3049,"./fr-ca.js":3049,"./fr-ch":2330,"./fr-ch.js":2330,"./fr.js":4470,"./fy":5044,"./fy.js":5044,"./ga":9295,"./ga.js":9295,"./gd":2101,"./gd.js":2101,"./gl":8794,"./gl.js":8794,"./gom-deva":7884,"./gom-deva.js":7884,"./gom-latn":3168,"./gom-latn.js":3168,"./gu":5349,"./gu.js":5349,"./he":4206,"./he.js":4206,"./hi":94,"./hi.js":94,"./hr":316,"./hr.js":316,"./hu":2138,"./hu.js":2138,"./hy-am":1423,"./hy-am.js":1423,"./id":9218,"./id.js":9218,"./is":135,"./is.js":135,"./it":626,"./it-ch":150,"./it-ch.js":150,"./it.js":626,"./ja":9183,"./ja.js":9183,"./jv":4286,"./jv.js":4286,"./ka":2105,"./ka.js":2105,"./kk":7772,"./kk.js":7772,"./km":8758,"./km.js":8758,"./kn":9282,"./kn.js":9282,"./ko":3730,"./ko.js":3730,"./ku":1408,"./ku.js":1408,"./ky":3291,"./ky.js":3291,"./lb":6841,"./lb.js":6841,"./lo":5466,"./lo.js":5466,"./lt":7010,"./lt.js":7010,"./lv":7595,"./lv.js":7595,"./me":9861,"./me.js":9861,"./mi":5493,"./mi.js":5493,"./mk":5966,"./mk.js":5966,"./ml":7341,"./ml.js":7341,"./mn":5115,"./mn.js":5115,"./mr":370,"./mr.js":370,"./ms":9847,"./ms-my":1237,"./ms-my.js":1237,"./ms.js":9847,"./mt":2126,"./mt.js":2126,"./my":6165,"./my.js":6165,"./nb":4924,"./nb.js":4924,"./ne":6744,"./ne.js":6744,"./nl":3901,"./nl-be":9814,"./nl-be.js":9814,"./nl.js":3901,"./nn":3877,"./nn.js":3877,"./oc-lnc":2135,"./oc-lnc.js":2135,"./pa-in":5858,"./pa-in.js":5858,"./pl":4495,"./pl.js":4495,"./pt":9520,"./pt-br":7971,"./pt-br.js":7971,"./pt.js":9520,"./ro":6459,"./ro.js":6459,"./ru":1793,"./ru.js":1793,"./sd":950,"./sd.js":950,"./se":490,"./se.js":490,"./si":124,"./si.js":124,"./sk":4249,"./sk.js":4249,"./sl":4985,"./sl.js":4985,"./sq":1104,"./sq.js":1104,"./sr":9131,"./sr-cyrl":9915,"./sr-cyrl.js":9915,"./sr.js":9131,"./ss":5893,"./ss.js":5893,"./sv":8760,"./sv.js":8760,"./sw":1172,"./sw.js":1172,"./ta":7333,"./ta.js":7333,"./te":3110,"./te.js":3110,"./tet":2095,"./tet.js":2095,"./tg":7321,"./tg.js":7321,"./th":9041,"./th.js":9041,"./tk":9005,"./tk.js":9005,"./tl-ph":5768,"./tl-ph.js":5768,"./tlh":9444,"./tlh.js":9444,"./tr":2397,"./tr.js":2397,"./tzl":8254,"./tzl.js":8254,"./tzm":1106,"./tzm-latn":699,"./tzm-latn.js":699,"./tzm.js":1106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":7691,"./uk.js":7691,"./ur":3795,"./ur.js":3795,"./uz":6791,"./uz-latn":588,"./uz-latn.js":588,"./uz.js":6791,"./vi":5666,"./vi.js":5666,"./x-pseudo":4378,"./x-pseudo.js":4378,"./yo":5805,"./yo.js":5805,"./zh-cn":3839,"./zh-cn.js":3839,"./zh-hk":5726,"./zh-hk.js":5726,"./zh-mo":9807,"./zh-mo.js":9807,"./zh-tw":4152,"./zh-tw.js":4152};function s(e){var t=i(e);return n(t)}function i(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}s.keys=function(){return Object.keys(a)},s.resolve=i,e.exports=s,s.id=6700}}]);