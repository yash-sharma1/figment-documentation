"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[3662],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(t),m=i,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||r;return t?a.createElement(f,l(l({ref:n},p),{},{components:t})):a.createElement(f,l({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=t[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},69280:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=t(87462),i=(t(67294),t(3905));const r={title:"Create a New Claim Rewards Flow",slug:"/guides/staking-api/cosmos/claim-rewards/create-new-flow"},l=void 0,o={unversionedId:"guides/staking-api/Cosmos/claim-rewards/create-new-flow",id:"guides/staking-api/Cosmos/claim-rewards/create-new-flow",title:"Create a New Claim Rewards Flow",description:"To initiate the rewards claim process, create a new flow with a POST request to /api/v1/flows.",source:"@site/docs/guides/staking-api/Cosmos/claim-rewards/1_create-new-flow.mdx",sourceDirName:"guides/staking-api/Cosmos/claim-rewards",slug:"/guides/staking-api/cosmos/claim-rewards/create-new-flow",permalink:"/guides/staking-api/cosmos/claim-rewards/create-new-flow",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Create a New Claim Rewards Flow",slug:"/guides/staking-api/cosmos/claim-rewards/create-new-flow"},sidebar:"docsSidebar",previous:{title:"Claim Rewards",permalink:"/guides/staking-api/cosmos/claim-rewards"},next:{title:"Submit Claim Rewards Data",permalink:"/guides/staking-api/cosmos/claim-rewards/submit-claim-rewards-data"}},s={},d=[{value:"Parameters",id:"parameters",level:3},{value:"Sample cURL Request",id:"sample-curl-request",level:4},{value:"Response",id:"response",level:3},{value:"Sample Response",id:"sample-response",level:4}],p={toc:d};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To initiate the rewards claim process, create a new flow with a ",(0,i.kt)("inlineCode",{parentName:"p"},"POST")," request to ",(0,i.kt)("inlineCode",{parentName:"p"},"/api/v1/flows"),"."),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"flow")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"network_code")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," Network this flow operates on (ex. ",(0,i.kt)("inlineCode",{parentName:"li"},"cosmos"),") (required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"chain_code")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," Chain this flow operates on (ex. ",(0,i.kt)("inlineCode",{parentName:"li"},"testnet"),") (required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"operation")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," The operation to perform (ex. ",(0,i.kt)("inlineCode",{parentName:"li"},"claim_rewards"),") (required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," API version to use (ex. ",(0,i.kt)("inlineCode",{parentName:"li"},"v1"),") (optional).")))),(0,i.kt)("h4",{id:"sample-curl-request"},"Sample cURL Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{5-10}","{5-10}":!0},'curl -X POST \'https://cosmos-slate.datahub.figment.io/api/v1/flows\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: <api_key>\' \\\n-d \'{\n  "flow": {\n    "network_code": "cosmos",\n    "chain_code": "testnet",\n    "operation": "claim_rewards",\n    "version": "v1"\n  }\n}\'\n')),(0,i.kt)("h3",{id:"response"},"Response"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," ID of the newly created flow."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"state")," ","\u2014"," ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," The current state of the flow.")),(0,i.kt)("p",null,"The response indicates one possible action:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"create_withdraw_tx")," ","\u2014"," Use this action to generate a withdraw transaction to claim your staking rewards.")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"create_withdraw_tx")," action indicates six possible fields for data collection:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"delegator_address")," ","\u2014"," The address from which ATOM was delegated."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validator_addresses")," ","\u2014"," Validator addresses from which staking rewards to be withdrawn."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"memo")," ","\u2014"," an optional message to record on-chain with your transaction."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gas_limit")," ","\u2014"," the total amount of gas you're willing to let this transaction consume.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If you do not include this, we'll use a Cosmos library to select a good default for you."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gas_price")," ","\u2014"," how many ATOM you're willing to pay per unit of gas consumed by this transaction.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If you do not include this, we'll use a Cosmos library to select a good default for you."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pubkey")," ","\u2014"," Pubkey value will be retrieved from the chain but if you're using a fresh account (that does not have any outgoing activity) then this information is not available and it requires the user to pass it.")),(0,i.kt)("h4",{id:"sample-response"},"Sample Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{3}","{3}":!0},'{\n  "id": "836cc1d2-2f1b-484d-b6ec-903c04e5013d",\n  "state": "initialized",\n  "actions": [\n    {\n      "name": "create_withdraw_tx",\n      "inputs": [\n        {\n          "name": "delegator_address",\n          "display": "Delegator Address",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "validator_addresses",\n          "display": "Validator Addresses",\n          "description": "",\n          "type": "array_of_strings",\n          "validations": [\n            {\n              "type": "array",\n              "options": {\n                "allow_empty": true,\n                "allow_duplicates": false\n              }\n            }\n          ],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "memo",\n          "display": "Memo",\n          "description": "",\n          "type": "string",\n          "validations": [],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "gas_price",\n          "display": "Gas Price",\n          "description": "",\n          "type": "decimal",\n          "validations": [],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "gas_limit",\n          "display": "Gas Limit",\n          "description": "",\n          "type": "decimal",\n          "validations": [],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "account_number",\n          "display": "Account Number",\n          "description": "",\n          "type": "integer",\n          "validations": [],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "pubkey",\n          "display": "Pubkey",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ],\n          "array": false,\n          "default_value": null\n        }\n      ]\n    }\n  ],\n  "data": {\n    "delegator_address": null,\n    "validator_addresses": null,\n    "memo": null,\n    "gas_price": null,\n    "gas_limit": null,\n    "pubkey": null,\n    "withdraw_transaction": null\n  },\n  "network_code": "cosmos",\n  "chain_code": "testnet",\n  "created_at": "2022-12-15T10:28:37.690Z",\n  "updated_at": "2022-12-15T10:28:37.690Z"\n}\n')))}u.isMDXComponent=!0}}]);