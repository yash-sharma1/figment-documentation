"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[873],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),k=c(n),d=r,m=k["".concat(s,".").concat(d)]||k[d]||p[d]||i;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},25:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={title:"Create New Merge Stake Account Flow",slug:"/guides/staking-api/solana/merge-stake-account/create-new-flow"},o=void 0,l={unversionedId:"guides/staking-api/Solana/merge-stake/create-new-flow",id:"guides/staking-api/Solana/merge-stake/create-new-flow",title:"Create New Merge Stake Account Flow",description:"To initiate the merge stake account process with the Staking API, create a new flow with a POST request to /api/v1/flows.",source:"@site/docs/guides/staking-api/Solana/merge-stake/1_create-new-flow.mdx",sourceDirName:"guides/staking-api/Solana/merge-stake",slug:"/guides/staking-api/solana/merge-stake-account/create-new-flow",permalink:"/guides/staking-api/solana/merge-stake-account/create-new-flow",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Create New Merge Stake Account Flow",slug:"/guides/staking-api/solana/merge-stake-account/create-new-flow"},sidebar:"docsSidebar",previous:{title:"Merge Stake Acccount",permalink:"/guides/staking-api/solana/merge-stake-account"},next:{title:"Submit Merge Stake Account Data",permalink:"/guides/staking-api/solana/merge-stake-account/submit-merge-stake-account-data"}},s={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Sample cURL Request",id:"sample-curl-request",level:4},{value:"Response",id:"response",level:3},{value:"Sample Response",id:"sample-response",level:4}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To initiate the merge stake account process with the Staking API, create a new flow with a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/v1/flows"),"."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"flow")," ","\u2014"," ",(0,r.kt)("inlineCode",{parentName:"li"},"object"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"network_code")," ","\u2014"," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," Network on which this flow operates (ex. ",(0,r.kt)("inlineCode",{parentName:"li"},"solana"),") (required)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"chain_code")," ","\u2014"," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," Chain on which this flow operates (ex. ",(0,r.kt)("inlineCode",{parentName:"li"},"testnet"),") (required)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"operation")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," The operation to perform (ex. ",(0,r.kt)("inlineCode",{parentName:"li"},"merge_stake_account"),") (required)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"version")," ","\u2014"," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," API version to use (ex. ",(0,r.kt)("inlineCode",{parentName:"li"},"v1"),") (optional).")))),(0,r.kt)("h4",{id:"sample-curl-request"},"Sample cURL Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{5-10}","{5-10}":!0},'curl -X POST \'https://solana-slate.datahub.figment.io/api/v1/flows\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: <api_key>\' \\\n-d \'{\n  "flow": {\n    "network_code": "solana",\n    "chain_code": "devnet",\n    "operation": "merge_stake_account",\n    "version": "v1"\n  }\n}\'\n')),(0,r.kt)("h3",{id:"response"},"Response"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ","\u2014"," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," ID of the newly created flow."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"state")," ","\u2014"," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," The current state of the flow.")),(0,r.kt)("p",null,"The response indicates one possible ",(0,r.kt)("inlineCode",{parentName:"p"},"action"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"create_merge_tx")," ","\u2014"," Use this Action to create a merge stake account transaction.")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"create_merge_tx")," action indicates three fields for data collection:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"destination_stake_account_pubkey")," - Public key of the stake account in which you want to merge the another stake account."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source_stake_account_pubkey")," - Public key of the stake account which you want to merge with the another stake account."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"funding_account_pubkey")," - The pubkey of the account which will pay the transaction fee.")),(0,r.kt)("h4",{id:"sample-response"},"Sample Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{2-3,6}","{2-3,6}":!0},'{\n  "id": "09162adc-e9c0-40ee-bc3d-59c2df7f50a7",\n  "state": "initialized",\n  "actions": [\n    {\n      "name": "create_merge_tx",\n      "inputs": [\n        {\n          "name": "destination_stake_account_pubkey",\n          "display": "Destination Stake Account Pubkey",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "source_stake_account_pubkey",\n          "display": "Source Stake Account Pubkey",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ],\n          "array": false,\n          "default_value": null\n        },\n        {\n          "name": "funding_account_pubkey",\n          "display": "Funding Account Pubkey",\n          "description": "",\n          "type": "string",\n          "validations": [\n            {\n              "type": "presence",\n              "options": {}\n            }\n          ],\n          "array": false,\n          "default_value": null\n        }\n      ]\n    }\n  ],\n  "data": {\n    "destination_stake_account_pubkey": null,\n    "source_stake_account_pubkey": null,\n    "stake_authority_pubkey": null,\n    "funding_account_pubkey": null,\n    "merge_transaction": null\n  },\n  "network_code": "solana",\n  "chain_code": "devnet",\n  "created_at": "2022-12-05T12:29:17.030Z",\n  "updated_at": "2022-12-05T12:29:17.030Z"\n}\n')))}p.isMDXComponent=!0}}]);