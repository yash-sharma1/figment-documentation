"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[5418],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>m});var t=n(67294);function f(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){f(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,f=function(e,a){if(null==e)return{};var n,t,f={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(f[n]=e[n]);return f}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(f[n]=e[n])}return f}var s=t.createContext({}),l=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=l(e.components);return t.createElement(s.Provider,{value:a},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,f=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(n),u=f,m=d["".concat(s,".").concat(u)]||d[u]||p[u]||r;return n?t.createElement(m,i(i({ref:a},c),{},{components:n})):t.createElement(m,i({ref:a},c))}));function m(e,a){var n=arguments,f=a&&a.mdxType;if("string"==typeof e||f){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[d]="string"==typeof e?e:f,i[1]=o;for(var l=2;l<r;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80200:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var t=n(87462),f=(n(67294),n(3905));const r={title:"Submit Signed Claim Rewards Transaction for Broadcast",slug:"/guides/staking-api/polygon/claim/submit-signed-claim-rewards-transaction"},i=void 0,o={unversionedId:"guides/staking-api/Polygon/claim/submit-signed-transaction",id:"guides/staking-api/Polygon/claim/submit-signed-transaction",title:"Submit Signed Claim Rewards Transaction for Broadcast",description:"After signing the transaction, send a PUT request to /api/v1/flows/[:flow_id]/next with the signed payload.",source:"@site/docs/guides/staking-api/Polygon/claim/4_submit-signed-transaction.mdx",sourceDirName:"guides/staking-api/Polygon/claim",slug:"/guides/staking-api/polygon/claim/submit-signed-claim-rewards-transaction",permalink:"/guides/staking-api/polygon/claim/submit-signed-claim-rewards-transaction",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Submit Signed Claim Rewards Transaction for Broadcast",slug:"/guides/staking-api/polygon/claim/submit-signed-claim-rewards-transaction"},sidebar:"docsSidebar",previous:{title:"Sign the Claim Rewards Transaction",permalink:"/guides/staking-api/polygon/claim/sign-claim-rewards-transaction"},next:{title:"Get Flow Status",permalink:"/guides/staking-api/polygon/get-flow-status"}},s={},l=[{value:"Parameters",id:"parameters",level:3},{value:"Sample cURL Request",id:"sample-curl-request",level:4},{value:"Response",id:"response",level:3},{value:"Sample Response",id:"sample-response",level:4}],c={toc:l};function d(e){let{components:a,...n}=e;return(0,f.kt)("wrapper",(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,f.kt)("p",null,"After signing the transaction, send a ",(0,f.kt)("inlineCode",{parentName:"p"},"PUT")," request to ",(0,f.kt)("inlineCode",{parentName:"p"},"/api/v1/flows/[:flow_id]/next")," with the signed payload.\nThe Staking API will broadcast the transaction to the Polygon network."),(0,f.kt)("h3",{id:"parameters"},"Parameters"),(0,f.kt)("ul",null,(0,f.kt)("li",{parentName:"ul"},(0,f.kt)("inlineCode",{parentName:"li"},"name")," ","\u2014"," ",(0,f.kt)("inlineCode",{parentName:"li"},"string")," Name of the action to execute (required)."),(0,f.kt)("li",{parentName:"ul"},(0,f.kt)("inlineCode",{parentName:"li"},"inputs")," ","\u2014"," ",(0,f.kt)("inlineCode",{parentName:"li"},"object"),(0,f.kt)("ul",{parentName:"li"},(0,f.kt)("li",{parentName:"ul"},(0,f.kt)("inlineCode",{parentName:"li"},"transaction_payload")," ","\u2014"," Signed transaction payload from the previous step's response.")))),(0,f.kt)("h4",{id:"sample-curl-request"},"Sample cURL Request"),(0,f.kt)("pre",null,(0,f.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT \'https://polygon-slate.datahub.figment.io/api/v1/flows/e6dc662e-f77c-4235-9b28-7141d90c8ab8/next\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: <api_key>\' \\\n-d \'{\n  "name": "sign_claim_rewards_tx",\n    "inputs": {\n    "transaction_payload": "0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7"\n  }\n}\'\n')),(0,f.kt)("h3",{id:"response"},"Response"),(0,f.kt)("p",null,"With the signed transaction provided, the Staking API will broadcast it to the network.\nAs the transaction progresses towards confirmation, the returned ",(0,f.kt)("inlineCode",{parentName:"p"},"state")," will be either:"),(0,f.kt)("ul",null,(0,f.kt)("li",{parentName:"ul"},(0,f.kt)("inlineCode",{parentName:"li"},"claim_rewards_tx_broadcasting")," ","\u2014"," the transaction has been broadcast but not confirmed."),(0,f.kt)("li",{parentName:"ul"},(0,f.kt)("inlineCode",{parentName:"li"},"done")," ","\u2014"," the transaction has been confirmed and the rewards are claimed.")),(0,f.kt)("h4",{id:"sample-response"},"Sample Response"),(0,f.kt)("pre",null,(0,f.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "e6dc662e-f77c-4235-9b28-7141d90c8ab8",\n  "state": "claim_rewards_tx_broadcasting",\n  "actions": [\n    {\n      "name": "wait",\n      "estimated_state_change_at": "2022-10-07T17:16:44.809Z",\n      "inputs": []\n    }\n  ],\n  "data": {\n    "delegator_address": "0x542138451d0953Aa082dE659d2A1ca1e5EF452Bf",\n    "validator_address": "0x15ED57Ca28cbebb58d9c6C62F570046BC089bC66",\n    "amount": "1.0",\n    "minimum_shares_to_mint": 0,\n    "max_slippage_percentage": null,\n    "exchange_rate": null,\n    "exchange_rate_precision": null,\n    "allowance_transaction": {\n      "raw": "0x02f86c05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0",\n      "signing_payload": null,\n      "signed": "0x02f8af05808459682f00845994f6fa82b58394499d11e0b6eac7c0593d8fb292dcbbf815fb29ae80b844095ea7b300000000000000000000000000200ea4ee292e253e6ca07dba5edc07c8aa37a3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001a08019145182b704f15aca2a95242e25abfe9382dd74d0c15e88087978beb476b1a05b4c37b70e316c91e6a19738208e7eae6b79dd2c8ef62aa229f76548490c26b7",\n      "hash": "0xb71295568a41375014cb4de57ffbdb489f9d81283b3d6647029424d72c176f6d",\n      "status": null,\n      "error": null,\n      "signatures": [],\n      "gas_limit": null,\n      "gas_price": null\n    },\n    "delegate_transaction": null\n  },\n  "network_code": "polygon",\n  "chain_code": "testnet",\n  "created_at": "2022-10-06T22:57:14.491Z",\n  "updated_at": "2022-10-07T17:15:43.981Z"\n}\n')))}d.isMDXComponent=!0}}]);