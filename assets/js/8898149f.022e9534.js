"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[7543],{2750:(e,a,t)=>{t.d(a,{ZP:()=>c});var n=t(7462),o=(t(7294),t(3905)),s=t(5488),d=t(5162),r=t(7643);const i={toc:[{value:"Authentication",id:"authentication",level:3}]};function c(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"authentication"},"Authentication"),(0,o.kt)("div",null,"API calls require authentication with API key via ",(0,o.kt)("code",null,"Authorization")," ","request header or ",(0,o.kt)("code",null,"URL")," property. Calls are made to the"," ",(0,o.kt)("strong",null,t.network," ",t.service)," ","endpoint, hosted at ",(0,o.kt)("code",null,t.url),(0,o.kt)("br",null),(0,o.kt)("br",null)),"Here's some boilerplate to get you started."," ",(0,o.kt)(s.Z,{mdxType:"Tabs"},(0,o.kt)(d.Z,{value:"js-header",label:"Fetch with Header",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}${t.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Authorization" : "<api_key>",\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(d.Z,{value:"js-parameter",label:"Fetch with Parameter",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"js",mdxType:"CodeBlock"},`fetch("${t.url}/apikey/{{apikey}}${t.route}", {\n    method: 'POST', // can also be 'GET', 'PUT' or any appropriate method\n    headers: {\n        "Content-Type": "application/json" // if method is 'POST'\n    },\n    body: JSON.stringify({\n      // JSON Payload\n    })\n})`)),(0,o.kt)(d.Z,{value:"curl-header",label:"CURL with Header",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}${t.route}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <api_key>' \\\n--data '{\n  // JSON Payload\n}'`)),(0,o.kt)(d.Z,{value:"curl-parameter",label:"CURL with Parameter",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"bash",mdxType:"CodeBlock"},`curl -X POST '${t.url}/apikey/{{apikey}}${t.route}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  // JSON Payload\n}'`))))}c.isMDXComponent=!0},3976:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(7294),o=t(6550);function s(e){let{network:a,networks:t,methods:s,service:d}=e;const r=(0,o.TH)(),i=(0,o.k6)();return n.createElement("div",null,n.createElement("label",null,"Change Network: "),n.createElement("select",{className:"custom-select",defaultValue:a,onChange:e=>{i.push(r.pathname.replace(/\/[^\/]+$/,`/${e.target.value}`))}},t.map((e=>n.createElement("option",{key:`${e.value}--n-option`,value:e.value},e.label)))),n.createElement("label",null," Jump to: "),n.createElement("select",{className:"custom-select",defaultValue:r.hash.replace("#","")||"",onChange:e=>{i.push(`#${e.target.value}`)}},s.map((e=>n.createElement("option",{key:`${e.name}--m-hash`,value:e.name.toLowerCase()},e.name)))))}},7297:(e,a,t)=>{t.d(a,{Z:()=>o});var n=t(7294);function o(e){let{network:a,service:t}=e;return(0,n.useEffect)((()=>{const e=document.querySelector(".breadcrumbs__item.breadcrumbs__item--active");if(!e)return;e.querySelector("span.breadcrumbs__link").innerHTML=a;let n=e.previousElementSibling;n=n.cloneNode(!0),n.querySelector(".breadcrumbs__link span").innerHTML=t.label,n.querySelector(".breadcrumbs__link").href=t.link,e.insertAdjacentElement("beforebegin",n)}),[a]),n.createElement(n.Fragment,null)}},3213:(e,a,t)=>{t.d(a,{S:()=>j});var n=t(7462),o=t(7294),s=t(8538),d=t(7748),r=t(460),i=t.n(r),c=t(3746),l=t(6412);const f={Header:"Header_JfB9",blinker:"blinker_fwXa",Actions:"Actions_tjtQ",Container:"Container_SXTI",Editor:"Editor_gTle",Line:"Line_F8ZC",Code:"Code_xj0a"};function u(e){let{children:a="",header:t,actions:s,disabled:d=!1,status:r,onValueChange:u}=e;const b=(0,l.p)(),p=(0,o.useRef)(null);(0,o.useEffect)((()=>{var e;const a=null==(e=p.current)?void 0:e.querySelector("textarea"),t=e=>{const a=e.target;a.style.width=a.scrollWidth+"px"};return a.addEventListener("input",t),()=>a.removeEventListener("input",t)}),[]);return o.createElement("div",{ref:p},o.createElement(m,{actions:s,status:r},t),o.createElement("div",{className:f.Container},o.createElement(i(),{value:a,onValueChange:u,highlight:function(e){return void 0===e&&(e=""),o.createElement(c.ZP,(0,n.Z)({},c.lG,{theme:b,code:e,language:"json"}),(e=>{let{className:a,style:t,tokens:s,getLineProps:d,getTokenProps:r}=e;return o.createElement("div",{className:f.Code},s.map(((e,a)=>o.createElement("div",(0,n.Z)({key:a},d({line:e,key:a}),{className:f.Line}),o.createElement("span",{className:f.LineContent},e.map(((e,a)=>o.createElement("span",(0,n.Z)({key:a},r({token:e,key:a}))))))))))}))},disabled:d,ignoreTabKey:!0,padding:10,style:{...b.plain,overflow:"auto"},className:f.Editor})))}function m(e){let{children:a,actions:t=[],status:n}=e;return o.createElement("div",{className:f.Header,"data-status":n},o.createElement("span",null,a),o.createElement("span",{className:f.Actions},t.map(((e,a)=>{let{title:t,onClick:n,Component:s=t}=e;return o.createElement("button",{className:f.HeaderButton,key:`${a}:${t}`,title:t,onClick:n},s)}))))}var b=t(195);const p="overlayHeaderButton_IGf5";const h=function(e,a){const t=(0,o.useRef)(!1),n={error:void 0,data:void 0,loading:!1},[s,d]=(0,o.useReducer)(((e,a)=>{switch(a.type){case"loading":return{...n,loading:!0};case"fetched":return{...n,data:a.payload,loading:!1};case"error":return{...n,error:a.payload,loading:!1};default:return e}}),n);return{...s,fetchData:async function(n,o){void 0===o&&(o={}),d({type:"loading"});try{const s=await fetch(e+(n?`/${n}`:""),{...a,...o});if(!s.ok){let e,a,t;try{t=JSON.parse(await s.text()),e=await s.json(),a=JSON.stringify(e,null,2)}catch{}throw new Error(JSON.stringify(a,null,2)||JSON.stringify(t,null,2)||s.statusText)}const r=await s.json();if(t.current)return;return d({type:"fetched",payload:r}),r}catch(s){if(t.current)return;return d({type:"error",payload:s.message}),null}}}};var g,y=t(7643),v=t(4672);function _(){return _=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},_.apply(this,arguments)}const w=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",_({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,g||(g=o.createElement("path",{d:"m10 16.5 6-4.5-6-4.5v9ZM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2Zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8Z",fill:"#0C3F5C"})))};var k;function T(){return T=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},T.apply(this,arguments)}const q=e=>{let{title:a,titleId:t,...n}=e;return o.createElement("svg",T({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},n),a?o.createElement("title",{id:t},a):null,k||(k=o.createElement("path",{d:"M17.65 6.35A7.958 7.958 0 0 0 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0 1 12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35Z",fill:"#0C3F5C"})))};function S(e){let{req:a,res:t,interactive:n,endpoint:s}=e;const[d,r]=(0,o.useState)(C(a.body)),[i,c]=(0,o.useState)(a.query),[l,f]=(0,o.useState)(x(t.body)),m="string"==typeof a.body&&0==a.body.indexOf("query"),{data:g,error:_,loading:k,fetchData:T}=h(s,{method:a.method,headers:{...a.headers,"Content-Type":m?"application/graphql":"application/json"},body:C(a.body)}),[S,E]=(0,o.useState)(null);(0,o.useEffect)((()=>{k?E("LOADING"):_||null!=g&&g.error?E("ERROR"):g&&E("SUCCESS")}),[g,_,k]);const A=[n?{title:"Run request",onClick:async()=>{const e=await T(i,{body:d});e&&f(x(e))},Component:o.createElement(o.Fragment,null,o.createElement(w,null)," Run")}:null,{title:"Copy",onClick:()=>(0,b.Z)(d),Component:o.createElement(v.Z,{code:"",className:p})},n?{title:"Reset",onClick:()=>{E(null),c(a.query),r(C(a.body)),f(x(t.body))},Component:o.createElement(q,null)}:null].filter((e=>!!e));return o.createElement(o.Fragment,null,o.createElement(u,{header:"GET"===a.method?"Request Query "+(n?"(try it)":""):"Request Body "+(n?"(try it)":""),actions:A,disabled:!n,onValueChange:e=>{n&&("GET"===a.method?c(e):"POST"===a.method&&r(e))}},"GET"===a.method?i:d),o.createElement(y.Z,{title:S?"Response":"Example Response",language:"json"},_?`${_}`:l))}function x(e){return JSON.stringify(e,null,2)}function C(e){return"string"==typeof e?e:JSON.stringify(e,null,2)}const E="heading_REER";var A=t(9960),P=t(3905);const I={toc:[]};function O(e){let{components:a,...t}=e;return(0,P.kt)("wrapper",(0,n.Z)({},I,t,{components:a,mdxType:"MDXLayout"}),(0,P.kt)("details",{open:t.accordionOpen?"open":void 0},(0,P.kt)("summary",null,(0,P.kt)("span",{className:"open"},"Specification"),(0,P.kt)("span",{className:"closed"},"View Specification")),(0,P.kt)(s.D,{mdxType:"ReactMarkdown"},t.details)))}function D(e){let{name:a,content:t="",interactive:n,request:d,accordionOpen:r=!1,response:i,endpoint:c}=e;["Rewards (by epoch)","Rewards (daily)"].includes(a)&&(d.body={...d.body,start_time:new Date(Date.now()-("Rewards (by epoch)"===a?1728e5:864e5)).toISOString().split("T")[0],end_time:(new Date).toISOString().split("T")[0]});const[l,...f]=t.trim().split(/\n+/),u=f.join("\n");return o.createElement(o.Fragment,null,o.createElement("h2",{id:a.toLowerCase(),className:E,"data-method":d.method},o.createElement(A.Z,{to:`#${a.toLowerCase()}`},a)),o.createElement(s.D,null,l),o.createElement(S,{req:d,res:i,interactive:n,endpoint:c}),o.createElement(O,{details:u,accordionOpen:r}),o.createElement("hr",null))}function j(e){let{network:a,methods:t,service:s,proxy:r}=e;return o.createElement(o.Fragment,null,o.createElement("h3",null,"Available Methods"),t.map(((e,t)=>o.createElement(D,(0,n.Z)({key:a+t},e,{endpoint:`${r}/${s}/${a}`,accordionOpen:"node-api"!==s})))),o.createElement(d.Z,null))}O.isMDXComponent=!0},3417:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>f,contentTitle:()=>c,default:()=>b,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=t(7462),o=(t(7294),t(3905)),s=t(3213),d=t(3976),r=(t(7297),t(2750));const i={title:"Cosmos",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Cosmos",image:"img/logo.svg",keywords:["Staking API","Cosmos"]},c="Staking API - Cosmos",l={unversionedId:"api-reference/staking-api/cosmos",id:"api-reference/staking-api/cosmos",title:"Cosmos",description:"Staking API - Cosmos",source:"@site/docs/api-reference/staking-api/cosmos.mdx",sourceDirName:"api-reference/staking-api",slug:"/api-reference/staking-api/cosmos",permalink:"/api-reference/staking-api/cosmos",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Cosmos",sidebar_position:0,pagination_prev:null,pagination_next:null,collapsed:!0,collapsible:!0,description:"Staking API - Cosmos",image:"img/logo.svg",keywords:["Staking API","Cosmos"]},sidebar:"docsSidebar"},f={},u=[],m={toc:u};function b(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"staking-api---cosmos"},"Staking API - Cosmos"),(0,o.kt)(d.Z,{service:"staking-api",methods:[{name:"Create a New Staking Flow"},{name:"Submit Delegation Data"},{name:"Submit Signed Delegate Transaction for Broadcast"},{name:"Get Flow Status"},{name:"Create a New Transfer Flow"},{name:"Submit Transfer Data"},{name:"Submit Signed Transfer Transaction for Broadcast"},{name:"Get Flow Status"}],networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"cosmos",mdxType:"ApiReferenceNav"}),(0,o.kt)(r.ZP,{url:"https://cosmos-slate.datahub.figment.io",network:"Cosmos",service:"Staking API",route:"/api/v1/flows",mdxType:"MakingCalls"}),(0,o.kt)(s.S,{methods:[{name:"Create a New Staking Flow",content:"To initiate the staking process, create a new flow with a `POST` request to `/api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `cosmos`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `testnet`) (required).\n  - `operation` &mdash; `string` The operation to perform (ex. `staking`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `create_delegate_tx` &mdash; Use this action to generate a delegation transaction to stake your ATOM.\n   - `delegator_address` &mdash; The address from which ATOM will be delegated.\n   - `validator_address` &mdash; The validator address to which ATOM will be delegated.\n   - `amount` &mdash; The amount of ATOM to be delegated.\n   - `memo` &mdash; an optional message to record on-chain with your transaction.\n   - `gas_limit` &mdash; the total amount of gas you're willing to let this transaction consume.\n     - If you do not include this, we'll use a Cosmos library to select a good default for you.\n   - `gas_price` &mdash; how many ATOM you're willing to pay per unit of gas consumed by this transaction.\n     - If you do not include this, we'll use a Cosmos library to select a good default for you. \n   - `pubkey` &mdash; Pubkey value will be retrieved from the chain but if you're using a fresh account (that does not have any outgoing activity) then this information is not available and it requires the user to pass it.\n- `data` &mdash; `object` Staking flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"cosmos",chain_code:"testnet",operation:"staking",version:"v1"}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create a New Staking Flow",body:{id:"cd7fe433-91a2-96eb-b16a-deb93a504cd2",state:"initialized",actions:[{name:"create_delegate_tx",inputs:[{name:"delegator_address",display:"Delegator Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"validator_address",display:"Validator Address",description:"",type:"string",validations:[{type:"presence",options:{}},{type:"format",options:{with:"(?-mix:\\Acosmosvaloper.*)",message:"should start with `cosmosvaloper`"}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"memo",display:"Memo",description:"",type:"string",validations:[]},{name:"gas_price",display:"Gas Price",description:"",type:"decimal",validations:[]},{name:"gas_limit",display:"Gas Limit",description:"",type:"decimal",validations:[]},{name:"account_number",display:"Account Number",description:"Value will be retrieved from the chain if available",type:"integer",validations:[{type:"presence",options:{}}]},{name:"sequence",display:"Sequence",description:"Value will be retrieved from the chain if available",type:"integer",validations:[{type:"presence",options:{}}]},{name:"pubkey",display:"Pubkey",description:"Value will be retrieved from the chain if available",type:"string",validations:[{type:"presence",options:{}}]}]}],data:{delegator_address:null,validator_address:null,amount:null,memo:null,gas_price:null,gas_limit:null,delegate_transaction:null,account_number:null,sequence:null,pubkey:null},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T10:25:57.852Z",updated_at:"2022-11-16T10:25:57.852Z"}}},{name:"Submit Delegation Data",content:"After collecting the required inputs, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `delegator_address` &mdash; `string` The address from which ATOM will be delegated (required).\n  - `validator_address` &mdash; `string` The validator address to which ATOM will be delegated (required).\n  - `amount` &mdash; `number` The amount of ATOM to be delegated (required).\n  - `memo` &mdash; `string` A message to record on-chain with your transfer (optional).\n  - `gas_limit` &mdash; `number` The total amount of gas you're willing to let this transaction consume (optional).\n  - `gas_price` &mdash; `number` How many ATOM you're willing to pay per unit of gas consumed by this transaction (optional).\n  - `pubkey` &mdash; `string` Required only if you're using a fresh account (that does not have any outgoing activity) else optional.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n  - `refresh_delegate_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., the nonce has increased).\n  - `sign_delegate_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Staking flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_delegate_tx",inputs:{delegator_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",validator_address:"cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3",amount:2}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Delegation Data",body:{id:"cd7fe433-91a2-96eb-b16a-deb93a504cd2",state:"delegate_tx_signature",actions:[{name:"refresh_delegate_tx",inputs:[]},{name:"sign_delegate_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[{type:"sign_payload",options:{}}],signers:["cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl"],transaction_payload:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465222c2276616c7565223a7b2264656c656761746f7241646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c2276616c696461746f7241646472657373223a22636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a366565746533222c22616d6f756e74223a7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2232303030303030227d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2233383937222c2264656e6f6d223a227561746f6d227d5d2c22676173223a22313535383634227d2c226d656d6f223a22227d"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl"],transaction_payload:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465222c2276616c7565223a7b2264656c656761746f7241646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c2276616c696461746f7241646472657373223a22636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a366565746533222c22616d6f756e74223a7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2232303030303030227d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2233383937222c2264656e6f6d223a227561746f6d227d5d2c22676173223a22313535383634227d2c226d656d6f223a22227d",signing_payload:"dbf7cf4ae014c1dc3a17ede2fb00d717e0fca156252542da5c0712713caceb19"}]}],data:{delegator_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",validator_address:"cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3",amount:"2.0",memo:null,gas_price:null,gas_limit:null,delegate_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465222c2276616c7565223a7b2264656c656761746f7241646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c2276616c696461746f7241646472657373223a22636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a366565746533222c22616d6f756e74223a7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2232303030303030227d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2233383937222c2264656e6f6d223a227561746f6d227d5d2c22676173223a22313535383634227d2c226d656d6f223a22227d",signing_payload:"dbf7cf4ae014c1dc3a17ede2fb00d717e0fca156252542da5c0712713caceb19",signed:null,hash:null,status:null,error:null,signatures:null},account_number:721346,sequence:2,pubkey:"0a2102db77d72ee215f1a61e5f4ffa098b9325cc1da6f5c3557974ad5f21a2ec9fe625"},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T10:25:57.852Z",updated_at:"2022-11-16T10:29:07.290Z"}}},{name:"Submit Signed Delegate Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n  - `delegate_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n  - `completed` &mdash; Transaction has been confirmed and the delegation is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Staking flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_delegate_tx",inputs:{transaction_payload:"0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c1234636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a3665657465331a100a057561746f6d12073230303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102db33d72ee215f1a61e5f4ffa098b9325cc1da6f5c3557974ad0f21a5ec9fe23512040a020801180212130a0d0a057561746f6d12043338393710d8c1091a40970af80c824579cc1fe7dbf33b2118bb72e92e4c61f80e6e3dbb3a943abfb49825baa026830536b1c7e826cf1da23fae829cb7ef91db0c8ea856bf7bd60488b9"}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosStakingFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Delegate Transaction for Broadcast",body:{id:"cd7fe433-91a2-96eb-b16a-deb93a504cd2",state:"delegate_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-11-16T10:35:09.384Z",inputs:[]}],data:{delegator_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",validator_address:"cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3",amount:"2.0",memo:null,gas_price:null,gas_limit:null,delegate_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465222c2276616c7565223a7b2264656c656761746f7241646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c2276616c696461746f7241646472657373223a22636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a366565746533222c22616d6f756e74223a7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2232303030303030227d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2233383937222c2264656e6f6d223a227561746f6d227d5d2c22676173223a22313535383634227d2c226d656d6f223a22227d",signing_payload:"dbf7cf4ae014c1dc3a17ede2fb00d717e0fca156252542da5c0712713caceb19",signed:"0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c1234636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a3665657465331a100a057561746f6d12073230303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102db33d72ee215f1a61e5f4ffa098b9325cc1da6f5c3557974ad0f21a5ec9fe23512040a020801180212130a0d0a057561746f6d12043338393710d8c1091a40970af80c824579cc1fe7dbf33b2118bb72e92e4c61f80e6e3dbb3a943abfb49825baa026830536b1c7e826cf1da23fae829cb7ef91db0c8ea856bf7bd60488b9",hash:"EAC7E2CF7FB035599F25CFDFDC53B146BF0E72BDAD24649197A07F467709B079",status:null,error:null,signatures:[]},account_number:721346,sequence:2,pubkey:"0a2102db77d72ee215f1a61e5f4ffa098b9325cc1da6f5c3557974ad5f21a2ec9fe625"},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T10:25:57.852Z",updated_at:"2022-11-16T10:34:09.068Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n  - `delegate_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n  - `completed` &mdash; Transaction has been confirmed and the delegation is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Staking flow & transaction data.",request:{method:"GET",header:[],url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosStakingFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"cd7fe433-91a2-96eb-b16a-deb93a504cd2",state:"completed",actions:[],data:{delegator_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",validator_address:"cosmosvaloper1tflk30mq5vgqjdly92kkhhq3raev2hnz6eete3",amount:"2.0",memo:null,gas_price:null,gas_limit:null,delegate_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465222c2276616c7565223a7b2264656c656761746f7241646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c2276616c696461746f7241646472657373223a22636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a366565746533222c22616d6f756e74223a7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2232303030303030227d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2233383937222c2264656e6f6d223a227561746f6d227d5d2c22676173223a22313535383634227d2c226d656d6f223a22227d",signing_payload:"dbf7cf4ae014c1dc3a17ede2fb00d717e0fca156252542da5c0712713caceb19",signed:"0aa1010a9e010a232f636f736d6f732e7374616b696e672e763162657461312e4d736744656c656761746512770a2d636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c1234636f736d6f7376616c6f7065723174666c6b33306d71357667716a646c7939326b6b686871337261657632686e7a3665657465331a100a057561746f6d12073230303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102db33d72ee215f1a61e5f4ffa098b9325cc1da6f5c3557974ad0f21a5ec9fe23512040a020801180212130a0d0a057561746f6d12043338393710d8c1091a40970af80c824579cc1fe7dbf33b2118bb72e92e4c61f80e6e3dbb3a943abfb49825baa026830536b1c7e826cf1da23fae829cb7ef91db0c8ea856bf7bd60488b9",hash:"EAC7E2CF7FB035599F25CFDFDC53B146BF0E72BDAD24649197A07F467709B079",status:"confirmed",error:null,signatures:[]},account_number:721346,sequence:2,pubkey:"0a2102db77d72ee215f1a61e5f4ffa098b9325cc1da6f5c3557974ad5f21a2ec9fe625"},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T10:25:57.852Z",updated_at:"2022-11-16T10:34:20.425Z"}}},{name:"Create a New Transfer Flow",content:"To initiate the transfer process with Staking API, create a new flow with `POST /api/v1/flows`.\n\n### Parameters\n\n- `flow` &mdash; `object`\n  - `network_code` &mdash; `string` Network this flow operates on (ex. `cosmos`) (required).\n  - `chain_code` &mdash; `string` Chain this flow operates on (ex. `testnet`) (required).\n  - `operation` &mdash; `string` The operation to perform (ex. `transfer`) (required).\n  - `version` &mdash; `string` API version to use (ex. `v1`) (optional).\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `create_transfer_tx` &mdash; Use this action to transfer ATOM.\n   - `from_account_address` (required) &mdash; The address from which ATOM will be transferred.\n   - `to_account_address` (required) &mdash; The address to which ATOM will be transferred.\n   - `amount` (required) &mdash; The amount of ATOM to be transferred.\n   - `memo` &mdash; an optional message to record on-chain with your transfer.\n   - `gas_limit` &mdash; The total amount of gas you're willing to let this transaction consume.\n     - If you do not include this, we'll use a Cosmos library to select a good default for you.\n   - `gas_price` &mdash; How many ATOM you're willing to pay per unit of gas consumed by this transaction.\n     - If you do not include this, we'll use a Cosmos library to select a good default for you.\n   - `pubkey` &mdash; Pubkey value will be retrieved from the chain but if you're using a fresh account (that does not have any outgoing activity) then this information is not available and it requires the user to pass it.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"POST",header:[],body:{flow:{network_code:"cosmos",chain_code:"testnet",operation:"transfer",version:"v1"}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows"},interactive:!1,response:{name:"Create a New Transfer Flow",body:{id:"87c3dd5f-bcbe-7934-92bd-1da47d5aca7e",state:"initialized",actions:[{name:"create_transfer_tx",inputs:[{name:"from_account_address",display:"From Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"to_account_address",display:"To Account Address",description:"",type:"string",validations:[{type:"presence",options:{}}]},{name:"amount",display:"Amount",description:"",type:"decimal",validations:[{type:"presence",options:{}},{type:"numericality",options:{greater_than:0}}]},{name:"memo",display:"Memo",description:"",type:"string",validations:[]},{name:"gas_price",display:"Gas Price",description:"",type:"decimal",validations:[]},{name:"gas_limit",display:"Gas Limit",description:"",type:"decimal",validations:[]},{name:"account_number",display:"Account Number",description:"Value will be retrieved from the chain if available",type:"integer",validations:[{type:"presence",options:{}}]},{name:"sequence",display:"Sequence",description:"Value will be retrieved from the chain if available",type:"integer",validations:[{type:"presence",options:{}}]},{name:"pubkey",display:"Pubkey",description:"Value will be retrieved from the chain if available",type:"string",validations:[{type:"presence",options:{}}]}]}],data:{from_account_address:null,to_account_address:null,amount:null,gas_price:null,gas_limit:null,memo:null,transfer_transaction:null,account_number:null,sequence:null,pubkey:null},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T07:08:33.793Z",updated_at:"2022-11-16T07:08:33.793Z"}}},{name:"Submit Transfer Data",content:"After creating the new transfer flow, we need to submit the transfer data.\n\nAfter collecting the required inputs as mentioned below, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` to proceed to the next step.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute - `create_transfer_tx`.\n- `inputs` &mdash; `object`\n  - `from_account_address` &mdash; `string` The address from which ATOM will be transferred (required).\n  - `to_account_address` &mdash; `string` The address to which ATOM will be transferred (required).\n  - `amount` &mdash; `number` The amount of ATOM to be transferred (required).\n  - `memo` &mdash; `string` A message to record on-chain with your transfer (optional).\n  - `gas_limit` &mdash; `number` The total amount of gas you're willing to let this transaction consume (optional).\n  - `gas_price` &mdash; `number` How many ATOM you're willing to pay per unit of gas consumed by this transaction (optional).\n  - `pubkey` &mdash; `string` Required only if you're using a fresh account (that does not have any outgoing activity) else optional.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n - `refresh_transfer_tx` &mdash; If you need to get a fresh version of the transaction payload (i.e., the nonce has increased).\n - `sign_transfer_tx` &mdash; Submit a signed transaction payload ready to be broadcast to the network.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"PUT",header:[],body:{name:"create_transfer_tx",inputs:{from_account_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",to_account_address:"cosmos1vxhllask0nynh20htyfkpkfthy7k3395kz9c4y",amount:1}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosTransferFlowId}}/next"},interactive:!1,response:{name:"Submit Transfer Data",body:{id:"87c3dd5f-bcbe-7934-92bd-1da47d5aca7e",state:"transfer_tx_signature",actions:[{name:"refresh_transfer_tx",inputs:[]},{name:"sign_transfer_tx",inputs:[{name:"transaction_payload",display:"Transaction Payload",description:"",type:"signed_transaction",validations:[{type:"sign_payload",options:{}}],signers:["cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl"],transaction_payload:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c22746f41646472657373223a22636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a38793363222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2231303030303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383333222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323839227d2c226d656d6f223a22227d"},{name:"signatures",display:"Signatures",description:"",type:"array_of_signatures",validations:[],signers:["cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl"],transaction_payload:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c22746f41646472657373223a22636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a38793363222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2231303030303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383333222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323839227d2c226d656d6f223a22227d",signing_payload:"2e69cd5b307af260091f58dee7fe63cbc66da049596ec2fb32234caa8e8e3a98"}]}],data:{from_account_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",to_account_address:"cosmos1vxhllask0nynh20htyfkpkfthy7k3395kz9c4y",amount:"1.0",gas_price:null,gas_limit:null,memo:null,transfer_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c22746f41646472657373223a22636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a38793363222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2231303030303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383333222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323839227d2c226d656d6f223a22227d",signing_payload:"2e69cd5b307af260091f58dee7fe63cbc66da049596ec2fb32234caa8e8e3a98",signed:null,hash:null,status:null,error:null,signatures:null},account_number:721346,sequence:1,pubkey:"0a2102db77d72ee215f1a61e5f4ffa098b9325cc1da6f5c3557974ad5f21a2ec9fe625"},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T07:08:33.793Z",updated_at:"2022-11-16T07:50:08.376Z"}}},{name:"Submit Signed Transfer Transaction for Broadcast",content:"Before broadcasting the transaction, you must [sign the `transaction_payload`](https://docs.figment.io/guides/staking-api/figment-signing-transactions) you received in the previous step. After signing the transaction, send a `PUT` request to `/api/v1/flows/[:flow_id]/next` and the Staking API will broadcast the transaction to the network.\n\n### Parameters\n\n- `name` &mdash; `string` Name of the action to execute (required).\n- `inputs` &mdash; `object`\n  - `transaction_payload` &mdash; Signed transaction payload from the previous step's response.\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `transfer_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n - `completed` &mdash; Transaction has been confirmed and the transfer is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"PUT",header:[],body:{name:"sign_transfer_tx",inputs:{transaction_payload:"0a93010a90010a1c2f636f736d6f732e62616e6b2e763162657461312e4d736753656e6412700a2d636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c122d636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a387933631a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2104db33d72ee215f1a61e5f4ffa098b7425cc1da6f5c3627994ad0f21a5ec6fe23512040a020801180112130a0d0a057561746f6d12043138333310c9bc041a40549391fc956e81101ba0b815b6a4297ac537ed633522a676f18c06666c1da2020e8a655c0bc8281022b4831f82c8a8b40a2a4a2736c54c3beae4fb2a0a44135e"}},url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosTransferFlowId}}/next"},interactive:!1,response:{name:"Submit Signed Transfer Transaction for Broadcast",body:{id:"87c3dd5f-bcbe-7934-92bd-1da47d5aca7e",state:"transfer_tx_broadcasting",actions:[{name:"wait",estimated_state_change_at:"2022-11-16T07:55:12.388Z",inputs:[]}],data:{from_account_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",to_account_address:"cosmos1vxhllask0nynh20htyfkpkfthy7k3395kz9c4y",amount:"1.0",gas_price:null,gas_limit:null,memo:null,transfer_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c22746f41646472657373223a22636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a38793363222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2231303030303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383333222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323839227d2c226d656d6f223a22227d",signing_payload:"2e69cd5b307af260091f58dee7fe63cbc66da049596ec2fb32234caa8e8e3a98",signed:"0a93010a90010a1c2f636f736d6f732e62616e6b2e763162657461312e4d736753656e6412700a2d636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c122d636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a387933631a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2104db33d72ee215f1a61e5f4ffa098b7425cc1da6f5c3627994ad0f21a5ec6fe23512040a020801180112130a0d0a057561746f6d12043138333310c9bc041a40549391fc956e81101ba0b815b6a4297ac537ed633522a676f18c06666c1da2020e8a655c0bc8281022b4831f82c8a8b40a2a4a2736c54c3beae4fb2a0a44135e",hash:"175BF846FBCBD0B59E0DCE77D793A4C38453688B39BDDEA81C14F221892FF071",status:null,error:null,signatures:[]},account_number:721346,sequence:1,pubkey:"0a2104db33d72ee215f1a61e5f4ffa098b7425cc1da6f5c3627994ad0f21a5ec6fe235"},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T07:08:33.793Z",updated_at:"2022-11-16T07:54:12.093Z"}}},{name:"Get Flow Status",content:"To get the current state of the existing flow, send a `GET` request to `/api/v1/flows/[:flow_id]` using the flow ID from the previous step.\n\n### Parameters\n\n- None\n\n### Response\n\n- `id` &mdash; `string` ID of the flow.\n- `state` &mdash; `string` The current state of the flow.\n - `transfer_tx_broadcasting` &mdash; Transaction has been broadcast and is waiting for confirmation.\n - `completed` &mdash; Transaction has been confirmed and the transfer is complete.\n- `actions` &mdash; `array` It includes the `name` & `inputs` of all next possible actions.\n- `data` &mdash; `object` Transfer flow & transaction data.",request:{method:"GET",header:[],url:"https://cosmos-slate.datahub.figment.io",headers:{},query:"api/v1/flows/{{cosmosTransferFlowId}}"},interactive:!1,response:{name:"Get Flow Status",body:{id:"87c3dd5f-bcbe-7934-92bd-1da47d5aca7e",state:"completed",actions:[],data:{from_account_address:"cosmos1u89ikp2v7pr95g0wv2687zleu6v8qjl9qprvzl",to_account_address:"cosmos1vxhllask0nynh20htyfkpkfthy7k3395kz9c4y",amount:"1.0",gas_price:null,gas_limit:null,memo:null,transfer_transaction:{raw:"7b226d65737361676573223a5b7b227479706555726c223a222f636f736d6f732e62616e6b2e763162657461312e4d736753656e64222c2276616c7565223a7b2266726f6d41646472657373223a22636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c222c22746f41646472657373223a22636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a38793363222c22616d6f756e74223a5b7b2264656e6f6d223a227561746f6d222c22616d6f756e74223a2231303030303030227d5d7d7d5d2c22666565223a7b22616d6f756e74223a5b7b22616d6f756e74223a2231383333222c2264656e6f6d223a227561746f6d227d5d2c22676173223a223733323839227d2c226d656d6f223a22227d",signing_payload:"2e69cd5b307af260091f58dee7fe63cbc66da049596ec2fb32234caa8e8e3a98",signed:"0a93010a90010a1c2f636f736d6f732e62616e6b2e763162657461312e4d736753656e6412700a2d636f736d6f733175383575706b3276377072363567307776323937367a6c6575367638716a6c39717072767a6c122d636f736d6f73317678686c6c61736b306e796e683230687479666b706b66746879376b333339356b7a387933631a100a057561746f6d12073130303030303012670a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2104db33d72ee215f1a61e5f4ffa098b7425cc1da6f5c3627994ad0f21a5ec6fe23512040a020801180112130a0d0a057561746f6d12043138333310c9bc041a40549391fc956e81101ba0b815b6a4297ac537ed633522a676f18c06666c1da2020e8a655c0bc8281022b4831f82c8a8b40a2a4a2736c54c3beae4fb2a0a44135e",hash:"175BF846FBCBD0B59E0DCE77D793A4C38453688B39BDDEA81C14F221892FF071",status:"confirmed",error:null,signatures:[]},account_number:721346,sequence:1,pubkey:"0a2104db33d72ee215f1a61e5f4ffa098b7425cc1da6f5c3627994ad0f21a5ec6fe235"},network_code:"cosmos",chain_code:"testnet",created_at:"2022-11-16T07:08:33.793Z",updated_at:"2022-11-16T07:54:31.594Z"}}}],service:"staking-api",networks:[{label:"Avalanche",value:"avalanche"},{label:"Cosmos",value:"cosmos"},{label:"Ethereum",value:"ethereum"},{label:"NEAR",value:"near"},{label:"Polkadot",value:"polkadot"},{label:"Polygon",value:"polygon"},{label:"Solana",value:"solana"}],network:"cosmos",proxy:"https://api-service-proxy.paulpomerleau.workers.dev",mdxType:"APIMethods"}))}b.isMDXComponent=!0}}]);